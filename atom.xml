<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[黄博文的地盘]]></title>
  <link href="http://www.huangbowen.net/atom.xml" rel="self"/>
  <link href="http://www.huangbowen.net/"/>
  <updated>2015-04-09T13:56:56+08:00</updated>
  <id>http://www.huangbowen.net/</id>
  <author>
    <name><![CDATA[黄博文]]></name>
    <email><![CDATA[huangbowen521@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Flyway， 数据库Schema管理利器]]></title>
    <link href="http://www.huangbowen.net/blog/2015/04/08/introduction-of-flyway/"/>
    <updated>2015-04-08T15:10:43+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/04/08/introduction-of-flyway</id>
    <content type="html"><![CDATA[<p>整天跟数据库打交道的程序员都知道，当数据库的Schema发生改变时是多么痛苦的事情。尤其是一个在不断开发完善的项目，随着需求变化，数据库的schema也会跟着变化，而追踪记录这些变化一向都是费时费力。如果你拥有多个测试环境，那么保证这些环境下的数据库的一致性的难度会成倍增加。</p>

<!-- more -->


<p>Flyway，一款小工具，应用它能够大大简化这方面的工作。</p>

<h2>它的优点：</h2>

<ol>
<li><p>convention over configuration，配置简单，使用方便；支持Sql及Java配置；</p></li>
<li><p>支持当前几乎所有的主流数据库；</p></li>
<li><p>拥有命令行工具、Maven、Gradle插件&hellip;.应用场景广泛。</p></li>
</ol>


<h2>使用它之前先要了解一些概念：</h2>

<ul>
<li><p>版本：对数据库的每一次变更可称为一个版本。</p></li>
<li><p>迁移：Flyway把数据库结构从一个版本更新到另一个版本叫做迁移。</p></li>
<li><p>可用的迁移：Flyway的文件系统识别出来的迁移版本。</p></li>
<li><p>已经应用的迁移：Flyway已经对数据库执行过的迁移。</p></li>
</ul>


<h2>如何使用：</h2>

<p>以Sql配置举例，建立一个文件夹用来存放所有数据库修改记录。</p>

<p>每次修改以’V版本号__描述.sql’的方式命名。比如V1__initial_version.sql， V2.1__create_table.sql,V2015.01.05__drop_view.sql</p>

<p><img src="http://www.huangbowen.net/images/SqlMigrationBaseDir.png" width="500"></p>

<p>Flyway会根据文件名自动识别版本顺序，并根据这些版本顺序来应用数据库修改。</p>

<h2>配置</h2>

<p>以使用Flyway的命令行工具为例。安装命令行工具后，运行时Flyway会根据以下路径来寻找配置文件。</p>

<ul>
<li><p>安装目录/conf/flyway.properties</p></li>
<li><p>用户目录/flyway.properties</p></li>
<li><p>当前目录/flyway.properties</p></li>
</ul>


<p>或者直接在命令行使用 <code>-configFile=myfile.properties</code>来指定文件。</p>

<p>配置文件的一个示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>flyway.driver=org.hsqldb.jdbcDriver
</span><span class='line'>flyway.url=jdbc:hsqldb:file:/db/flyway_sample
</span><span class='line'>flyway.user=SA
</span><span class='line'>flyway.password=mySecretPwd
</span><span class='line'>flyway.schemas=schema1,schema2,schema3
</span><span class='line'>flyway.table=schema_history
</span><span class='line'>flyway.locations=classpath:com.mycomp.migration,database/migrations,filesystem:/sql-migrations
</span><span class='line'>flyway.sqlMigrationPrefix=Migration-
</span><span class='line'>flyway.sqlMigrationSeparator=__
</span><span class='line'>flyway.sqlMigrationSuffix=-OK.sql
</span><span class='line'>flyway.encoding=ISO-8859-1
</span><span class='line'>flyway.placeholderReplacement=true
</span><span class='line'>flyway.placeholders.aplaceholder=value
</span><span class='line'>flyway.placeholders.otherplaceholder=value123
</span><span class='line'>flyway.placeholderPrefix=#[
</span><span class='line'>flyway.placeholderSuffix=]
</span><span class='line'>flyway.resolvers=com.mycomp.project.CustomResolver,com.mycomp.project.AnotherResolver
</span><span class='line'>flyway.callbacks=com.mycomp.project.CustomCallback,com.mycomp.project.AnotherCallback
</span><span class='line'>flyway.target=5.1
</span><span class='line'>flyway.outOfOrder=false
</span><span class='line'>flyway.validateOnMigrate=true
</span><span class='line'>flyway.cleanOnValidationError=false
</span><span class='line'>flyway.baselineOnMigrate=false
</span></code></pre></td></tr></table></div></figure>


<h2>命令行工具的几个命令：</h2>

<ul>
<li><p>Clean： 删除所有创建的数据库对象，包括用户、表、视图等。</p></li>
<li><p>Migrate： 对数据库依次应用版本更改。</p></li>
<li><p>Info：获取目前数据库的状态。那些迁移已经完成，那些迁移待完成。所有迁移的执行时间以及结果。</p></li>
<li><p>Validate：验证数据库结构与迁移脚本的异同。</p></li>
<li><p>Baseline：根据现有的数据库结构生成一个基准迁移脚本。</p></li>
</ul>


<h2>进阶</h2>

<p>flyway提供sql配置和Java配置两种方式。sql配置可以方便实现对DDL的修改、一些引用数据的修改；而Java的方式则更强大些，可以应用更为复杂的场景，比如对某个数据表中的数据进行一些逻辑处理。具体使用请参见官方文档：(<a href="http://flywaydb.org/documentation/migration/java.html">http://flywaydb.org/documentation/migration/java.html</a>)<a href="http://flywaydb.org/documentation/migration/java.html">http://flywaydb.org/documentation/migration/java.html</a></p>

<p>熟悉Ruby On Rails的程序员都知道Ruby On Rails自带一个数据库迁移工具，这个和那个差不多，可以说下JVM平台的数据库迁移工具，弥补了JVM平台下维护数据库Schema的不足。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[爱江山越野跑-又上龙山之巅]]></title>
    <link href="http://www.huangbowen.net/blog/2015/04/02/running-on-the-dragon-mountion/"/>
    <updated>2015-04-02T15:59:21+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/04/02/running-on-the-dragon-mountion</id>
    <content type="html"><![CDATA[<p><img src="http://www.huangbowen.net/images/IMG_1876.JPG"></p>

<p><img src="http://www.huangbowen.net/images/IMG_1872.JPG"></p>

<p>现在坐在窗明几净的办公室里敲代码，但是上周末那疯狂的12小时还时不时浮现在眼前。从2014年4月开始跑步，到现在刚好一年时间。在这一年里跑了3个全马比赛，2个半马比赛，还有3次越野跑比赛。但是上周末的越野跑却惨遭关门，成了目前唯一没有完赛的比赛。</p>

<!-- more -->


<p>爱江山越野跑汶川站全程有60公里，需要爬两座大山加一座小山。全程累计爬上3000米+，最高海拔3890米，关门时间14个半小时，不得不说难度很大。由于自己最近练得少，之前一周才跑了重庆马拉松，状态非常不好，所以能否完赛心里没底。重庆马拉松准备不充分，前26公里状态频出，之后改为暴走，花了5小时17分才完成，创下了全马最差纪录。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1836.JPG"></p>

<p>周六下午乘坐组委会大巴车来到汶川，入住酒店。和成都跑客的人一起吃了晚饭，就回去休息。第二天早上5点钟起床，吃早饭、排空，来到了比赛出发的地方，体育广场。做了一些热身动作之后，7点钟开跑了。由于自己知道60公里的路很漫长，所以刚开始并没有求快，按照自己最舒适的节奏奔跑。第一座小山爬升只有几百米，权当热身。接下来的第二座山爬升有1000米，自己体力尚可。过山脊有一段路很刺激，两边都是悬崖，中间还有大石头挡道，只能慢慢的爬过去。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1843.JPG"></p>

<p><img src="http://www.huangbowen.net/images/IMG_1873.JPG"></p>

<p>第二座山下坡时我逐渐落后了。下坡真是我的弱项，还没有平路快，具体原因我也不得而知。可能是胆子的问题，也可能时跑姿的问题。下完坡跑了一段公路后来到了第三座山面前。这座山累计爬升要2000米，难度巨大。尤其是刚开始的一段路，非常危险，稍不留神就会从山上滚落，直接可以不用抢救了。都是60度以上的坡，想跑根本不可能，走都难。我每走100步都要休息一下。心率老是下不去。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1844.JPG"></p>

<p>跑到半山腰后，到了CP1，吃了碗泡面感觉能量又有了，灌满水后继续前进。突然发现接下来的路和去年龙山越野跑的路基本一样，所以不怕迷路了。但是我也知道要跑到顶端的话还有15公里。而这来回共30公里的路我上次用了8小时。</p>

<p>不说了，埋头苦爬吧。连绵不绝的爬升搞的我精疲力尽，偶尔一段平路也完全跑不起来。终于到了距离山顶还有2.5公里的地方。但我知道这2.5公里要花至少1个多小时。因为这段路是最难的，不停的爬升，不停的翻山，很容易让人绝望。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1856.JPG"></p>

<p>下午3点40多终于登顶，而这里的关门时间是3点50分。下撤途中碰到了好几个还在忘山上攀爬的人，我不得不告诉他们已经被关门了，只有下撤了。下山的这段路我的短板再次爆出了。本来上山就花了很多时间，下山速度又不快，时间渐渐逼近关门点。这个时候只有懊悔自己LSD拉的不够多，平时练的不够狠。长时间的运动导致胃口特别差，随意知道自己的能力几乎耗尽，但一点也不想吃身上携带的能量胶。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1862.JPG"></p>

<p>这里有个失误的地方是我以为下山的路和上山的路是一样的，按推算剩下的时间跑完全程没有问题。但是下撤到了CP2才知道接下来还有一个总共8公里的折返。这比上山多出来的8公里直接决定了我很可能被关门。要是平时8公里小case了，不到一个小时就能搞定。但是现在我又累又饿，脚上还磨了水泡，况且还是山路，这8公里花了我将近2个小时才搞定。这样从折返点到CP1的3公里路程需要我在40分钟内完成，否则就只能被关门了。这时候天已经黑了，我已经连续奔跑了12个小时。戴着头灯奔跑在树林中，看着时间一点点流逝。CP1是8点20分关门，而我则在8点30多才赶到，只好在全程55公里接受被关门的命运。</p>

<p>回到酒店已经将近10点了。总结这次失利的原因有以下几条：</p>

<ol>
<li>体重比去年胖了10斤：</li>
<li>LSD拉的不够多；</li>
<li>下坡太弱；</li>
<li>准备不够充分，没有详细了解赛道。</li>
</ol>


<p>接下来打算暂停一些比赛，多练一练，多陪陪家人。待准备充分了再去进行下一轮冲击。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[值得使用的Spring Boot]]></title>
    <link href="http://www.huangbowen.net/blog/2015/03/18/introduction-of-spring-boot/"/>
    <updated>2015-03-18T16:42:34+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/03/18/introduction-of-spring-boot</id>
    <content type="html"><![CDATA[<p>2013年12月12日，Spring发布了4.0版本。这个本来只是作为Java平台上的控制反转容器的库，经过将近10年的发展已经成为了一个巨无霸产品。不过其依靠良好的分层设计，每个功能模块都能保持较好的独立性，是Java平台不可多得的好用的开源应用程序框架。
Spring的4.0版本可以说是一个重大的更新，其全面支持Java8，并且对Groovy语言也有良好的支持。另外引入了非常多的新项目，比如Spring boot，Spring Cloud，Spring WebSocket等。</p>

<!-- more -->


<p>Spring由于其繁琐的配置，一度被人成为“配置地狱”，各种XML、Annotation配置，让人眼花缭乱，而且如果出错了也很难找出原因。Spring Boot项目就是为了解决配置繁琐的问题，最大化的实现convention over configuration(约定大于配置)。熟悉Ruby On Rails（ROR框架的程序员都知道，借助于ROR的脚手架工具只需简单的几步即可建立起一个Web应用程序。而Spring Boot就相当于Java平台上的ROR。</p>

<p>Spring Boot的特性有以下几条：</p>

<ul>
<li><p>创建独立Spring应用程序</p></li>
<li><p>嵌入式Tomcat，Jetty容器，无需部署WAR包</p></li>
<li><p>简化Maven及Gradle配置</p></li>
<li><p>尽可能的自动化配置Spring</p></li>
<li><p>直接植入产品环境下的实用功能，比如度量指标、健康检查及扩展配置等</p></li>
<li><p>无需代码生成及XML配置</p></li>
</ul>


<p>目前Spring Boot的版本为1.2.3,需要Java7及Spring Framework4.1.5以上的支持。如果想在Java6下使用它，需要一些额外的设置。</p>

<p>如果你想创建一个基于Spring的Web应用，只是简单的在页面中输出一个’Hello World’，按照之前的老方式，你需要创建以下文件：</p>

<ul>
<li><p>web.xml : 配置使用Spring servlet，以及web其它配置；</p></li>
<li><p>spring-servlet.xml:配置Spring servlet的配置；</p></li>
<li><p>HelloController.java: controller。</p></li>
</ul>


<p>如果你想运行它的话，需要将生成的WAR包部署到相应的Tomcat或者Jetty容器中才行，这也需要相应的配置。</p>

<p>如果使用Spring Boot的话，我们只需要创建HelloController.java。</p>

<figure class='code'><figcaption><span>HelloController.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">hello</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.stereotype.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.*</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Controller</span>
</span><span class='line'><span class="nd">@EnableAutoConfiguration</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloController</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="nd">@ResponseBody</span>
</span><span class='line'>    <span class="n">String</span> <span class="nf">home</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;Hello World!&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">HelloController</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后借助于Spring Boot为Maven和Gradle提供的插件来生成Jar包以后直接运行java -jar即可，简单易用。</p>

<p>上面提过Spring Boot对Maven及Gradle等构建工具支持力度非常大。其内置一个’Starter POM’，对项目构建进行了高度封装，最大化简化项目构建的配置。另外对Maven和Gradle都有相应的插件，打包、运行无需编写额外的脚本。</p>

<p>Spring Boot不止对web应用程序做了简化，还提供一系列的依赖包来把其它一些工作做成开箱即用。下面列出了几个经典的Spring Boot依赖库。</p>

<ul>
<li><p>spring-boot-starter-web:支持全栈web开发，里面包括了Tomcat和Spring-webmvc。</p></li>
<li><p>spring-boot-starter-mail:提供对javax.mail的支持.</p></li>
<li><p>spring-boot-starter-ws: 提供对Spring Web Services的支持</p></li>
<li><p>spring-boot-starter-test:提供对常用测试框架的支持，包括JUnit，Hamcrest以及Mockito等。</p></li>
<li><p>spring-boot-starter-actuator:支持产品环境下的一些功能，比如指标度量及监控等。</p></li>
<li><p>spring-boot-starter-jetty:支持jetty容器。</p></li>
<li>spring-boot-starter-log4j:引入默认的log框架（logback）</li>
</ul>


<p>Spring Boot提供的starter比这个要多，详情请参阅文档：<a href="http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#using-boot-starter-poms">Starter POMs</a>章节。</p>

<p>如果你不喜欢Maven或Gradle，Spring提供了CLI（Command Line Interface）来开发运行Spring应用程序。你可以使用它来运行Groovy脚本，甚至编写自定义命令。安装Spring CLI有多种方法，具体请看：<a href="http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#getting-started-installing-the-cli">安装Spring Boot Cli</a>章节。</p>

<p>安装完毕以后可以运行 <code>srping version</code>来查看当前版本。</p>

<p>你可以使用Groovy编写一个Controller。</p>

<figure class='code'><figcaption><span>hello.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="nd">@RestController</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">WebApplication</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s2">&quot;/&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="n">String</span> <span class="nf">home</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;Hello World!&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后使用<code>spring run hello.groovy</code>来直接运行它。访问localhost:8080即可看到打印的信息。</p>

<p>Spring Boot提供的功能还有很多，比如对MVC的支持、外部Properties的注入，日志框架的支持等。这里就不详述了。感兴趣的可以查看其<a href="http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/">文档</a>来获取详细的信息。</p>

<p>如果你想在你的项目中使用Spring，那么最好把Spring Boot设为标配，因为它真的很方面开发，不过你也需要仔细阅读它的文档，避免不知不觉掉入坑中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[目前在做的一个web应用程序的前端选型]]></title>
    <link href="http://www.huangbowen.net/blog/2015/02/09/tech-stack-of-my-new-web-application/"/>
    <updated>2015-02-09T10:08:10+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/02/09/tech-stack-of-my-new-web-application</id>
    <content type="html"><![CDATA[<p>最近进入了一个新的项目组，要新起一个项目。这个Web项目是一个企业内部使用的系统，主要用来记录、追踪、管理潜在客户的数据。该系统有以下特点:</p>

<!-- more -->


<ol>
<li>需要支持IE10及以上版本；</li>
<li>后端采用micro service架构，全部是REST API；</li>
<li>需要与现有的CRM系统（客户管理管理系统）集成，主要采用iframe嵌入页面的方式；</li>
<li>系统开发周期为5个月左右，分为三个大的里程碑。</li>
</ol>


<p>经过多方考虑，最终选择AngularJS作为前端主要框架。
理由：</p>

<ol>
<li>该系统为WEB应用程序，符合single page application的特点；</li>
<li>由于后端采用REST API，所以前端使用AngularJS可以与其无缝对接；</li>
<li>前端页面交互逻辑不复杂，呈现的数据量不会很大，所以不会遇到AngularJS性能问题；</li>
<li>该技术栈与当前公司的技术策略相契合。</li>
</ol>


<p>当然除了AngularJS框架以外，还需要其它一系列框架来完成整个前端开发、测试、部署的流程。</p>

<ul>
<li><p>yeoman: 前端项目脚手架工具；</p></li>
<li><p>NPM: 作为本地开发过程中使用到的Node.js的管理；</p></li>
<li><p>Bower:作为前端项目使用到的依赖开的管理工具；之所以选择NPM作为开发包的管理，是因为NPM的整个依赖链是嵌套的，这样每个开发包之间不会相互影响；而Bower在管理包时依赖链是平行的，这样前端加载时无需重复加载被多次引用的依赖，保证了前端数据最小化。</p></li>
<li><p>Grunt：作为整个项目的自动化构建管理工具；</p></li>
<li><p>Karma：作为单元测试及集成测试运行工具；</p></li>
<li><p>Jasmine：单元测试及BDD框架；</p></li>
<li><p>Protractor: 驱动浏览器的框架，配合Jasmine用于端到端测试。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在AWS中创建NAT节点]]></title>
    <link href="http://www.huangbowen.net/blog/2015/01/17/create-nat-node-in-aws/"/>
    <updated>2015-01-17T23:23:15+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/01/17/create-nat-node-in-aws</id>
    <content type="html"><![CDATA[<p>NAT, Network Address Translation,即网络地址转换。当内部网络的主机想要访问外网，但是又不想直接暴露给公网，可以通过NAT节点来访问外网。这样做有两个好处，第一是内网的主机无需拥有公网IP就可访问网络（NAT节点需要公网IP），节约了公网IP；第二是内网的主机由于没有公网IP，所以公网的电脑无法访问到它，这样就可以隐藏自己。一个很经典的示例是假如你有一台数据库服务器放置在内网中，为在同一个内网中的web服务器提供数据服务，为了安全性考虑你不会把它直接暴露在公网中。但是数据库服务器有时候自己是需要访问公网的，比如需要升级数据库服务器中的某些软件等。采用NAT方案可以很好的解决这个问题。</p>

<!-- more -->


<p>下图是NAT节点的功能示意图。</p>

<p><img src="http://www.huangbowen.net/images/natnode.png"></p>

<p>一些路由器或者装有特定软件的主机都可以作为NAT节点。在AWS中如果你想创建一个NAT节点的话那是非常的方便，因为AWS直接提供了预装了NAT软件的AMI，你只需直接使用该AMI在你的公共子网中实例化一台机器，并进行相应的配置即可。</p>

<p>下面的图展示了在AWS中的一个经典的VPC架构。该VPC里面建立了两个子网，一个是公共子网，通过Intenet Geteway和公网连接；一个是私有子网，无法直接访问公网。然后在公共子网中建立了一个EC2机器，使用的是AWS提供的具有NAT功能的AMI，并为它分配了一个弹性IP，这样该EC2就是一个NAT节点。在私有子网的所有机器都具有了通过该NAT节点访问外网的能力。</p>

<p><img src="http://www.huangbowen.net/images/vpcandnat.png"></p>

<p>为了创建这样一套网络及机器，最简便的方式当然是使用AWS提供的CloudFormation了。如果不了解CloudFormation，可以看我以前写过的一篇文章 <a href="http://www.huangbowen.net/blog/2013/10/23/aws-cloudformation/">《亚马逊云服务之CloudFormation》</a>。下面展示的是创建该整个VPC的CloudFormation脚本。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;AWSTemplateFormatVersion&quot;</span><span class="p">:</span> <span class="s2">&quot;2010-09-09&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Setup a vpc, which contains two subnets and one NAT machine&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;Parameters&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;KeyName&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Name of and existing EC2 KeyPair to enable SSH access to the instance&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;VpcCidr&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;CIDR address for the VPC to be created.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;10.2.0.0/16&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;AnyCidr&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;CIDR address for Any Where.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;0.0.0.0/0&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;AvailabilityZone1&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;First AZ.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;cn-north-1a&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicSubnetCidr&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Address range for a public subnet to be created in AZ1.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;10.2.1.0/24&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetCidr&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Address range for private subnet.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;10.2.2.0/24&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATInstanceType&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Instance type for NAT&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;t1.micro&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;Mappings&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;AWSNATAMI&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;cn-north-1&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;AMI&quot;</span><span class="p">:</span> <span class="s2">&quot;ami-eab220d3&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;Resources&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;VPC&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::VPC&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;CidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VpcCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;InternetGateWay&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::InternetGateway&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;INTERNET_GATEWAY&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;GatewayToInternet&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::VPCGatewayAttachment&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;InternetGatewayId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;InternetGateWay&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicSubnet&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Subnet&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;CidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicSubnetCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;AvailabilityZone&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AvailabilityZone1&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;PUBLIC_SUBNET&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnet&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Subnet&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;CidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnetCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;AvailabilityZone&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AvailabilityZone1&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;PRIVATE_SUBNET&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;DefaultSecurityGroup&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::SecurityGroup&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;GroupDescription&quot;</span><span class="p">:</span> <span class="s2">&quot;Default Instance SecurityGroup&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;SecurityGroupIngress&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;IpProtocol&quot;</span><span class="p">:</span> <span class="s2">&quot;-1&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;CidrIp&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VpcCidr&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;DEFAULT_SECURITY_GROUP&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicRouteTable&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::RouteTable&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;PUBLIC_ROUTE_TABLE&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicRoute&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Route&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;DestinationCidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AnyCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;GatewayId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;InternetGateWay&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;RouteTableId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicRouteTable&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicSubnetRouteTableAssociation&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::SubnetRouteTableAssociation&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;RouteTableId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicRouteTable&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;SubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicSubnet&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATEIP&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::EIP&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;InstanceId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATInstance&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATInstance&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Instance&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;InstanceType&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATInstanceType&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;KeyName&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;KeyName&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;SubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicSubnet&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;SourceDestCheck&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;ImageId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Fn::FindInMap&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="s2">&quot;AWSNATAMI&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>              <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::Region&quot;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;AMI&quot;</span>
</span><span class='line'>          <span class="p">]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;SecurityGroupIds&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATSecurityGroup&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetRouteTable&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::RouteTable&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;PRIVATE_SUBNET_ROUTE_TABLE&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetRoute&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Route&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;DestinationCidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AnyCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;InstanceId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATInstance&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;RouteTableId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnetRouteTable&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetRouteTableAssociation&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::SubnetRouteTableAssociation&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;RouteTableId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnetRouteTable&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;SubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnet&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATSecurityGroup&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::SecurityGroup&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;GroupDescription&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT Instance SecurityGroup&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;SecurityGroupIngress&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;IpProtocol&quot;</span><span class="p">:</span> <span class="s2">&quot;-1&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;CidrIp&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VpcCidr&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT_SECURITY_GROUP&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;Outputs&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;VPCId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicSubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;public subnet id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicSubnet&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;private subnet id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnet&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATSecurityGroupId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT SG id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATSecurityGroup&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATEIP&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT Server EIP.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATEIP&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>你可以通过AWS提供的图形化界面AWS Management Console来使用该CloudFormation脚本，也可以通过AWS CLI来使用。使用以上的CloudFormation脚本创建的VPC可以一键创建你AWS中的基础网络架构。从此再也不用为配置网络发愁了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个程序员的2014年总结]]></title>
    <link href="http://www.huangbowen.net/blog/2014/12/31/my-conclusion-of-2014/"/>
    <updated>2014-12-31T17:08:26+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/12/31/my-conclusion-of-2014</id>
    <content type="html"><![CDATA[<p>又是一年过去了，看着周围90后在飞速成长，不得不感叹自己这一年轻的优势已经损失殆尽。唯有快马加鞭，不断努力，才能确保自己在战场上了不落后于别人，保持甚至增加自己的核心竞争力。</p>

<!-- more -->


<p>2013年底的时候写了一篇个人总结<a href="http://www.huangbowen.net/blog/2014/01/02/my-conclusion-of-2013/">http://www.huangbowen.net/blog/2014/01/02/my-conclusion-of-2013/</a>，阅读起来，一年前的我经过各种洗礼已经模糊，前途望去也是有些迷茫，希望能早日拨开云雾见阳天。</p>

<ol>
<li><p>考取了AWS的助理级架构师认证，再也不是无证的程序员了，在云计算和DevOps也算是取得了一定的成绩。俗话说，站得高，看的远，明年要学习的东西还有很多。</p></li>
<li><p>总共出差了5个月。跑到异国他乡的澳洲，体验着另一种风土人情，在客户现场也学到了平时很难接触到的知识。在此期间老婆辛苦了，表示感谢。</p></li>
<li><p>翻译了两本书。一本是《响应式Web设计:HTML5和CSS3实践指南》,另一本是《Multithreading in C# 5.0 cookbook》(1月份出版)。翻译速度比去年那本快多了。以后接书还是想找些自己感兴趣的技术方面，翻译起来动力也足些。</p></li>
<li><p>撰写了50+篇博客，大部分以技术类型为主。基本实现了每周一篇的既定目标。这些博客都是自己不断进步的见证者，希望我能一直写下去。</p></li>
<li><p>读了10+本书。其实有些汗颜，后半年基本没认真读过什么技术类书籍。自己的知识体系还需要一些理论来升华，读书就是一条捷径。自己明明知道，但是总没当回事，所以2015年一定要注意。</p></li>
<li><p>在办公室和社区做了一些演讲和工作坊，逐渐建立自己的影响力。</p></li>
<li><p>重视身体健康。4月份开始跑步，之后越跑越多，不知不觉跑了2次全程马拉松比赛和2次半程马拉松比赛，还有一次30公里越野跑。体重从80公斤减到了68公斤，小肌肉也练出来了。健身开始容易，坚持难。从4月份突然想健身，一直坚持到了现在，自己都不知道从哪里来的那么大毅力，目测我还能再坚持下去。现在每周基本要去健身房4到5次，期望自己早日练成肌肉男。</p></li>
<li><p>最大的收获还是老婆给生了个大胖小子。每天回家看到他，想想所有的辛苦都不算什么，做事情更有干劲了。感谢老婆把幺儿带的这么好。</p></li>
</ol>


<p>今年就这样了。让我们一起来迎接2015年的到来吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[定时关闭AWS上的EC2机器实例]]></title>
    <link href="http://www.huangbowen.net/blog/2014/12/26/shudown-ec2-at-certain-time/"/>
    <updated>2014-12-26T14:19:34+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/12/26/shudown-ec2-at-certain-time</id>
    <content type="html"><![CDATA[<p>最近一段时间在做一个产品从阿里云向亚马逊云中国区迁移的前期试验。亚马逊中国区并没有开放免费体验账号，使用的每一份资源都要实打实的掏钱。而为了实验我们使用时一般要启动好几台EC2实例。为了不浪费辛辛苦苦赚的钱，特写了一个脚本，在每天晚上6点将所有的EC2实例自动关闭。由于在亚马逊云中关闭的EC2实例是不收费的，只收取少量的存储费用，所以这样节省不少钱。</p>

<!-- more -->


<p>为了让一台机器可以值守这个任务，所以我们在AWS留一台机器用来定期执行关闭其它机器的命令。关闭EC2的命令主要是使用AWS提供了awscli来实现。</p>

<p>首先在这台机器上安装awscli。这台机器使用的操作系统是ubuntu 12.04，所以使用其自带的包管理器可以一键安装。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt-get install awscli
</span></code></pre></td></tr></table></div></figure>


<p>安装完毕后需要配置aws命令行工具的认证。方式有很多，最简单的是运行<code>aws configure</code>来实现。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws configure
</span><span class='line'>AWS Access Key ID <span class="o">[</span>None<span class="o">]</span>: YOURACCESSKEY
</span><span class='line'>AWS Secret Access Key <span class="o">[</span>None<span class="o">]</span>: YOURSECRTKEY
</span><span class='line'>Default region name <span class="o">[</span>None<span class="o">]</span>: cn-north-1
</span><span class='line'>Default output format <span class="o">[</span>None<span class="o">]</span>: json
</span></code></pre></td></tr></table></div></figure>


<p>或者你可以在当前用户根目录下的.aws目录中配置认证信息，详情请移步<a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html">http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html</a>.</p>

<p>接下来在当前用户根目录下创建stopinstance.sh文件，并输入以下信息.</p>

<figure class='code'><figcaption><span>stopinstance.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>#!/bin/bash
</span><span class='line'>aws ec2 stop-instances --instance-ids i-68726951 i-965ca276 i-377a620e i-d35fa133 i-fe5ca21e
</span></code></pre></td></tr></table></div></figure>


<p>这就是关闭指定EC2实例的命令，<code>--instance-ids</code>后面跟的就是你的EC2实例的id。</p>

<p>把该文件权限改为可执行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x stopinstance.sh
</span></code></pre></td></tr></table></div></figure>


<p>最后要让该命令定时执行，那么就要借助<code>crontab</code>这个命令了。</p>

<p>使用<code>crontab -e</code>来编辑batch文件，在文件最后加上下行.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>* 18 * * * ~/stopinstance.sh &gt;&gt; ~/shutdown.log
</span></code></pre></td></tr></table></div></figure>


<p>前五个字段制定命令执行的时间。第一个是分钟，第二个是小时，第三个是每月的哪天，第四个是月份，第五个是每周的哪天。配置相当灵活。</p>

<p>这句话是描述了一个batch任务，在每天的下午6点执行，会执行stopinstance.sh脚本，并把日志输出到shutdown.log文件中。</p>

<p>注意使用crontab执行任务时一定要注意当前机器的时区和你期望执行的时间所用时区是否不同。有关crontab和cron命令的进一步使用请移步<a href="http://www.adminschoice.com/crontab-quick-reference">http://www.adminschoice.com/crontab-quick-reference</a></p>

<p>至此，就大功告成了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《跑出巅峰》书评]]></title>
    <link href="http://www.huangbowen.net/blog/2014/12/22/running-on-the-way/"/>
    <updated>2014-12-22T23:42:30+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/12/22/running-on-the-way</id>
    <content type="html"><![CDATA[<p>对于很多人的成功，我们往往将其归功于天才。读了这本书，我才深刻认识到K神不是神，他也有累的时候，也有动摇的时候，绝不是我们想象中的谈笑间超越对手。但是他有强大的内心，有不服输的精神，有为了目标奋不顾身的勇气。所以，他成了K神，而普通人还是普通人。</p>

<!-- more -->


<p>今年4月份，阴差阳错开始健身。目标不求有巨大的肌肉块，只求拥有一定的线条，可以做一些极限健身的动作即可。想法很好，过程很难。但是一旦有了开端，就很难让我停下来。这可能源于我比较强的自我驱动力，凡事都要做出一点成果才可罢手。健身的这段时间，读了好几本书，《无器械健身》,《囚徒健身》、《硬派健身》&hellip;网上的文章也是看了非常多。基本上每周都要训练4到5次，并把学到的知识应用进去，逐步改进自己的健身计划。6月份意识到要花专门的时间来减脂肪，最后选定跑步作为减脂方式。第一次跑步就跑了10公里，这个开端奠定了我接下来的跑步基调。</p>

<p>每次跑步的动力就是能减去自己腹部的赘肉，尽早的凸显出腹肌。不过，跑步又给我带来另一个方面的改变。那就是对我意志的磨练，对自身的审视。跑步的时候是无聊的，机体机械的前进，大脑漫无目的的思考。一跑就是1，2个小时。8月3日参加的人生首次马拉松是对自己的一个小突破。如果换作4个月前，马拉松对我来说是一个不可想象的目标。但是4个月后，我已不再惧怕它。</p>

<p>K神在《跑出巅峰》这本书中，讲述了他从小到大的一些经历，以及在一些比赛过程中的经历。普通人中只有用力跑过的人才能与书中描述的艰难时刻的K神产生共鸣。很多时候，人不是被别人打败的，而是自己放弃了。尤其是在跑步过程中，当你的体力达到极限时，也是你意志最薄弱的时候。放弃抑或继续，每分钟要斗争很多回。</p>

<p>首马过后，我一发不可收拾，又跑了2次半马比赛和一次全马比赛。有时候，我在想我跑步的意义是什么？保持健康？那么有必要跑42公里吗？10公里已经足够了。证明自己？有什么好证明的，为啥子不写个牛逼哄哄的软件更能证明自己。显出自己比别人牛？比我跑的好的人大有人在。</p>

<p>每天跑步、健身至少要花1个小时时间，我大可用这1小时来多读几页书，多敲几行代码，那为啥子要投入到这上面来那？想了很久，我得出了结论，老子就是想跑步，就是想健身，咋个了。Follow my heart！每次训练都是通往成功的一小步，都是对自己意志力的一次磨练。每天花1个小时不仅得到了健康的体魄，还磨练了自己的意志力，何乐而不为！</p>

<p>跑过了巨人之旅，你已不是你（脱胎换骨啊！）。而我想说，跑过了马拉松，你已超越了自我。2015年，百公里越野，我期望在终点遇到更好的我！</p>

<p>也许我有跑累的那天，但是我跑过！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS re:Invent 2014回顾]]></title>
    <link href="http://www.huangbowen.net/blog/2014/11/25/aws-reinvent-conference/"/>
    <updated>2014-11-25T11:38:26+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/11/25/aws-reinvent-conference</id>
    <content type="html"><![CDATA[<p>亚马逊在2014年11月11-14日的拉斯维加斯举行了一年一度的re:Invent大会。在今年的大会上，亚马逊一股脑发布和更新了很多服务。现在就由我来带领大家了解一下这些新服务。</p>

<!-- more -->


<h2>安全及规范相关</h2>

<h3>AWS Key Management Service</h3>

<p>该服务可用于管理数据加密秘钥，以及使用硬件设备来保护秘钥。它与Amazon EBS，Amazon S3及Amazon Redshift高度集成。还与CloudTrail集成，可提供所有秘钥使用情况的日志。</p>

<h3>AWS Config(预览)</h3>

<p>这是个配置管理服务，可以监控和记录你对AWS资源的使用情况及配置修改历史。通过它你能轻易得到你所使用的所有AWS资源情况，以及各自的配置细节，并且能够追溯任何资源的历史配置情况。</p>

<h3>AWS Service Catalog</h3>

<p>AWS Service Catalog可以让管理员创建和管理一组资源，只有包含在该组中的资源才能被指定终端用户访问。这保证了服务的隔离性和安全性，快速响应市场变化。</p>

<h2>应用程序生命周期管理工具</h2>

<h3>AWS CodeDeploy</h3>

<p>顾名思义，就是代码部署服务。其实现将代码部署到EC2实例的自动化功能。并且它与你的基础设施紧密结合，天生具有可伸缩性，不管是部署到1台EC2还是1千EC2都得心应手。</p>

<h3>AWS CodeCommit</h3>

<p>一个云端的代码托管服务。如果你的程序使用的是Git版本控制工具，可以与它很轻松的集成。CodeCommit还提供一个在线代码工具，可以通过它来浏览、编辑项目，进行项目协作。（这Y听起来有点像GitHub啊）。</p>

<h3>AWS CodePipeline</h3>

<p>难道是另一款Jenkins或Go Server工具？CodePipeline提供了持续部署和发布的自动化服务。从迁入代码、构建代码、测试、部署、上线一气呵成。并且可以将第三方工具集成到发布流程中。这款工具我还是比较期待的，不知道它会给持续交付带来什么样的变化。</p>

<h2>数据库服务</h2>

<h3>Amazon RDS for Aurora</h3>

<p>Amazon Aurora是一款兼容MySQL的关系型数据库引擎。它既具备高档商业数据库的的速度及可用性优点，也具有开源数据库的简单和成本低廉等优点。其实我并不明白在当前No SQL大行其道的情况下，为什么亚马逊会推出一款关系型数据库引擎，让我们拭目以待吧。</p>

<h2>容器服务</h2>

<h3>Amazon EC2 Container Service</h3>

<p>最近一段时间Docker火的不行，亚马逊对Docker容器的支持也不甘落后。它直接发布了一个EC2 Container Service，内置对Docker的支持，提供了一系列API来方便对Docker容器程序的管理。</p>

<h2>计算服务</h2>

<h3>AWS Lambda</h3>

<p>AWS Lambda是一个计算服务，提供对事件或通知的快速响应机制。看起来是一个神奇的服务。收费方式是根据请求次数以及计算执行时间，完全是按需收费。具体使用场景目前还不得而知。</p>

<h2>对一些已有服务的更新</h2>

<h3>Amazon EC2 C4 instances</h3>

<p>这次亚马逊提供了个全新的EC2类型- C4。 C4实例基于Intel Xeon E5-2666 V3,主频高达2.9GHz，专门设计用来进行计算密集型的操作。可适用于高性能计算要求的场景，比如运行应用程序，游戏服务，Web服务等。</p>

<h3>Amazon EBS</h3>

<p>亚马逊将会增加普通用途的SSD及Provisioned IOPS(SSD)卷的性能和大小。普通用途的SSD最大可达16TB，IOPS可达10000。而Provisioned IOPS(SSD)卷最大可达16TB，IOPS可达20000。当将EBS附加到优化EBS实例上时，普通用途的SSD卷MBps最高可达160，而Provisioned IOPS(SSD)可达320 MBps。</p>

<hr />

<p>这次大会发布的服务大部分要等到2015年初才能开始体验。中国区region就更晚了。总体来说，体现出re:Invent的服务不是很多，但也有不少值得期待。AWS作为云服务厂商的领军人物，自身实力毋庸置疑，改革、创新也是大刀阔斧。只不过我感觉它横跨IASS,PASS,SASS三大领域，包罗万象，越来越臃肿，有些服务是否画蛇添足不得而知。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014年西昌邛海湿地马拉松赛]]></title>
    <link href="http://www.huangbowen.net/blog/2014/11/18/xichang-marathon/"/>
    <updated>2014-11-18T23:14:41+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/11/18/xichang-marathon</id>
    <content type="html"><![CDATA[<p>在今年9月份听说西昌要举行国际马拉松时就非常期待这个赛事。西昌我还没去过，可以趁机去旅游。赛道还是围着美丽的邛海一周，那景色肯定美翻了。当得知通过成都跑客组织可以组团报名时，第一时间就报了名。</p>

<!-- more -->


<p>时间一晃就接近11月了，自从9月初膝盖痛以后跑步训练就减少了。10月份训练也不系统，只跑过一次10公里，剩下的都是不值一提的5，6公里。本来打算西昌马拉松跑进4小时的目标也发生了动摇。想着只求完赛就行。</p>

<p>11月7日下午和老婆去奎哥家吃了饭，就坐上了去西昌的火车。8号早上到了西昌，大学同学国美把我们接到她家里短暂休息下，然后去领了跑手包。要说西马的跑手包我还是挺喜欢的，以后拿回去也可以装足球、篮球用。</p>

<p>中午和老婆去邛海逛了一圈，骑了两个小时自行车，感觉有些运动过量，希望不会影响明天跑马的状态。下午又回到市里领了成都跑客团服，挺亮骚的。还拿了能量棒和盐丸，肌酸丸。这些玩意以前都没吃过，但是为了这次马拉松能跑出好成绩，也就拼了。本来买的是能量胶，结果没订到货，松了几根能量棒，这个变动也为明天的比赛埋下了伏笔。</p>

<p><img src="http://www.huangbowen.net/images/xcmarathon1.jpg" width="600"></p>

<p>9号早上6点半就起来了，吃了碗面，就赶去了起点。起点在西昌的火把广场，有很多极具民族特色的表演。不过我急于照相和热身，没杂看。听说吉克隽逸也来到现场为选手加油，咱也没看到。我在全程马拉松检录区碰到了同事显军。之前知道他一直在坚持训练，这次西马的目标是进4个小时。我跑西马前也是比较纠结的，刚开始也想破4，甚至想进3小时50分，但是鉴于10月份基本没咋训练过，大赛临头变成了随遇而安，完赛就成。我们商量了一下以后，决定一起跟着4小时的配速员跑。我也打定了4个小时完赛的主意。</p>

<p><img src="http://www.huangbowen.net/images/xcmarathon2.jpg" width="600"></p>

<p>枪声响了，庞大的队伍开始蠕动。我将GPS手表置于开启状态，正式开启了42公里的下地狱节奏。4小时的配速员有3个，两男一女，排成一排。我就跟在他们后面，不紧不慢的跑着。刚开始配速是5分30秒，这个配速我跑起来一点也不吃力。因为我半程马拉松最好配速是5分钟，足足慢了30秒。这次马拉松组委会宣称报名的有1万多人，当然大部分都是迷你马拉松，全程马拉松只有几千人吧。整个航天大道都是跑马的人，头顶还有直升机超低空航拍，那气氛相当好啊。在这种气氛带动下，我们跑起来也是格外卖力。</p>

<p>不知不觉10公里就过去了，我一点也没觉得累，反而更加放松。我吃了半个能量棒，补了一颗盐丸。还有30多公里，要早点补充能量。我们紧跟着配速员又跑了10公里，中途上了个厕所，等出来的时候配速员已经在50米开外了。就是这50米，我足足追了2公里才追上。我感觉体内储备的能量已经不足了，但是能量棒这个玩意不配合水实在难吃，不如能量胶方便，直接挤到嘴巴就成。我勉强补了半根。显军在22公里处已经逐渐跟不上兔子了。我在兔子后面还坚持着，本来想等一下他，但是又怕这口气松了以后就再难紧起来了，只好时不时的朝后面给他加油，直到再也看不到他。</p>

<p>30公里到了。4小时军团逐渐开始有人掉队。我上次马拉松就是在30公里撞墙的，这次准备充分，希望撞墙时间能够往后多延延。为了缓解劳累，我边跑边欣赏美丽的邛海。西昌马拉松好处是几乎没有折返，全程基本都是围着美丽的邛海，所以跑步的路上一直充满了新鲜感。兔子的速度也逐渐慢了下来，我也抓紧时间喘口气。邛海的跑道坡度还算稍微有点多的，前30公里还好。后面一看到上坡我就想骂娘。上、下坡会打破跑步节奏，在体内电解质失衡的情况下很容易诱发抽筋。一旦抽筋就什么都是浮云了。</p>

<p><img src="http://www.huangbowen.net/images/xcmarathon4.JPG" width="600"></p>

<p>就这样又坚持了5公里，35公里了。鬼门关到了，我的配速已经降到很低了，恰好这个时候GPS手表也没电了。真是FUCK啊。4小时军团也可怜的剩下了3个人。我们3个相互鼓励着又跑了3公里。另一个人说只剩下4公里了，离4小时还有将近半小时，我又燃起了冲击4小时的斗志。但是奈何腿脚不听使唤，而且我明显感到左脚磨了个大血泡，每跑一步都感到痛。第39公里的时候我跟不上兔子了。就这样眼睁睁的看着跟了39公里的肚子离我而去。当跑到40公里时，我看到了一个计时牌，时间已经流逝了3小时48分了。如果想冲击4小时的目标，我要在12分内完成2公里195米。换做平时这根本不费吹灰之力。但是现在对我来说却是不可能完成的任务。我想加速，奈何腿脚不停使唤，而且我感到它们都处于抽筋的边缘，一旦加速弄不好就会抽筋。我知道冲击4小时的目标基本是落空了，心里反而坦然了，就这样维持这个节奏跑完最后的几公里吧。</p>

<p>我沿着跑道机械式的前进，渐渐看到了终点的拱门。人群也逐渐多了起来，我调整了步伐，跑姿，以尽量的优美的姿势跑完了这最后的几十米。当我冲过终点的时候，时间也定格在了4小时04分。西昌马拉松终于完成了。</p>

<p><img src="http://www.huangbowen.net/images/xcmarathon3.jpg" width="600"></p>

<p>说实话，这次西昌马拉松全程42公里我跑的还是挺轻松的，没有第一次跑马拉松时那种到最后要死要活的感觉。而且这次马拉松我坚持全程没有停顿和任何步行，全程都是跑下来的（当然，上了一次厕所除外），这对我来说也是个巨大的成就。有人说，跑马拉松，前30公里都是跑着玩的，30公里后才是真正较量的开始。我开始有些认同这些话了。30公里后，是拼耐力、拼毅力的时刻。有人前30公里跑的很快，但是力气耗尽后就开始步行或休息。只有意志坚定、安排合理的人才会从头冲到尾，成为最后的赢家。我们4小时军团在30公里后超人无数，这也导致了我全程马拉松排名在172名。终于有名次了，呵呵！</p>

<p><img src="http://www.huangbowen.net/images/xcmarathonresult2.png" width="600"></p>

<p>这次西昌马拉松没有进4小时，没关系。好好准备准备，明年3月份的重庆马拉松再来。还有2015年的50公里、100公里越野赛也要开始准备了。明年要超尝试的事情还多的很那！</p>

<p><img src="http://www.huangbowen.net/images/xcmarathon5.jpg" width="600"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[六个月减肥总结]]></title>
    <link href="http://www.huangbowen.net/blog/2014/11/02/fitness-in-six-month/"/>
    <updated>2014-11-02T20:27:27+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/11/02/fitness-in-six-month</id>
    <content type="html"><![CDATA[<p>健身了6个月，成功减去了将近30斤赘肉，身体更强壮、更健康了。很多人都很关心我是怎么做到的，现在我就写一篇文章来总结下。</p>

<!-- more -->


<p><img src="http://www.huangbowen.net/images/onemonth1.jpeg"></p>

<p><img src="http://www.huangbowen.net/images/sixmonth.jpg"></p>

<p>这是5月份和9月底的对比图。</p>

<h2>为什么想要健身</h2>

<p>拥有一身漂亮的肌肉（或者美丽的线条）是很多男生、女生的梦想。而对大多数人来说，也只是梦想而已，不会付出实际行动。我在今年4月份的时候突然冒出一个念头，如果自己经过一段时间的锻炼，能够塑造出怎样的形体那？说干就干，这样就开启了我的健身之路。</p>

<h2>如何开始</h2>

<p>买上一双跑鞋，开跑吧！跑步绝对是减脂的利器。我从今年6月份开始跑步，到现在累计跑步至少有500公里以上了。我每次跑步基本上都是10公里，时间在1小时左右，这样最有利于脂肪的燃烧。跑完以后的通透感比你考试考了100分还爽！就是靠着跑步，我减去了大部分赘肉。并且跑着跑着，逐渐把距离加长，从10公里到15公里，18公里，20公里，直到8月份跑了人生第一个马拉松。俗话说，跑步百利，唯伤一膝。如果你平时不怎么运动，突然开始跑步的话，一定要注重对膝盖的保护。可以采取跑一天休一天，每天做40个深蹲等方式。</p>

<p>这是我8月份部分跑步记录。8月份不完全统计跑了260公里+。</p>

<p><img src="http://www.huangbowen.net/images/runningrecord.png"></p>

<h2>遇到瓶颈期怎么办</h2>

<p>减脂有个特点，就是刚开始运动就刷刷的掉肉，但到一定阶段后就会停滞不前，这时就到了所谓的瓶颈期。很多人容易在这个时候放弃，岂不知之前减掉的大部分是水分，而这时候减的才是实打实的脂肪。如果遇到瓶颈期，就需要加强运动强度了。之前你已经跑步了一段时间，心肺功能已经得到了很大提升，可以上点高强度的有氧运动了。我选的是insanity有氧健身操。这个直接在家里就可以做，还贴心的有课表，只需跟着课表每天无脑练下去，简单粗暴。而且有氧健身操又蹦又跳，提高了我身体的灵活性和协调性，反过来又会提高我的跑步能力。正是练了一个月的insanity，我的半程马拉松最好成绩提高了8分钟之多。</p>

<p>这是我记录的5月到7月的体重变化情况。两个月总共瘦了10斤。</p>

<p><img src="http://www.huangbowen.net/images/weighting.jpg"></p>

<h2>力量训练也要跟上</h2>

<p>如果你只是为了减脂，我希望力量训练也不落下。因为很多有氧运动其实也需要力量的支撑，比如跑步对腰腹力量及腿部肌肉群都有要求。力量训练锻炼方法非常简单，就是做俯卧撑和深蹲。这些运动没有空间和时间的限制，哪怕你有一分钟的空闲时间，也可以做上几十个俯卧撑和深蹲。我刚开始标准俯卧撑一组只能做10个，练了2个月后轻松做30个，现在一组最多可以做50个标准俯卧撑。俯卧撑的变种有上百种，难度不一，多试几种可以增加你做俯卧撑的乐趣。深蹲可以锻炼大腿肌肉，也可以锻炼膝盖，是跑步爱好者必练的动作。深蹲变种也很多，《囚徒健身》中有说明，有兴趣可以看看这本书。</p>

<p>如果有条件去健身房也行。我从刚开始器械都不会用，到后来专门指定训练计划，每天只练一块肌肉群，花了3个月时间才逐渐找到力量训练的感觉。</p>

<h2>饮食与训练同等重要</h2>

<p>健身界有句行话叫“三分练，七分吃”，可见饮食的重要性。减脂的核心理念就是每天的运动消耗热量小于摄入的热量。一小块蛋糕的热量就够你跑10公里了，一瓶碳酸饮料够你跳半小时健身操了。我平时不吃高热量食物，早餐、午餐照常吃，晚餐减半，有时候不吃。严格的饮食规律可以事半功倍。</p>

<hr />

<p>题目谈的是健身，其实文章里面更多的讲的是如何减脂，可能大部分人都关心这个。我的目的是拥有一定的肌肉和线条，减脂只是健身的副产品。说白了减脂很简单，就是六个字：”管住嘴，迈开腿“，然后坚持执行这句话6个月，绝对让你拥有你想要的身材。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS助理架构师认证考经]]></title>
    <link href="http://www.huangbowen.net/blog/2014/10/27/how-to-pass-the-aws-certification/"/>
    <updated>2014-10-27T21:06:36+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/10/27/how-to-pass-the-aws-certification</id>
    <content type="html"><![CDATA[<p>上周考了亚马逊的解决方案架构师-助理级别的认证考试并顺利通过。这也算是对自己AWS服务熟悉程度的一种检验。在准备考试的过程中，把自己学习到的AWS知识都梳理了一遍，也算是收获颇丰。这次特意分享了该认证考经。</p>

<!-- more -->


<h2>什么是AWS认证？</h2>

<p>AWS 认证是对其在 AWS 平台上设计、部署和管理应用程序所需的技能和技术知识的一种认可。获得证书有助于证明您使用 AWS 的丰富经验和可信度，同时还能提升您所在的组织熟练使用基于 AWS 云服务应用的整体水平。</p>

<p>目前亚马逊推出了Solutions Architect,Developer和SysOps Administrator三个方向的认证。每个方向又分为Associate Level(助理级)，Professional Level（专家级）和Master Level（大师级）。当然目前只有Solutions Architect开放了Professional Level,其他层级会逐步开放中。</p>

<p><img src="http://www.huangbowen.net/images/cert_roadmap_Q214_EN.png"></p>

<h2>我的AWS使用经验</h2>

<ul>
<li><p>本人于2013年注册了AWS账号，开始只是做些小实验玩，后来把自己的整个博客都迁移到了AWS上，使用了Route53，S3，CloudFront等服务。</p></li>
<li><p>在办公室做过Chef，CloudFormation，AWS云服务Overview等session。</p></li>
<li><p>2014年参加过亚马逊在成都举办的AWSome day活动，也算是对AWS云服务有了一个系统性了解。</p></li>
<li><p>使用Qwiklabs动手实验室在里面做过所有免费的实验，也借助里面的资源做了一些其它实验。</p></li>
<li><p>参加了一次亚马逊的在线课堂，内容是Auto Scaling。</p></li>
</ul>


<h2>考前准备</h2>

<ul>
<li><p>仔细研究了<a href="http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_blueprint.pdf">AWS助理架构师考试大纲</a>，明确了自己和大纲要求的差距。</p></li>
<li><p>仔细研读了样题，了解了考试体型和方式，并且写了篇文章解析了样题。地址：<a href="http://www.huangbowen.net/blog/2014/10/22/aws-cert-sample-question/">http://www.huangbowen.net/blog/2014/10/22/aws-cert-sample-question/</a></p></li>
<li><p>进行过两次模拟考试。每次模拟考试20美元，每次有20道题。第一次是考前一周做的，只对了9道，惨败。第二次是考试前一天做的，对了14道，过关。</p></li>
<li><p>根据模拟考试的薄弱环节进行了补强，深入了解了VPN，IAM，Data Security等方面的知识。</p></li>
<li><p>大量查阅了<a href="http://aws.amazon.com/cn/documentation/">AWS的文档</a></p></li>
</ul>


<h2>考试</h2>

<p>考试地点还是比较高大上的，在春熙路附近一座写字楼里。考试中心其实地方很小，就一个前台和一个办公室。前台接待我过后，就在会议室电脑上连接上了考试系统，然后她就出去了。也就是说基本算无人监考。正式考试有55道题，考试时间80分钟，全英文。题目都是选择题，有单选与多选，题目会明确告诉你有几个正确选项（如果没说就只有一个）。</p>

<p>可以说这些考题综合性非常强。有些很考察动手经验，有些则会考察具体服务的应用场景。如果只是对AWS云服务有肤浅认识的话，绝对是过不了的。我用了50多分钟时间做完了全部55道题，有25道题不确定答案。这给我留下了20多分钟来对这20多道题再进行斟酌。时间还是挺充裕的。有些题目你不知道就是不知道，除非能查阅相应文档或者动手做一下实验看一下，光想是想不出来的。</p>

<p>80分钟后自动交卷，这次正确率是65%，涉险过关（听别人说拿证的最低正确率就是65%）。我感觉做对的比例要高于65%的，可能还是自己对AWS有些知识点不熟悉。</p>

<p>交卷以后会立马知道成绩，邮箱里也会收到认证证书与可以使用的认证logo。</p>

<h2>一些Tips</h2>

<p>接下来是一些Tips给想要考取该证的人。</p>

<ul>
<li><p>首先了解AWS认证:<a href="http://aws.amazon.com/certification/">http://aws.amazon.com/certification/</a>，了解助理架构师考试大纲：<a href="http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_blueprint.pdf">http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_blueprint.pdf</a></p></li>
<li><p>阅读考试常见问题：<a href="http://aws.amazon.com/cn/certification/faqs/">http://aws.amazon.com/cn/certification/faqs/</a></p></li>
<li><p>必须读AWS白皮书：<a href="http://media.amazonwebservices.com/AWS_Overview.pdf">http://media.amazonwebservices.com/AWS_Overview.pdf</a></p></li>
<li><p>熟悉考试样题：<a href="http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_examsample.pdf">http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_examsample.pdf</a></p></li>
<li><p>动手做实验，可以使用动手实验室，免费蹭资源：<a href="https://run.qwiklab.com">https://run.qwiklab.com</a></p></li>
<li><p>AWS文档中主要的service必须要过一遍，比如EC2，S3，VPC，EBS等。<a href="http://aws.amazon.com/cn/documentation/">http://aws.amazon.com/cn/documentation/</a></p></li>
<li><p>阅读各种云服务的常见问题：<a href="http://aws.amazon.com/cn/faqs/">http://aws.amazon.com/cn/faqs/</a></p></li>
<li><p>最好做一次模拟考试，熟悉考试的方式，题目类型，记住不熟悉的知识点然后加强。</p></li>
<li><p>这是从网上找的一个部分题目，可以了解下。<a href="http://quizlet.com/35935418/detailed-questions-flash-cards/">http://quizlet.com/35935418/detailed-questions-flash-cards/</a></p></li>
</ul>


<hr />

<p>总体来说AWS助理级架构师考试不算很难，但前提是你做好了充分准备的基础了。虽然你有可能长期使用AWS服务，但并不保证你能裸考过关。因为这是架构师认证，有些问题和场景可能你并没有经历过，有些服务你并没有使用过，在考试中这些缺点都会被放大。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS助理架构师样题解析]]></title>
    <link href="http://www.huangbowen.net/blog/2014/10/22/aws-cert-sample-question/"/>
    <updated>2014-10-22T20:33:42+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/10/22/aws-cert-sample-question</id>
    <content type="html"><![CDATA[<p>AWS 认证是对其在 AWS 平台上设计、部署和管理应用程序所需的技能和技术知识的一种认可。获得证书有助于证明您使用 AWS 的丰富经验和可信度，同时还能提升您所在的组织熟练使用基于 AWS 云服务应用的整体水平。</p>

<!-- more -->


<p>目前亚马逊推出了Solutions Architect,Developer和SysOps Administrator三个方向的认证。每个方向又分为Associate Level(助理级)，Professional Level（专家级）和Master Level（大师级）。当然目前只有Solutions Architect开放了Professional Level,其他层级会逐步开放中。</p>

<p><img src="http://www.huangbowen.net/images/cert_roadmap_Q214_EN.png"></p>

<p>最近在打算备考AWS的Solutions Architect的Associate Level。关于这个考试AWS出了一个考试样题。下载链接：<a href="http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_blueprint.pdf">http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_blueprint.pdf</a></p>

<p>我把样题都做了一遍，并且都尽力找到了答案在AWS文档中的出处。以下是样题和解答。</p>

<p>Amazon Glacier is designed for: (Choose 2 answers)</p>

<p>A.active database storage.</p>

<p>B.infrequently accessed data.</p>

<p>C.data archives.</p>

<p>D.frequently accessed data.</p>

<p>E.cached session data.</p>

<p>答案：B和C</p>

<p>出处文档：<a href="http://aws.amazon.com/glacier/?nc2=h_ls">http://aws.amazon.com/glacier/?nc2=h_ls</a></p>

<blockquote><blockquote><p>Amazon Glacier is an extremely low-cost cloud archive storage service that provides secure and durable storage for data archiving and online backup. In order to keep costs low, Amazon Glacier is optimized for data that is infrequently accessed and for which retrieval times of several hours are suitable.</p></blockquote></blockquote>

<p>Your web application front end consists of multiple EC2 instances behind an Elastic Load Balancer. You
configured ELB to perform health checks on these EC2 instances. If an instance fails to pass health
checks, which statement will be true?</p>

<p>A.The instance is replaced automatically by the ELB.</p>

<p>B.The instance gets terminated automatically by the ELB.</p>

<p>C.The ELB stops sending traffic to the instance that failed its health check.</p>

<p>D.The instance gets quarantined by the ELB for root cause analysis.</p>

<p>答案：C</p>

<p>出处文档：<a href="http://aws.amazon.com/elasticloadbalancing/?nc2=h_ls">http://aws.amazon.com/elasticloadbalancing/?nc2=h_ls</a></p>

<blockquote><blockquote><p>Elastic Load Balancing ensures that only healthy Amazon EC2 instances receive traffic by detecting unhealthy instances and rerouting traffic across the remaining healthy instances.</p></blockquote></blockquote>

<p>You are building a system to distribute confidential training videos to employees. Using CloudFront, what
method could be used to serve content that is stored in S3, but not publically accessible from S3
directly?</p>

<p>A.Create an Origin Access Identity (OAI) for CloudFront and grant access to the objects in your S3
bucket to that OAI.</p>

<p>B.Add the CloudFront account security group “amazon-cf/amazon-cf-sg” to the appropriate S3 bucket
policy.</p>

<p>C.Create an Identity and Access Management (IAM) User for CloudFront and grant access to the
objects in your S3 bucket to that IAM User.</p>

<p>D.Create a S3 bucket policy that lists the CloudFront distribution ID as the Principal and the target
bucket as the Amazon Resource Name (ARN).</p>

<p>答案：A</p>

<p>OAI介绍：<a href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html">http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html</a></p>

<p>OAI基本上就是专为这个场景引入的。</p>

<p>Which of the following will occur when an EC2 instance in a VPC (Virtual Private Cloud) with an
associated Elastic IP is stopped and started? (Choose 2 answers)</p>

<p>A.The Elastic IP will be dissociated from the instance</p>

<p>B.All data on instance-store devices will be lost</p>

<p>C.All data on EBS (Elastic Block Store) devices will be lost</p>

<p>D.The ENI (Elastic Network Interface) is detached</p>

<p>E.The underlying host for the instance is changed</p>

<p>答案：B E</p>

<p>这个题难度比较高。可以用排除法，A，C，D肯定不能选，B是对的，那么剩下一个答案只有E了啊。</p>

<p>In the basic monitoring package for EC2, Amazon CloudWatch provides the following metrics:</p>

<p>A.web server visible metrics such as number failed transaction
requests</p>

<p>B.operating system visible metrics such as memory utilization</p>

<p>C.database visible metrics such as number of connections</p>

<p>D.hypervisor visible metrics such as CPU utilization</p>

<p>答案：D</p>

<p>注意题干说的是basic monitoring,A,B,C肯定不对。具体支持的监控指标可见<a href="http://docs.aws.amazon.com/zh_cn/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html#ec2-metrics">http://docs.aws.amazon.com/zh_cn/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html#ec2-metrics</a>。D是唯一接近正确答案的，但是我对hypervisor了解不多，有些迷惑人。</p>

<p>Which is an operational process performed by AWS for data security?</p>

<p>A.AES-256 encryption of data stored on any shared storage device</p>

<p>B.Decommissioning of storage devices using industry-standard practices</p>

<p>C.Background virus scans of EBS volumes and EBS snapshots</p>

<p>D.Replication of data across multiple AWS Regions</p>

<p>E.Secure wiping of EBS data when an EBS volume is unmounted</p>

<p>答案：B</p>

<p>具体可以查看 was security whitepaper: <a href="https://media.amazonwebservices.com/pdf/AWS_Security_Whitepaper.pdf">https://media.amazonwebservices.com/pdf/AWS_Security_Whitepaper.pdf</a></p>

<p>Storage Device Decommissioning 小节里面有这么一句话：</p>

<blockquote><blockquote><p>All decommissioned magnetic storage devices are
degaussed and physically destroyed in accordance with industry-standard practices.</p></blockquote></blockquote>

<p>To protect S3 data from both accidental deletion and accidental overwriting, you should:</p>

<p>A.enable S3 versioning on the bucket</p>

<p>B.access S3 data using only signed URLs</p>

<p>C.disable S3 delete using an IAM bucket policy</p>

<p>D.enable S3 Reduced Redundancy Storage</p>

<p>E.enable Multi-Factor Authentication (MFA) protected access</p>

<p>答案：A</p>

<p>出处文档:<a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html">http://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html</a></p>

<blockquote><blockquote><p>Versioning-enabled buckets enable you to recover objects from accidental deletion or overwrite.</p></blockquote></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[翻译-DevOps究竟是什么？]]></title>
    <link href="http://www.huangbowen.net/blog/2014/10/03/what-exactly-is-devops/"/>
    <updated>2014-10-03T21:34:43+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/10/03/what-exactly-is-devops</id>
    <content type="html"><![CDATA[<p>原文地址:<a href="http://www.drdobbs.com/architecture-and-design/what-exactly-is-devops/240009147">http://www.drdobbs.com/architecture-and-design/what-exactly-is-devops/240009147</a>
作者:Neil Garnichaud</p>

<p>软件开发目前的最新趋势是DevOps文化，即开发人员和运营人员一起确保软件以最低的故障率运行。</p>

<!-- more -->


<p>很多组织发现他们面临这样的挑战，即随着云的Web应用程序的发展，要求快速发布以便及时响应来自用户社区的问题或请求。及时响应用户需求是每个软件开发团队的目标，但是会给组织内的功能团队造成压力。压力往往导致更多的缺陷和对团队持续性的打断。DevOps通过构建一种开发和运营（这就是DevOps名字的由来）之间的关系来试图解决该问题。在该结构中，开发团队支持运营需求，比如部署脚本，异常诊断，以及从周期最开始就进行的负载和性能测试；而运营团队在软件部署前，部署时及部署后向开发团队提供知识支持和及时的反馈。</p>

<p>DevOps是很多软件开发团队正在前进的方向。他们之前忍受着组织给予的压力，即在QA缺少时间测试的情况下还要生产高质量的代码。而DevOps是一个新的环境，如果开发人员想要成功，就不得不有所调整。在截止期限的压缩，分为开发，QA，产品的故事墙成为了敏捷的阻碍。DevOps试图打破这个墙。现在，团队协作能力变得与技术能力一样重要。因此，单一关注最终用户的体验，来看其是如何影响业务的。DevOps并不是新的工具或组织，而是新的文化和流程。它是开发，QA以及运营相互工作来加快开发和解决问题。</p>

<h2>为什么开发人员需要DevOps</h2>

<p>DevOps对于开发人员来说是好事。开发人员想工作于DevOps为导向的组织中，有三个主要的原因：</p>

<ul>
<li><p>更好的生活质量。DevOps模式的开发人员很少会在半夜接到电话要求解决产品问题。这是因为问题在产生灾难性之前已经被发现，主动监控比被动警告要好的多。</p></li>
<li><p>引以为豪的所有权。传统的软件流程中，一旦软件被部署，就被“甩手扔给了”QA，然后甩手扔到了产品环境。所以最终用户看到的可能与开发人员编写的完全不同。但在DevOps模式下，编写的即是发布的，因为开发人员在代码被交给QA甚至到产品环境后，仍可以继续查看和访问代码。换句话说，开发人员拥有从创建到实现的整个交付过程的代码所有权。</p></li>
<li><p>更多相关的工作。开发人员和大多数人类一样，在真实世界中相关的工作中更容易得到满足感。因为在传统组织中的开发人员是孤立的，他们经常虚构用户场景来模拟问题。当出问题的时候他们只能尽量模拟接近这个问题。在DevOps模式中，场景是真实的。环境是经过负载测试的，比如，在软件被放入产品环境之前会测试是否能正确工作。另一个例子是测试脚本本身可以测试产品你环境，而不仅仅是模拟环境。将测试结果分享给开发人员，给予了开发人员查看在真实条件下他们编写的代码的性能的机会。</p></li>
</ul>


<h2>已经实现DevOps意味着什么</h2>

<p>可能你的组织已经采用了DevOps模型。有三个问题可以让你清楚的了解DevOps的实行情况：</p>

<ul>
<li><p>你作为一个开发人员，能够实时获取故障信息吗？</p></li>
<li><p>产品环境中是否使用了开发团队的测试及其它工具来验证产品环境是否能正常工作？</p></li>
<li><p>作为开发人员，你是否视网络团队为你的合作伙伴？</p></li>
</ul>


<p>如果这些回答都是“否”，那么你并未真正实现DevOps。有一些建议可以改进该情况。先从工具说起。DevOps是文化和流程高于组织，工具可以帮助执行最佳实践。特别是跨团队共享故障信息。这要求在软件中添加更多的检测信息以便查看软件在QA及产品环境中的执行情况，而不仅仅是开发环境中。这些代码会捕获错误，检查系统参数，报告功能超时，以及返回程序执行期间的其它值，并将其写入到日志文件中。</p>

<p>在孤立的环境中，一旦代码被发布到产品环境中，开发人员往往不能再查看这些日志文件。在DevOps世界中，开发人员可以查看任意环境中的日志文件，不管是开发环境，QA环境还是产品环境。这样不仅可以快速修复缺陷，也可以避免同样的缺陷出现在将来的发布中。这使得开发自身对业务能更快速，更具响应性，把敏捷质量引入到敏捷开发中。</p>

<h2>打破旧习惯</h2>

<p>DevOps也要求打破旧习惯。比如自然倾向是软件bug数量作为衡量质量的方式。但修复单个bug并不意味着能更快的创建无bug的软件。更好的衡量方式是处理bug的流程。换句话说，整个流程中是那个环节引入这个bug的？例如，是因为开发人员本地的构建环境与QA环境或产品环境不一致？或者是代码行为之所以在不同环境中表现不一致是因为某些环境中无法显示某些东西？</p>

<p>除非代码版本是跨环境紧密同步的，而且这些环境也是紧密同步的，否则很难搞清楚一个问题到底是个逻辑问题还是数据问题，抑或环境问题，或者其它问题。而工具能够保证其一致性。即工具能自动的将同样的代码一次性部署到多个环境中。</p>

<h2>合作伙伴或谴责者？</h2>

<p>开发人员需要做的最大改变可能就是与其他团队成员要有日常互动。开发人员是是主动解决软件问题（比如通过日常监控操作日志），还是等待问题报告给他们？当有问题时，又是如何被解决的？团队成员是合作伙伴还是谴责者？</p>

<p>很多都取决于领导力。不管管理团队如何说教DevOps愿景，请以身作则，提供必要的培训和支持，奖励开发人员的团队贡献，而不仅仅是技术能力。DevOps需要一个乐队指挥。即使当前工作并不是你的工作领域，你也应当接受它。实现DevOps环境需要理解什么对于管理是重要的；是不是发布更快了？是不是质量更高了？是不是开发人员对他们的代码更负责了？这些都与DevOps环境的方式有关。</p>

<hr />

<p>Neil　Garnichaud是SmartBear公司的Host　Solutions　Business经理，负责产品开发及软件研发。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[(翻译)正确实施DevOps-The Lay of the Land]]></title>
    <link href="http://www.huangbowen.net/blog/2014/09/29/geting-devops-right-the-lay-of-the-land/"/>
    <updated>2014-09-29T21:38:28+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/09/29/geting-devops-right-the-lay-of-the-land</id>
    <content type="html"><![CDATA[<p>原文地址:<a href="http://www.drdobbs.com/architecture-and-design/getting-devops-right-the-lay-of-the-land/240062639">http://www.drdobbs.com/architecture-and-design/getting-devops-right-the-lay-of-the-land/240062639</a>，作者Scott W. Ambler。</p>

<p><strong>对于不同的利益相关人DevOps含义不同，但是基本组成部分是相同的。</strong></p>

<!-- more -->


<p>在过去的1，2年，媒体上有很多关于DevOps的争论。有关DevOps的声音越来越杂乱，导致听众也越来越困惑。DevOps提供了针对IT市场的敬业精神和生产力一个潜在增长点。但是，与在它之前的所有运动一样，误解和误用DevOps是非常危险的。本文章以及随后的系列文章，将提供有条理的严肃的建议来解开这些困惑。</p>

<p>让我们先从一些定义开始。首先，在本文章中我会用两种方式表述词条“产品”。当我使用IT短语“发布产品”时，如果上下文与商业产品有关，我也隐含了“发布到市场”。当我使用单词“产品”时，意味着运营和支持（有时也被称为“help desk”）的结合。一些组织认为运营和支持是两个概念，但其它组织结合了这两个概念。&#8221;DevOps&#8221;是开发（development）和运营（operations）两个单词组成的混合词。在该上下文中的开发包括了解决方案被发布到产品环境之前发生的所有活动，即项目初始化时明确初始概念一直到可以部署。DevOps上下文中的运营包括了部署之后的所有活动。即“与产品相关的东西”（production stuff），包括了对所部署的解决方案的运营和支持。</p>

<p>定义DevOps词条，说起来容易做起来难，这是因为需要综合考虑多个视角，即主要的DevOps利益相关者的视角。你的谈话对象不同，DevOps是什么的定义的回答也不相同。DevOps的利益相关者以及他们的视角如下：</p>

<p>*开发人员，尤其是有经验的敏捷开发人员，认为DevOps是交付产品的一个持续的流程，有可能一天数次。</p>

<p>*运营专家往往认为DevOps提倡与开发团队建立更有效的关系，不仅包括整个开发生命周期，也包括解决方案被部署到产品环境的过程。有经验的运营人员也意识到他们内部过程往往基于<a href="http://en.wikipedia.org/wiki/Information_Technology_Infrastructure_Library">ITIL</a>或<a href="http://en.wikipedia.org/wiki/IT_service_management">ITSM</a>，需要被精简以便更好的与开发团队协作。</p>

<p>*支持专家（有时也被称为help desk专家）对DevOps的认识与运营专家类似，但稍微有点区别：他们想和开发团队一起工作来保证解决方案被发布到产品环境前他们的需求能被正确理解和满足。他们也想确保有一个流程，一旦当解决方案被使用后，能够处理需求更改（包括缺陷）。</p>

<p>*高级管理团队认为DevOps是可以通过简化所有人一起工作的方式从而提高IT部门整体效率的一种成果。</p>

<h2>规范DevOps</h2>

<p>现在来看看规范DevOps。图1展示了采用规范DevOps前以及规范DevOps努力想达到的效果的对比图。目前在很多组织中，开发团队和运营团队间尽管有流程和组织级障碍存在，但仍努力达到有效协作。</p>

<p>开发团队的部署并无规律-“快速”的团队一年进行1到2次发布，偶尔为发现的产品问题打个补丁。</p>

<p>运营团队反而推进变更请求，包括缺陷报告，返回给开发组织。这两个组织一起协作就可以保证这些活动是成功的，但仍有一个明显的地方可以提高。规范DevOps通过增加开发，运营和支持人员之间的协作这一策略来提高这一点。向开发团队引入持续交付实践，向IT引入新的组织级架构；采用商业智能工艺和技术来支持开发智能和运营智能，即支持改进的IT管理。不规范的DevOps和规范的DevOps的不同之处在于，规范的方式以整体视角来考虑所有DevOps利益相关者的渴望，而不仅仅关注于一个视角。</p>

<p><img src="http://www.huangbowen.net/images/closingdevopsgap.gif">
图1：缩小DevOps差距</p>

<p>要想成功实践DevOps，你需要在5个方面实现提高：人，准则，实践，产品及流程。这些问题以从高到低的优先级顺序排列。人及他们相互交互的方式是任何IT努力达到成功的决定因素。而规范DevOps清楚的需要人们重新思考他们的技能，如何定义自己的角色，如何一起工作。IT组织采用DevOps需要重新思考他们所做的决定的底层准则。例如，采用与业务更紧密交互的准则将激励他们采用更频繁的发布产品的方式。组织需要采用诸如持续集成，持续部署，运营智能，协作支持等实践。如果他们决定采用DevOps，有更多新鲜的事情需要去做。新的产品，包括开发工具，商业智能工具，以及运营监控工具等需要被采用。最终，流程框架（比如规范敏捷交付，DAD），将DevOps策略变为开发流程，还有ITIL或ITSM的更新版也需要考虑是否使用。</p>

<h2>误解</h2>

<p>组织运行DevOps似乎有着普遍的方式。我担心这样的观点，即“云=DevOps”，这种观点似乎越来越受欢迎。采用云技术可以早点接触到DevOps的一些方面，但只是5个方面的其中之一（即产品方面）。相似的，一些厂商的工具驱动的消息工具，以及一些开源社区（的产品）也令人不安，新的工具仅仅是DevOps大局观的一部分而已。第三个误解之前有提到过，即过于关注于一个DevOps利息相关人的视角。特别常见的是过于关注开发过程，因为效果显而易见，特别是持续交付实践可以带来潜在的更高效的提高。该问题是仅关注了5个方面的实践部分。</p>

<p>这些误解，确定会导致他们遇到问题，在之后的文章中会详细讨论这些问题的解决之道。</p>

<hr />

<p>Scott Ambler 在IBM Rational工作了6年时间，在这里他帮助客户采用及适应敏捷技术。现在是该领域的咨询师。他也是Dr.Dobb&#8217;s的长期撰稿人。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[程序员翻译技术类书籍的总结]]></title>
    <link href="http://www.huangbowen.net/blog/2014/09/23/some-tips-to-translate-books/"/>
    <updated>2014-09-23T21:48:55+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/09/23/some-tips-to-translate-books</id>
    <content type="html"><![CDATA[<p>2013年到现在，已经翻译了3本书了，其它杂七杂八的文章也不少。其中有一些经验和教训，势必要总结一下。</p>

<!-- more -->


<h2>将译稿纳入版本管理</h2>

<p>没有版本管理的代码修改起来是战战兢兢地，而译稿也类似。我习惯在GitHub上创建一个私有的仓库（我是GitHub的会员），把与该书相关的内容都放置上去，每翻译一点就迁入一次，保证任何修改都可以追踪。</p>

<h2>创建一个词条文档</h2>

<p>在翻译书的过程中，难免会遇到很多专业词汇，有些专业词汇有统一的翻译，而有些则没有，需要自己权衡后给出一个翻译结果。最好把这些词汇都放置到一个独立文档中，这尤其对多人合作翻译的情形相当有用。可以保证整本书对专业词汇翻译的一致性，也便于以后修正某个词条的翻译。</p>

<h2>权衡信、达、雅</h2>

<p>信、达、雅是青末启蒙思想家严复提出的概念。”“信”指意义不背原文，即是译文要准确，不歪曲，不遗漏，也不要随意增减意思；“达”指不拘泥于原文形式，译文通顺明白；“雅”则指译文时选用的词语要得体，追求文章本身的古雅，简明优雅。我所翻译的都是一些技术性书籍，信肯定是占首位。而英文被动句较多，长短句结合，要通过“达”的方式来变换句式，符合中国人阅读习惯。“雅”则注重用词的准确性，是个比较难达到的标准。</p>

<h2>第一遍粗译，第二遍细译，第三遍校审</h2>

<p>一般在翻译时我是按段落为单位的。先看一个段落，看懂了以后再把整个段落翻译出来。其中遇到不是很懂的句子先空下来，等到整章或整节翻译完成以后再回头看。这是因为我发现翻译时也有2/8原则。全文有80%的内容很好翻译，而20%的内容则比较难翻译。如果在翻译的过程中碰到20%难翻译的地方就努力攻克的话，会把翻译的时间的打散，进度会很慢。而第一遍粗译，跳过难以翻译的地方，第二遍时再补译的好处是，由于你已经翻译了整章，建立了良好的上下文关系，对付1，2句话那还不是小意思。此外还有心理因素，整章只有几句话没翻译，心里比较轻松，也更容易激发灵感。第二遍全部翻译完毕后，第三遍就是仔细校审了，这时候主要注意力就是句式的结构调整、词汇调整了。</p>

<h2>每天坚持翻译，日积月累</h2>

<p>一般翻译一本书编辑会给出时间限制的。而我翻译只能利用业余时间，可以说时间非常有限。如果三天打鱼、两天晒网，很容易堆积到最后，由于赶工而影响质量。所以养成良好的翻译习惯是非常必要的。可以每天至少翻译两页，周末多翻译一些，这样积少成多，水滴石穿，遇到节假日再突击一下，这样利用时间才是最合理的。自己也不会感觉有压力。</p>

<h2>翻译技术类书籍，自身实力要过硬</h2>

<p>我翻译的三本书，一本是关于JavaScript的，一本是关于HTML5和CSS3的，另一本是关于C# 多线程编程的。虽然这方面我之前都有所涉猎，但是为了保证翻译的质量和技术术语词汇的准确性，我会通读很多与之相关的书籍。以《Effective JavaScript》这本书为例，在翻译这本书之前我已经读过好几本与之有关的书了，但是为了保证翻译的质量，这毕竟是我翻译的第一本书，我不仅阅读了Effective系列的其他书籍（比如《Effective Java》），也阅读了大量与JavaScript有关的书（比如《JavaScript高级程序设计》,《JavaScript语言精粹》,《JavaScript权威指南》等）。通过大量的阅读与练习，我对原文的理解更加轻松，对词汇的翻译也更加准确。</p>

<hr />

<p>翻译技术类书籍其实不难，有志于此的程序员们可以先将英语练好，多读几本英文技术类书籍，然后找一些自己喜欢的文章练练手，说不定有一天哪本译作上就有你的大名。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[翻译-高效DevOps的10项实践]]></title>
    <link href="http://www.huangbowen.net/blog/2014/09/22/ten-practices-for-effective-devops/"/>
    <updated>2014-09-22T18:29:44+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/09/22/ten-practices-for-effective-devops</id>
    <content type="html"><![CDATA[<p>原文链接： <a href="http://www.drdobbs.com/architecture-and-design/top-10-practices-for-effective-devops/240149363?pgno=1">http://www.drdobbs.com/architecture-and-design/top-10-practices-for-effective-devops/240149363?pgno=1</a>, 作者Scott W. Ambler。</p>

<h2><strong>采用这些DevOps实践可以实现高效协作，平滑运营，更整洁的代码等目标。</strong></h2>

<p><a href="http://www.drdobbs.com/architecture-and-design/what-exactly-is-devops/240009147">DevOps</a>已经成为了我们行业最热门的流行语之一。然而出人意料的是，在更紧密的愿景和开发团队和运营团队更有效的协作之上，很少有共识DevOps到底意味着什么。不同组织对DevOps有着不同的定义，其实DevOps有个新兴的最佳实践核心,其更进一步的目标是高度协作以生产更好的软件。在这里我考验了这些实践。但是坦白说，我并不只从开发人员角度来观察这些实践。</p>

<!-- more -->


<p>我按优先级从高到低列出了这些实践条目，后面的实践往往依赖于前面的实践。</p>

<h2><strong>实践1：利益相关者的积极参与</strong></h2>

<p>DevOps的根本原则是开发人员,运营人员以及支持人员必须定期紧密的工作在一起。言外之意是他们必须互相视对方为重要的利益相关人，并积极争取一起工作。敏捷社区中一个普遍的实践是“现场客户”。这个实践出自于极限编程，它鼓励开发人员应该与业务人员紧密合作。规范的敏捷团队将该实践更进一步，即利益相关的积极参与，这意味着开发人员应该与所有利益相关者一起紧密工作，包括运营人员及支持人员，而不仅仅是业务人员。这是双向的：运营人员和支持人员也必须愿意和开发人员紧密工作。</p>

<h2><strong>实践2：自动化测试</strong></h2>

<p>敏捷软件开发人员被称为质量感染者，这是因为他们关注于编写高质量的代码，渴望测试越早开始越好。结果，自动化的回归测试是敏捷团队普遍采用的实践。该实践有时又被扩展为测试先行的方式，比如测试驱动开发（TDD），以及行为驱动开发（BDD）。由于敏捷团队经常一天多次运行他们的自动化测试集，并且能够马上修复发现的问题，所以他们比普通团队能达到更高的质量。对于运营人员而言，在同意一个解决方案发布到产品环境前，坚持足够的质量审查，这是件好事情。</p>

<h2><strong>实践3：集成配置管理</strong></h2>

<p>要实现以集成的方式来进行配置管理（CM），开发团队不仅要习惯于在解决方案层级应用CM，还需要考虑自身的解决方案与组织的其余基础设施之间的
产品环境配置问题。对于一些开发人员而言这是个不小的转变，因为他们往往习惯于只考虑当前他们工作的解决方案的CM。在DevOps环境中，开发人员需要拥有企业级视角，在更高的层次看待问题。他们的解决方案如何能在产品环境结合其它资源带来优势？其它资源是否能支持被开发的解决方案？言外之意是开发团队需要了解及管理他们产品的所有范围的依赖。集成配置管理也使得运营人员了解新的发布潜在的影响，从而更容易决定进行发布的时间。</p>

<h2><strong>实践4：综合变更管理</strong></h2>

<p>从IT的角度来看，变更管理是一门确保IT基础设施的演化能对整体组织的支持成功及有意义的艺术。但是对于项目-团队层级则颇具挑战。这是因为非常多的技术，甚至相似技术的多个版本会被使用在单个解决方案的开发过程中。由于DevOps引入了与运营有关的企业级问题，综合变更管理策略会变得越来越复杂，因为需要考虑大量的解决方案能够在产品环境中同时运行和交互。为了实现综合变更管理，开发团队必须与运营团队紧密合作，来从组织层面了解任何技术的改变带来的影响。该方式依赖于前面的实践-利益相关者的积极参与，集成配置管理及自动化测试。</p>

<h2><strong>实践5：持续集成</strong></h2>

<p>持续集成（CI）是构建及验证项目的规范，当有代码更新被迁入到版本控制系统时，会进行自动化的回归测试及代码分析。CI是与DevOps相关的性感的敏捷开发实践之一（至少从开发人员角度来说是如此）。CI确保开发人员以较小的，可以对代码缺陷立即反馈的常规步骤来开发一个高质量的可以工作的解决方案。</p>

<h2><strong>实践6：集成部署计划</strong></h2>

<p>从开发团队角度而言，部署计划总是需要与该组织的运营人员交互。有些情况下，与运营人员接口的专家被特称为发布工程师。经验丰富的团队将使开发，运营及支持团队这些利益相关者一起持续的制定部署计划。当你采用了DevOps策略，你会很快意识到需要一种跨团队的方式来完成发布计划，因为需要运营人员与整个开发团队一起工作。对于运营人员来说这不是什么新鲜事，但是对于只习惯工作于孤立环境的开发团队来说却很惊奇。如果你的团队还没有这样做，你需要开始从组织层面来考虑部署时间表。更远一步，为了支持持续部署，发布工程师需要增加发布次数，因为敏捷团队已经可以持续及一致地达到发布的质量要求。</p>

<h2><strong>实践7：持续部署</strong></h2>

<p>持续部署是持续集成实践的扩展。对于持续部署，当集成在一个沙盒中成功完成时，变更会被自动升迁到另一个沙盒中，集成会自动的在这里进行。自动升迁一直持续，直到有人验证了所有的变更，特别是开发向运营的过渡期。</p>

<p>持续部署使得开发团队减少了新功能从被验证到部署到产品环境的时间，使得业务更具响应性。然而，持续部署增加了运营风险，因为如果开发团队没严格遵守规范，会增加缺陷被引入到产品环境的潜在风险。在企业级环境中成功的执行持续部署要求实现前面介绍的所有实践。</p>

<h2><strong>实践8：产品支持</strong></h2>

<p>企业级环境中，大多数的应用程序开发团队工作在已经存在于产品环境的解决方案的新的功能上。他们不仅工作于该新功能，还有解决严重的产品问题的职责。开发团队往往被称为产品的“第3级支持”，因为他们是解决棘手的产品问题的第三个（也是最后一个）团队。尽管做第三级产品支持的需要是普遍的，但是看板和规范敏捷交付（Disciplined Agile Delivery， DAD）则是例外，很多敏捷方法只解决传递这些影响。该实践的一个重要的副作用是给予了开发者发生在产品中的此类问题的鉴别能力，提供给他们一种学习机会，从而在设计解决方案时就考虑到相应的问题。</p>

<h2><strong>实践9：应用监控</strong></h2>

<p>正如其名称所示，这是一个运营实践，监控已经发布到产品的环境的正在运行的解决方案和应用程序。技术基础设施平台（比如操作系统），应用程序服务器，以及通讯服务通常提供监控功能，可以工作于一些监控工具（比如微软管理终端，IBM Tivoli 监控， 以及jManage）。然而，为了监控特定应用程序的功能，比如只给特定用户使用的用户界面，仪表化该信息需要与你组织的监控基础设施兼容，这需要构建到应用程序中。开发团队需要知道该运营要求，或者，更好的方式是可以访问一个框架，该框架可以直接提供相应的仪表化。</p>

<h2><strong>实践10：自动化的仪表盘</strong></h2>

<p>使用自动化仪表盘的实践是IT领域的商业智能（business intelligence， BI）。该实践分为两个方面,开发智能以及运营智能。开发智能需要使用开发工具来仪表化产生的指标。例如，你的配置管理（CM）工具已经记录了谁以及什么时候迁入代码。持续集成工具可能同样记录了构建发生的时间，运行了多少个测试，测试运行的时间，构建是成功还是失败，运行成功的测试数量等。这些原始数据会被分析并显示在一个自动化的仪表盘中。运营智能是之前讨论过的应用程序监控的一个方面。使用了自动化仪表盘，组织的整体指标开销将被显著降低（但是不能完全淘汰，因为不是所有的事情都能被自动化）。自动化仪表盘提供了实时的对组织的管理团队的洞察。</p>

<h2><strong>DevOps与文化息息相关</strong></h2>

<p>在讨论了这些苛刻的支持DevOps的实践之后，我需要强调主要的限制成功的因素是能否建立一个贯穿整个IT组织的相互协作的相互尊敬的文化。我的经验是，当决定采用高效的DevOps策略时，人及他们相互工作的方式是成功的主要决定因素。不幸的是，在组织中带来文化变迁比采用一些新的实践要难得多。在接下来的文章中会讨论这些。</p>

<h2><strong>更多信息</strong></h2>

<p><a href="http://www.drdobbs.com/architecture-and-design/what-exactly-is-devops/240009147">DevOps究竟是什么？</a> 解释了DevOps为什么对开发人员如此重要。</p>

<p><a href="http://www.drdobbs.com/architecture-and-design/getting-devops-right-the-lay-of-the-land/240062639">正确采用DevOps：落地</a> 描述了采用DevOsp策略相关的一些挑战。</p>

<p><a href="http://www.drdobbs.com/architecture-and-design/disciplined-agile-change-management/240001474">规范敏捷变更管理</a> 讨论了修改管理选项。</p>

<p><a href="http://www.discipinedagiledelivery.com/">规范敏捷交付</a> 讲述了DAA流程框架的更多信息。</p>

<p>Scott Ambler是Dr. Dobb&rsquo;s 的长期撰稿人，也是<a href="http://www.amazon.com/Disciplined-Agile-Delivery-Practitioners-Enterprise/dp/0132810131/?tag=drdos-20">Disciplined Agile Delivery: A Practitioner&rsquo;s Guide to Agile Software Delivery in the Enterprise</a>一书的核心作者。你可以在<a href="http://twitter.com/scottwambler/">Twitter</a>上follow他。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[布里斯班Twilight Bay Run半程马拉松]]></title>
    <link href="http://www.huangbowen.net/blog/2014/09/21/brisbane-twilight-bay-run/"/>
    <updated>2014-09-21T11:07:15+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/09/21/brisbane-twilight-bay-run</id>
    <content type="html"><![CDATA[<p>自从8月3日跑了全马以后，又一鼓作气报了11月份的西昌马拉松。与第一次马拉松的只求完赛目标不同，第二次当然想取得一个更好的成绩。所以8月份练的比较猛，基本上是练2、3天休息一天，周么还要拉个长于21公里的LSD。拒不完全统计，8月份总跑量达到了260公里+。并且有一天周末跑了个人最好的半马成绩1小时53分。</p>

<!-- more -->


<p>后来从往网上看到在9月20日布里斯班的一个海滨会举行半程马拉松，叫做Twilight Bay Run（黄昏海滨马拉松）,听名字就觉得爽。看了看地图，是在一个海边跑的，沿着海边，吹着海风，痛痛快快的跑上2个小时，还有一群不认识的人给你加油，最后还可以得到一个完赛的奖牌，这样美妙的经历怎么能错过那？所以我立马就报了名。</p>

<p>然而到了9月份，我的身体却出了状况，可能是8月份跑量增加太多的缘故，我的膝盖有点异常。为了避免受伤，这个月就很少跑步了。再加上我开始练insanity，一个健身视频，感觉这个消耗的热量比跑步要多，所以每天都练，跑步的时间久越发少了。随着9月20日的临近，我的心里也泛起了嘀咕。这么长时间没训练，能不能完赛都成问题，更别提打破什么个人记录了。</p>

<p>9月20日这天，睡到11点起来，洗漱完毕，收拾东西，然后去Queen Street吃了最喜欢的日本博多屋拉面，坐上了开往海滨的220路公交车。一个小时后到了海滩。看到大海总是让人如此的心旷神怡，吹着海风，眺望远方，沿着海边漫步，感觉心灵都受到了洗涤。到了签到点，领了跑步包，就自个去逛了。布里斯班这个城市绿化超好的，遍布着各种大大小小的公园。每个公园都有超大的草坪、舒适的座椅、免费的烧烤架供人使用。如果要在成都找到这样的地方那可真是难死了，很难找到可以随意踩踏的草坪。</p>

<p><img src="http://www.huangbowen.net/images/seabay.jpg" width="600"></p>

<p><img src="http://www.huangbowen.net/images/seanice.jpg" width="600"></p>

<p>半程马拉松开始的时间是下午5点。之前有5公里比赛、1公里kids run。5公里跑的最快的是16分钟多，这个成绩太牛了。还有很多10来岁的小孩都跑进了18分，真是让我感叹不已。我有一次测评自己的5公里成绩，也不过25分，自叹不如。随着时间的临近，人越来越多。10公里赛和21公里赛是一起发枪，起点处几千人总是有的。我占到了一个靠前的位置。随着主持人一声令下，浩浩荡荡的队伍开始流动。</p>

<p><img src="http://www.huangbowen.net/images/bibnumber.jpg" width="600"></p>

<p>这次做好了充分的热身，所以前几公里跑的还算可以，在这种气氛带动下，很容易跑出比平时更好的成绩。前3公里时速保持在12.6，这应当是我最好的记录了。我也不敢跑的再快，长跑的人都知道，前面跑的快，后面有你哭的时候。12.6的时速维持了5公里左右，我也超越了1小时45分的领跑员。这么快的速度我自己也感觉不支，但是我知道一般到8公里的时候我会迎来跑步舒适期，那时候会觉的跑步是一种享受，不觉得累。这样的状态一般可以支撑5到7公里。</p>

<p>随着时间的推移，天开始越来越暗，海边涨潮了，海水离岸堤越来越近，我们就跑到离岸堤2，30米的地方。8公里的时候我没有感受到那种轻松的感觉，可能因为之前的确跑太快了，而且当时海风是逆风，增加了难度。速度也从12.6掉到了12.5，12.4&hellip;到10公里记时点时，我跑进了50分钟，这应该是个人最好的10公里记录了吧。身后的1小时45分钟的领跑员也要逐渐赶上我了。其实我很感激这个领跑员，一路上他在不停的给大家鼓劲，有的时候也不时的幽默一把。离终点也剩下一半路程了，如果我能全程保持跑在这个领跑员前面，那么无疑我会创造自己的个人新纪录。这正是激励我一直保持高速前行的动力。</p>

<p>天已经完全黑下来了，有些路段没有路灯，只有漆黑一片。我踏着步点，按照自己的节奏跑着，时不时的听到身后2，30米的领跑员的鼓励声。他的身边有一群跟跑者。每到有人加油的时候，他就说“我们是1小时45分军团，欢呼吧！” 。有一次跑到一个漆黑一片的路段时，他说：“this is not Twilight Bay Run，this is Twinight Bay Run。”把我给笑的，又加紧赶了几步。这个马拉松我采用的补水策略是尽量只挑选有佳得乐的水站补水，每次补水不减速，分三口喝完。</p>

<p>终点越来越近了，只有3，4公里了。跟领跑员20米的距离也被缩减到了2米了。领跑员给我说让我跟着他们后面的人跑，借着他们风。但是我没听懂，还是保持跑在领跑员的前面。只剩下最后1公里多了。我感觉到了自己的极限了。领跑员也要超过我了，再次喊我跟着他们跑。我在他们后面跟了10来秒钟就跟不上了。恰好有个补水点，我喝了点水，休息了几秒钟，又开始上路。这最后一公里是我整个跑步生涯中最艰难的一公里。长时间高强度奔跑，大脑一直处于缺氧状态，思考都变的缓慢，身体每个动作都那么艰难。而且目送着领跑员和他的追随者离开我的视线，想加速身体却完全不听使唤。</p>

<p>快到终点了，听到了人群的欢呼声，我看了一下表，1小时44分，离终点还有200米，我以百米冲刺的速度跑了几十米，想在1分45分前感到。但是我觉得大腿、小腿有强烈的反应，已经到了抽筋的边缘。我不得不降低速度，通过了终点。终点计时牌上是1小时46分多。领跑员在终点等我，恭喜我取得了好成绩。我的心里也充满了喜悦，这是我的个人最佳纪录。我连喝了3杯佳得乐，吃了1个香蕉和3个苹果。由于长时间运动，味觉会消失，佳得乐跟水一样，红彤彤的苹果也不是很香甜。但是我很享受这种超越自己的感觉。看着有个壮汉跑过终点时怒吼一声，我明白他此时心里的感受，那种将不可能变成可能的感觉太美妙了！</p>

<p>这场马拉松比赛太完美了。海滩、海风、热情的人们、美丽的风景、个人新纪录、完赛奖牌&hellip;..我在超越自己的路上越走越远。</p>

<p><img src="http://www.huangbowen.net/images/getmedel.jpg" width="600"></p>

<p><img src="http://www.huangbowen.net/images/roadmapbay.png" width="600"></p>

<p><img src="http://www.huangbowen.net/images/runRecord.png" width="600"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一句话解释c#中的特性]]></title>
    <link href="http://www.huangbowen.net/blog/2014/09/11/jieshi/"/>
    <updated>2014-09-11T00:12:19+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/09/11/jieshi</id>
    <content type="html"><![CDATA[<p>自己闲着无聊写的，当然有些描述不是十分准确，毕竟一句话不能表达太多意思。</p>

<!-- more -->


<ul>
<li><p>委托:把方法当做参数进行传递。</p></li>
<li><p>泛型:在类、方法中对使用的类型参数化。</p></li>
<li><p>匿名方法:委托及调用委托的简化版。</p></li>
<li><p>Lambda表达式:匿名方法的进一步进化。</p></li>
<li><p>扩展方法:给现有类添加新的方法。</p></li>
<li><p>LINQ: 将SQL方式的查询从数据库扩展到其它方面（集合对象，XML等）。</p></li>
<li><p>反射:获取运行时类型信息。</p></li>
<li><p>部分类: 把一个类的声明分散到多个文件中。</p></li>
<li><p>类型推断:编译时自动推断类型。</p></li>
<li><p>匿名类型:封装只读属性的对象。</p></li>
<li><p>自动属性:编译器帮你自动生成一个私有变量。</p></li>
<li><p>动态绑定:将类型从编译时推迟到运行时绑定。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[翻译-使用Spring调用SOAP Web Service]]></title>
    <link href="http://www.huangbowen.net/blog/2014/09/10/consuming-web-service/"/>
    <updated>2014-09-10T21:02:41+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/09/10/consuming-web-service</id>
    <content type="html"><![CDATA[<p>原文链接: <a href="http://spring.io/guides/gs/consuming-web-service/">http://spring.io/guides/gs/consuming-web-service/</a></p>

<h2>调用SOAP web service</h2>

<p>本指南将指导你使用Spring调用一个基于SOAP的web service的整个过程。</p>

<!-- more -->


<h3>指南内容</h3>

<p>你将构建一个客户端，使用SOAP用来从远端的基于WSDL的web service获取天气数据。请访问<a href="http://wiki.cdyne.com/index.php/CDYNE_Weather">http://wiki.cdyne.com/index.php/CDYNE_Weather</a>进一步获取该天气服务的信息。</p>

<p>该服务根据邮编返回天气预测。你可以使用自己的邮编。</p>

<h3>准备事项</h3>

<ul>
<li><p>大约15分钟</p></li>
<li><p>钟爱的编辑器或IDE</p></li>
<li><p>JDK1.6或更高版本</p></li>
<li><p>Gradle 1.11+ 或 Maven 3.0+</p></li>
<li><p>你也可以直接参阅该指南导入代码，或通过Spring工具集（Spring Tool Suite，简称STS)通过网页浏览代码，从而帮助你学习该章节内容。源码下载地址:<a href="https://github.com/spring-guides/gs-consuming-web-service.git">https://github.com/spring-guides/gs-consuming-web-service.git</a>。</p></li>
</ul>


<h3>如何完成该指南</h3>

<p>如同大多数的<a href="http://spring.io/guides">示例教程</a>一样，你可以从头开始并完成每个步骤，或者你也可以跳过已经熟悉的基础章节。无论怎样，最终你要得到可以工作的代码。</p>

<p>想<em>从头开始</em>，请移动到<a href="#scratch">使用Gradle构建</a>章节。</p>

<p>想<em>跳过基础部分</em>，请做以下事情：</p>

<ul>
<li><p><a href="">下载</a>并解压该向导的源代码，或者使用<a href="ttp://spring.io/understanding/Git">Git</a>复制一份： <code>git clone https://github.com/spring-guides/gs-consuming-web-service.git</code></p></li>
<li><p>切换到<code>gs-consuming-web-service/initial</code></p></li>
<li><p>跳到基于WSDL生成领域对象章节。</p></li>
</ul>


<p>当完成后，你可以使用<code>gs-consuming-web-service/complete</code>目录中的代码检查你的结果。</p>

<h3><a name="#scratch">使用Gradle构建</a></h3>

<p>首先你要设置一个基本的build脚本。当构建Spring应用程序时，你可以使用任何构建系统，但是这里只包括了使用<a href="https://maven.apache.org">Maven</a>和<a href="gradle.org">Gradle</a>的代码。如果你两者都不熟悉，请访问<a href="http://spring.io/guides/gs/gradle">使用Gradle构建Java项目</a>或<a href="http://spring.io/guides/gs/maven">使用Maven构建Java项目</a>。</p>

<h4>创建目录结构</h4>

<p>在你选择的存放项目的目录中，创建如下的子目录结构。例如，在*nix系统中使用<code>mkdir -p src/main/java/hello</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>└── src
</span><span class='line'>    └── main
</span><span class='line'>        └── java
</span><span class='line'>            └── hello
</span></code></pre></td></tr></table></div></figure>


<h4>创建Gradle 构建文件</h4>

<p>下面是一个<a href="https://github.com/spring-guides/gs-consuming-web-service/blob/master/initial/build.gradle">初始的Gradle build文件</a>。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">configurations</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">jaxb</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">buildscript</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span> <span class="n">url</span> <span class="s2">&quot;http://repo.spring.io/libs-release&quot;</span> <span class="o">}</span>
</span><span class='line'>        <span class="n">mavenLocal</span><span class="o">()</span>
</span><span class='line'>        <span class="n">mavenCentral</span><span class="o">()</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">classpath</span><span class="o">(</span><span class="s2">&quot;org.springframework.boot:spring-boot-gradle-plugin:1.1.6.RELEASE&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;eclipse&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;idea&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;spring-boot&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenLocal</span><span class="o">()</span>
</span><span class='line'>    <span class="n">mavenCentral</span><span class="o">()</span>
</span><span class='line'>    <span class="n">maven</span> <span class="o">{</span> <span class="n">url</span> <span class="s1">&#39;http://repo.spring.io/libs-release&#39;</span> <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// tag::wsdl[]</span>
</span><span class='line'><span class="n">task</span> <span class="n">genJaxb</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ext</span><span class="o">.</span><span class="na">sourcesDir</span> <span class="o">=</span> <span class="s2">&quot;${buildDir}/generated-sources/jaxb&quot;</span>
</span><span class='line'>    <span class="n">ext</span><span class="o">.</span><span class="na">classesDir</span> <span class="o">=</span> <span class="s2">&quot;${buildDir}/classes/jaxb&quot;</span>
</span><span class='line'>    <span class="n">ext</span><span class="o">.</span><span class="na">schema</span> <span class="o">=</span> <span class="s2">&quot;http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">outputs</span><span class="o">.</span><span class="na">dir</span> <span class="n">classesDir</span>
</span><span class='line'>
</span><span class='line'>    <span class="nf">doLast</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">project</span><span class="o">.</span><span class="na">ant</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">taskdef</span> <span class="nl">name:</span> <span class="s2">&quot;xjc&quot;</span><span class="o">,</span> <span class="nl">classname:</span> <span class="s2">&quot;com.sun.tools.xjc.XJCTask&quot;</span><span class="o">,</span>
</span><span class='line'>                    <span class="nl">classpath:</span> <span class="n">configurations</span><span class="o">.</span><span class="na">jaxb</span><span class="o">.</span><span class="na">asPath</span>
</span><span class='line'>            <span class="n">mkdir</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">sourcesDir</span><span class="o">)</span>
</span><span class='line'>            <span class="n">mkdir</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">classesDir</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">xjc</span><span class="o">(</span><span class="nl">destdir:</span> <span class="n">sourcesDir</span><span class="o">,</span> <span class="nl">schema:</span> <span class="n">schema</span><span class="o">,</span>
</span><span class='line'>                    <span class="nl">package:</span> <span class="s2">&quot;hello.wsdl&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">arg</span><span class="o">(</span><span class="nl">value:</span> <span class="s2">&quot;-wsdl&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="n">produces</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">sourcesDir</span><span class="o">,</span> <span class="nl">includes:</span> <span class="s2">&quot;**/*.java&quot;</span><span class="o">)</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">javac</span><span class="o">(</span><span class="nl">destdir:</span> <span class="n">classesDir</span><span class="o">,</span> <span class="nl">source:</span> <span class="mf">1.6</span><span class="o">,</span> <span class="nl">target:</span> <span class="mf">1.6</span><span class="o">,</span> <span class="nl">debug:</span> <span class="kc">true</span><span class="o">,</span>
</span><span class='line'>                    <span class="nl">debugLevel:</span> <span class="s2">&quot;lines,vars,source&quot;</span><span class="o">,</span>
</span><span class='line'>                    <span class="nl">classpath:</span> <span class="n">configurations</span><span class="o">.</span><span class="na">jaxb</span><span class="o">.</span><span class="na">asPath</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">src</span><span class="o">(</span><span class="nl">path:</span> <span class="n">sourcesDir</span><span class="o">)</span>
</span><span class='line'>                <span class="n">include</span><span class="o">(</span><span class="nl">name:</span> <span class="s2">&quot;**/*.java&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="n">include</span><span class="o">(</span><span class="nl">name:</span> <span class="s2">&quot;*.java&quot;</span><span class="o">)</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">copy</span><span class="o">(</span><span class="nl">todir:</span> <span class="n">classesDir</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">fileset</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">sourcesDir</span><span class="o">,</span> <span class="nl">erroronmissingdir:</span> <span class="kc">false</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">exclude</span><span class="o">(</span><span class="nl">name:</span> <span class="s2">&quot;**/*.java&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// end::wsdl[]</span>
</span><span class='line'>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span><span class="o">(</span><span class="s2">&quot;org.springframework.boot:spring-boot-starter&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="n">compile</span><span class="o">(</span><span class="s2">&quot;org.springframework.ws:spring-ws-core&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="n">compile</span><span class="o">(</span><span class="n">files</span><span class="o">(</span><span class="n">genJaxb</span><span class="o">.</span><span class="na">classesDir</span><span class="o">).</span><span class="na">builtBy</span><span class="o">(</span><span class="n">genJaxb</span><span class="o">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">jaxb</span> <span class="s2">&quot;com.sun.xml.bind:jaxb-xjc:2.1.7&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">jar</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">genJaxb</span><span class="o">.</span><span class="na">classesDir</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="nf">wrapper</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Wrapper</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">gradleVersion</span> <span class="o">=</span> <span class="s1">&#39;1.11&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="n">afterEclipseImport</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">dependsOn</span> <span class="n">genJaxb</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-tools/spring-boot-gradle-plugin">Spring Boot gradle插件</a>提供了很多便利的特性：</p>

<ul>
<li><p>将classpath中的所有jar包构建单个可运行的jar包，从而更容易执行和传播服务。</p></li>
<li><p>搜索<code>public static void main（）</code>方法并标记为可运行的类。</p></li>
<li><p>提供了一个内置的依赖管理器，设置依赖版本以匹配<a href="https://github.com/spring-projects/spring-boot/blob/master/spring-boot-dependencies/pom.xml">Spring Boot依赖</a>。你可以覆盖为任何你希望的版本，但默认会使用Boot选择的版本。</p></li>
</ul>


<h3>使用Maven构建</h3>

<p>首先你需要设置一个基本的构建脚本。你可以使用任何构建系统来构建Spring应用程序，但这里包含了<a href="https://maven.apache.org/">Maven</a>的代码。如果你对Maven不熟，请访问<a href="http://spring.io/guides/gs/maven">使用Maven构建Java项目</a>。</p>

<h4>创建目录结构</h4>

<p>在你选择的存放项目的目录中，创建如下的子目录结构。例如，在*nix系统中使用<code>mkdir -p src/main/java/hello</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>└── src
</span><span class='line'>    └── main
</span><span class='line'>        └── java
</span><span class='line'>            └── hello
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>pom.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>         <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>org.springframework<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>gs-consuming-web-service<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>0.1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;parent&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>1.1.6.RELEASE<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/parent&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;properties&gt;</span>
</span><span class='line'>        <span class="c">&lt;!-- use UTF-8 for everything --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
</span><span class='line'>        <span class="nt">&lt;project.reporting.outputEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.reporting.outputEncoding&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/properties&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>        <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.springframework.ws<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>spring-ws-core<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;build&gt;</span>
</span><span class='line'>        <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>            <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>                <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;version&gt;</span>2.3.2<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>            <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>                <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;artifactId&gt;</span>spring-boot-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>            <span class="c">&lt;!-- tag::wsdl[] --&gt;</span>
</span><span class='line'>            <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>                <span class="nt">&lt;groupId&gt;</span>org.jvnet.jaxb2.maven2<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;artifactId&gt;</span>maven-jaxb2-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;executions&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;execution&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;goals&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;goal&gt;</span>generate<span class="nt">&lt;/goal&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;/goals&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/execution&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/executions&gt;</span>
</span><span class='line'>                <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;schemaLanguage&gt;</span>WSDL<span class="nt">&lt;/schemaLanguage&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;generatePackage&gt;</span>hello.wsdl<span class="nt">&lt;/generatePackage&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;forceRegenerate&gt;</span>true<span class="nt">&lt;/forceRegenerate&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;schemas&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;schema&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;url&gt;</span>http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;/schema&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/schemas&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>            <span class="c">&lt;!-- end::wsdl[] --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/build&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;repositories&gt;</span>
</span><span class='line'>        <span class="nt">&lt;repository&gt;</span>
</span><span class='line'>            <span class="nt">&lt;id&gt;</span>spring-releases<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>            <span class="nt">&lt;name&gt;</span>Spring Releases<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>            <span class="nt">&lt;url&gt;</span>http://repo.spring.io/libs-release<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/repository&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/repositories&gt;</span>
</span><span class='line'>    <span class="nt">&lt;pluginRepositories&gt;</span>
</span><span class='line'>        <span class="nt">&lt;pluginRepository&gt;</span>
</span><span class='line'>            <span class="nt">&lt;id&gt;</span>spring-releases<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>            <span class="nt">&lt;url&gt;</span>http://repo.spring.io/libs-release<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/pluginRepository&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/pluginRepositories&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注意：你可能注意到我们指定了<em>maven-complier-plugin</em>的版本。通常并<em>不推荐</em>这样做。这里主要是为了解决我们的CI系统默认运行在该插件的早期版本（java5之前）的一个问题。</p></blockquote>

<p><a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-tools/spring-boot-maven-plugin">Spring Boot Maven插件</a>提供了很多便利的特性：</p>

<ul>
<li><p>将classpath中的所有jar包构建单个可运行的jar包，从而更容易执行和传播服务。</p></li>
<li><p>搜索<code>public static void main（）</code>方法并标记为可运行的类。</p></li>
<li><p>提供了一个内置的依赖管理器，设置依赖版本以匹配<a href="https://github.com/spring-projects/spring-boot/blob/master/spring-boot-dependencies/pom.xml">Spring Boot依赖</a>。你可以覆盖为任何你希望的版本，但默认会使用Boot选择的版本。</p></li>
</ul>


<h3>使用Spring工具集构建</h3>

<p>如果你拥有Spring工具集，只需简单的<a href="http://spring.io/guides/gs/sts/">直接导入该指南</a>。</p>

<blockquote><p>注意:如果你阅读过生成SOAP web service,你可能会疑惑为什么该指南没有使用<strong>spring-boot-starter-ws</strong>?这是因为Spring Boot Starter只用于服务器端程序。Starter提供了诸如嵌入式Tomcat等功能，而服务调用则不需要这些。</p></blockquote>

<h3>基于WSDL生成领域对象</h3>

<p>SOAP web service的接口描述在<a href="http://en.wikipedia.org/wiki/Web_Services_Description_Language">WSDL</a>文件中。JAXB提供了一个简单的方式来从WSDL（或者WSDL中包含在<code>&lt;Types/&gt;</code>节点中的XSD）生成Java类。可以访问<a href="http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl">http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl</a>获取该天气服务的WSDL。</p>

<p>你需要下列插件来使用maven从WSDL生成Java类：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>org.jvnet.jaxb2.maven2<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>maven-jaxb2-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;executions&gt;</span>
</span><span class='line'>        <span class="nt">&lt;execution&gt;</span>
</span><span class='line'>            <span class="nt">&lt;goals&gt;</span>
</span><span class='line'>                <span class="nt">&lt;goal&gt;</span>generate<span class="nt">&lt;/goal&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/goals&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/execution&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/executions&gt;</span>
</span><span class='line'>    <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;schemaLanguage&gt;</span>WSDL<span class="nt">&lt;/schemaLanguage&gt;</span>
</span><span class='line'>        <span class="nt">&lt;generatePackage&gt;</span>hello.wsdl<span class="nt">&lt;/generatePackage&gt;</span>
</span><span class='line'>        <span class="nt">&lt;forceRegenerate&gt;</span>true<span class="nt">&lt;/forceRegenerate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;schemas&gt;</span>
</span><span class='line'>            <span class="nt">&lt;schema&gt;</span>
</span><span class='line'>                <span class="nt">&lt;url&gt;</span>http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/schema&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/schemas&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>该代码将通过指定的WSDL的URL生成类，并放置在<code>hello.wsdl</code>包中。</p>

<p>你也可以使用下列代码在Gradle中完成同样的事：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">task</span> <span class="n">genJaxb</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ext</span><span class="o">.</span><span class="na">sourcesDir</span> <span class="o">=</span> <span class="s2">&quot;${buildDir}/generated-sources/jaxb&quot;</span>
</span><span class='line'>    <span class="n">ext</span><span class="o">.</span><span class="na">classesDir</span> <span class="o">=</span> <span class="s2">&quot;${buildDir}/classes/jaxb&quot;</span>
</span><span class='line'>    <span class="n">ext</span><span class="o">.</span><span class="na">schema</span> <span class="o">=</span> <span class="s2">&quot;http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">outputs</span><span class="o">.</span><span class="na">dir</span> <span class="n">classesDir</span>
</span><span class='line'>
</span><span class='line'>    <span class="nf">doLast</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">project</span><span class="o">.</span><span class="na">ant</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">taskdef</span> <span class="nl">name:</span> <span class="s2">&quot;xjc&quot;</span><span class="o">,</span> <span class="nl">classname:</span> <span class="s2">&quot;com.sun.tools.xjc.XJCTask&quot;</span><span class="o">,</span>
</span><span class='line'>                    <span class="nl">classpath:</span> <span class="n">configurations</span><span class="o">.</span><span class="na">jaxb</span><span class="o">.</span><span class="na">asPath</span>
</span><span class='line'>            <span class="n">mkdir</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">sourcesDir</span><span class="o">)</span>
</span><span class='line'>            <span class="n">mkdir</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">classesDir</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">xjc</span><span class="o">(</span><span class="nl">destdir:</span> <span class="n">sourcesDir</span><span class="o">,</span> <span class="nl">schema:</span> <span class="n">schema</span><span class="o">,</span>
</span><span class='line'>                    <span class="nl">package:</span> <span class="s2">&quot;hello.wsdl&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">arg</span><span class="o">(</span><span class="nl">value:</span> <span class="s2">&quot;-wsdl&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="n">produces</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">sourcesDir</span><span class="o">,</span> <span class="nl">includes:</span> <span class="s2">&quot;**/*.java&quot;</span><span class="o">)</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">javac</span><span class="o">(</span><span class="nl">destdir:</span> <span class="n">classesDir</span><span class="o">,</span> <span class="nl">source:</span> <span class="mf">1.6</span><span class="o">,</span> <span class="nl">target:</span> <span class="mf">1.6</span><span class="o">,</span> <span class="nl">debug:</span> <span class="kc">true</span><span class="o">,</span>
</span><span class='line'>                    <span class="nl">debugLevel:</span> <span class="s2">&quot;lines,vars,source&quot;</span><span class="o">,</span>
</span><span class='line'>                    <span class="nl">classpath:</span> <span class="n">configurations</span><span class="o">.</span><span class="na">jaxb</span><span class="o">.</span><span class="na">asPath</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">src</span><span class="o">(</span><span class="nl">path:</span> <span class="n">sourcesDir</span><span class="o">)</span>
</span><span class='line'>                <span class="n">include</span><span class="o">(</span><span class="nl">name:</span> <span class="s2">&quot;**/*.java&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="n">include</span><span class="o">(</span><span class="nl">name:</span> <span class="s2">&quot;*.java&quot;</span><span class="o">)</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">copy</span><span class="o">(</span><span class="nl">todir:</span> <span class="n">classesDir</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">fileset</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">sourcesDir</span><span class="o">,</span> <span class="nl">erroronmissingdir:</span> <span class="kc">false</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">exclude</span><span class="o">(</span><span class="nl">name:</span> <span class="s2">&quot;**/*.java&quot;</span><span class="o">)</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>由于gradle还没有jaxb插件，所以它调用了一个ant任务，代码看起来比maven稍显复杂。
在maven和gradle两个示例中，JAXB领域对象生成过程被包括在构建工具的生命周期中，所以无需额外步骤来运行。</p>

<h3>创建天气服务客户端</h3>

<p>创建一个web service客户端，你只需要扩展<code>WebServiceGatewaySupport</code>类并编写操作代码：</p>

<figure class='code'><figcaption><span>src/main/java/hello/WeatherClient.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">hello</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.ws.client.core.support.WebServiceGatewaySupport</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.ws.soap.client.core.SoapActionCallback</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">hello.wsdl.Forecast</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">hello.wsdl.ForecastReturn</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">hello.wsdl.GetCityForecastByZIP</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">hello.wsdl.GetCityForecastByZIPResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">hello.wsdl.Temp</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WeatherClient</span> <span class="kd">extends</span> <span class="n">WebServiceGatewaySupport</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">GetCityForecastByZIPResponse</span> <span class="nf">getCityForecastByZip</span><span class="o">(</span><span class="n">String</span> <span class="n">zipCode</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">GetCityForecastByZIP</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GetCityForecastByZIP</span><span class="o">();</span>
</span><span class='line'>        <span class="n">request</span><span class="o">.</span><span class="na">setZIP</span><span class="o">(</span><span class="n">zipCode</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Requesting forecast for &quot;</span> <span class="o">+</span> <span class="n">zipCode</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">GetCityForecastByZIPResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="o">(</span><span class="n">GetCityForecastByZIPResponse</span><span class="o">)</span> <span class="n">getWebServiceTemplate</span><span class="o">().</span><span class="na">marshalSendAndReceive</span><span class="o">(</span>
</span><span class='line'>                <span class="n">request</span><span class="o">,</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">SoapActionCallback</span><span class="o">(</span>
</span><span class='line'>                        <span class="s">&quot;http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">response</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">printResponse</span><span class="o">(</span><span class="n">GetCityForecastByZIPResponse</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ForecastReturn</span> <span class="n">forecastReturn</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getGetCityForecastByZIPResult</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">forecastReturn</span><span class="o">.</span><span class="na">isSuccess</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Forecast for &quot;</span> <span class="o">+</span> <span class="n">forecastReturn</span><span class="o">.</span><span class="na">getCity</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;, &quot;</span>
</span><span class='line'>                    <span class="o">+</span> <span class="n">forecastReturn</span><span class="o">.</span><span class="na">getState</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">SimpleDateFormat</span> <span class="n">format</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="n">Forecast</span> <span class="n">forecast</span> <span class="o">:</span> <span class="n">forecastReturn</span><span class="o">.</span><span class="na">getForecastResult</span><span class="o">().</span><span class="na">getForecast</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">format</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">forecast</span><span class="o">.</span><span class="na">getDate</span><span class="o">().</span><span class="na">toGregorianCalendar</span><span class="o">().</span><span class="na">getTime</span><span class="o">()));</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&quot; &quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">forecast</span><span class="o">.</span><span class="na">getDesciption</span><span class="o">());</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&quot; &quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">Temp</span> <span class="n">temperature</span> <span class="o">=</span> <span class="n">forecast</span><span class="o">.</span><span class="na">getTemperatures</span><span class="o">();</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">temperature</span><span class="o">.</span><span class="na">getMorningLow</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;\u00b0-&quot;</span>
</span><span class='line'>                        <span class="o">+</span> <span class="n">temperature</span><span class="o">.</span><span class="na">getDaytimeHigh</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;\u00b0 &quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;No forecast received&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>该客户端包含了两个方法。<code>getCityForecastByZip</code>用于实际的SOAP交换;<code>printResponse</code>打印收到的响应结果。我们重点关注第一个方法。</p>

<p>在该方法中，<code>GetCityForecastByZIP</code>及<code>GetCityForecastByZIPResponse</code>类衍生于WSDL中，被前一个步骤描述过的JAXB生成。该方法创建了<code>GetCityForecastByZIP</code>请求对象并设置了<code>zipCode</code>参数。打印出邮编后，使用WebServiceGatewaySupport基类提供的<a href="http://docs.spring.io/spring-ws/sites/2.0/apidocs/org/springframework/ws/client/core/WebServiceTemplate.html">WebServiceTemplate</a>来进行实际的SOAP交换。它传入<code>GetCityForecastByZIP</code>请求对象，以及一个<code>SoapActionCallback</code>来传入<a href="http://www.w3.org/TR/2000/NOTE-SOAP-20000508/#_Toc478383528">SOAPAction</a>头，因为WSDL说明其需要在<code>&lt;soap:operation/&gt;</code>元素中使用该头。该方法将返回值转换为<code>GetCityForecastByZIPResponse</code>对象，然后返回该对象。</p>

<h3>配置web service组件</h3>

<p>Spring WS使用了Spring框架的OXM模块。该模块拥有<code>Jaxb2Marshaller</code>类来序列化和反序列化XML请求。</p>

<figure class='code'><figcaption><span>src/main/java/hello/WeatherConfiguration.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">hello</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.oxm.jaxb.Jaxb2Marshaller</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Configuration</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WeatherConfiguration</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Bean</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Jaxb2Marshaller</span> <span class="nf">marshaller</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Jaxb2Marshaller</span> <span class="n">marshaller</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Jaxb2Marshaller</span><span class="o">();</span>
</span><span class='line'>        <span class="n">marshaller</span><span class="o">.</span><span class="na">setContextPath</span><span class="o">(</span><span class="s">&quot;hello.wsdl&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">marshaller</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Bean</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">WeatherClient</span> <span class="nf">weatherClient</span><span class="o">(</span><span class="n">Jaxb2Marshaller</span> <span class="n">marshaller</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">WeatherClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WeatherClient</span><span class="o">();</span>
</span><span class='line'>        <span class="n">client</span><span class="o">.</span><span class="na">setDefaultUri</span><span class="o">(</span><span class="s">&quot;http://wsf.cdyne.com/WeatherWS/Weather.asmx&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">client</span><span class="o">.</span><span class="na">setMarshaller</span><span class="o">(</span><span class="n">marshaller</span><span class="o">);</span>
</span><span class='line'>        <span class="n">client</span><span class="o">.</span><span class="na">setUnmarshaller</span><span class="o">(</span><span class="n">marshaller</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>marshaller</code>被指向了生成的领域对象集合，将使用这些对象来实现XML和POJO之间的序列化和反序列化。</p>

<p>我们使用了上面显示的天气服务URI创建和配置了<code>weatherClient</code>。他也被配置使用JAXB marshaller。</p>

<h3>生成可执行的应用程序</h3>

<p>该应用程序被打包后可运行与命令行，传入一个邮编则会得到一个天气预报。</p>

<figure class='code'><figcaption><span>src/main/java/hello/Application.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">hello</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationContext</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">hello.wsdl.GetCityForecastByZIPResponse</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Application</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ApplicationContext</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">WeatherConfiguration</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">WeatherClient</span> <span class="n">weatherClient</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="n">WeatherClient</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">String</span> <span class="n">zipCode</span> <span class="o">=</span> <span class="s">&quot;94304&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">zipCode</span> <span class="o">=</span> <span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">GetCityForecastByZIPResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">weatherClient</span><span class="o">.</span><span class="na">getCityForecastByZip</span><span class="o">(</span><span class="n">zipCode</span><span class="o">);</span>
</span><span class='line'>        <span class="n">weatherClient</span><span class="o">.</span><span class="na">printResponse</span><span class="o">(</span><span class="n">response</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>main()</code>方法调用了<code>SpringApplication</code>辅助方法，并向其<code>run()</code>方法传入了<code>WeatherConfiguration.class</code>参数。这会使<code>Spring从WeatherConfiguration</code>中读取注解元数据，并作为<a href="http://spring.io/understanding/application-context">Spring应用程序上下文中</a>的一个组件进行管理。</p>

<blockquote><p>注意:该应用程序硬编码了邮编94304，Palo Alto, CA。在该指南的最后，你可以看到如何添加不同的邮编而不用修改代码。</p></blockquote>

<h3>构建可执行的jar包</h3>

<p>你可以创建一个包含所有必须的依赖，类，及资源的可执行的JAR文件。这很方便传输，版本管理以及独立于部署生命周期来部署服务，跨不同的环境，诸如此类。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gradlew build
</span></code></pre></td></tr></table></div></figure>


<p>然后你可以运行WAR文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>java -jar build/libs/gs-consuming-web-service-0.1.0.jar
</span></code></pre></td></tr></table></div></figure>


<p>如果你使用的是maven，你可以使用<code>mvn spring-boot:run</code>来运行程序，或者你可以使用<code>mvn clean package</code>构建JAR文件，并使用下面命令来运行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>java -jar target/gs-consuming-web-service-0.1.0.jar
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注意：上面的产出物是一个可运行JAR文件。你也可以<a href="http://spring.io/guides/gs/convert-jar-to-war/">创建一个经典的WAR文件</a>。　</p></blockquote>

<h3>运行服务</h3>

<p>如果使用的是Gradle，可以使用以下命令来运行服务：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gradlew clean build <span class="o">&amp;&amp;</span> java -jar build/libs/gs-consuming-web-service-0.1.0.jar
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注意：如果你使用的是Maven，可以使用以下命令来运行服务：<code>mvn clean package &amp;&amp; java -jar target/gs-consuming-web-service-0.1.0.jar</code>。</p></blockquote>

<p>你也可以通过Gradle直接运行该程序：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gradlew bootRun
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注意：使用mvn的话，命令是<code>mvn spring-boot:run</code>。</p></blockquote>

<p>可以看到日志输出。该服务应该在几秒钟内启动并运行起来。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Requesting forecast for 94304
</span><span class='line'>
</span><span class='line'>Forecast for Palo Alto, CA
</span><span class='line'>2013-01-03 Partly Cloudy °-57°
</span><span class='line'>2013-01-04 Partly Cloudy 41°-58°
</span><span class='line'>2013-01-05 Partly Cloudy 41°-59°
</span><span class='line'>2013-01-06 Partly Cloudy 44°-56°
</span><span class='line'>2013-01-07 Partly Cloudy 41°-60°
</span><span class='line'>2013-01-08 Partly Cloudy 42°-60°
</span><span class='line'>2013-01-09 Partly Cloudy 43°-58°
</span></code></pre></td></tr></table></div></figure>


<p>你也可以使用不同的邮编：<code>java -jar build/libs/gs-consuming-web-service-0.1.0.jar 34769</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Requesting forecast for 34769
</span><span class='line'>
</span><span class='line'>Forecast for Saint Cloud, FL
</span><span class='line'>2014-02-18 Sunny 51°-79°
</span><span class='line'>2014-02-19 Sunny 55°-81°
</span><span class='line'>2014-02-20 Sunny 59°-84°
</span><span class='line'>2014-02-21 Partly Cloudy 63°-85°
</span><span class='line'>2014-02-22 Partly Cloudy 63°-84°
</span><span class='line'>2014-02-23 Partly Cloudy 63°-82°
</span><span class='line'>2014-02-24 Partly Cloudy 62°-80°
</span></code></pre></td></tr></table></div></figure>


<h3>总结</h3>

<p>恭喜你！你开发了一个客户端来使用Spring调用一个基于SOAP的web service。</p>
]]></content>
  </entry>
  
</feed>
