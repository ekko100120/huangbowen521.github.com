<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[黄博文的地盘]]></title>
  <link href="http://www.huangbowen.net/atom.xml" rel="self"/>
  <link href="http://www.huangbowen.net/"/>
  <updated>2015-08-17T09:27:43+08:00</updated>
  <id>http://www.huangbowen.net/</id>
  <author>
    <name><![CDATA[黄博文]]></name>
    <email><![CDATA[huangbowen521@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何快速掌握一门新技术/语言/框架...]]></title>
    <link href="http://www.huangbowen.net/blog/2015/08/17/learn-new-technology-quickly/"/>
    <updated>2015-08-17T09:20:36+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/08/17/learn-new-technology-quickly</id>
    <content type="html"><![CDATA[<p>IT行业中的企业特点是都属于知识密集型企业。这种企业的核心竞争力与员工的知识和技能密切相关。而如果你在企业中扮演的是工程师的角色的话，那么你的核心竞争力就是IT相关的知识与技能的储备情况。而众所周知，IT行业是一个大量产生新知识的地方，就拿Web前端举例，短短的5，6年时间，Web前端已经经历了数次变革，就目前来看变革还将继续下去。从以前的div+css网格化布局到JavaScript的方兴未艾，然后是各种JavaScript框架的百家争鸣，HTML5和CSS3的落地，移动web冲击下带来的响应式设计，jQuery,AngularJs,ReactJs等操作DOM元素截然不同的理念和方式，web component的标准化进程&hellip;&hellip;为什么现在企业到处都在招前端工程师？好像突然之间，前端工程师成了稀缺资源。这里的原因之一就是很多前端工程师跟不上行业变化，无法达到目前市场上对前端工程师的能力和要求。在这种大环境下，工程师能够掌握快速学习的能力就变的至关重要。</p>

<!-- more -->


<p>笔者根据自身的亲身体会，以及结合对周围同事的观察，对如何快速掌握一门新技术（这里的技术包括一门新的IT技术，包括一门新的编程语言，抑或一种新的程序框架等）有着以下几点指导。</p>

<p>要想快速掌握一门新技术，首先有两个先决条件。</p>

<ol>
<li><p><strong>首先思想要主动求变，敢于跳出的自己的舒适区，对任何技术都抱有开放的心态。</strong>贪图安稳是人的本性。而这种本性往往会阻碍你的发展。人所能了解的知识的多少，取决于自己的舒适区有多大，舒适区越大，与外界接壤的范围越大，就越感觉自己的无知。程序员至少要做到两点，<strong>不要对自己不了解的技术心存偏见，不要对自己不熟悉的技术心存恐惧</strong>。</p></li>
<li><p><strong>要化被动式学习为主动式学习。</strong>在中国很大一批程序员每天都是在被动式学习。什么是被动式学习？就是被人、事逼着去学习。今天新启动一个项目，技术调研不想采用新的技术，开发过程中碰到难题才会去查资料，整天就是把别人的、自已以前写的代码复制重用，复制以后出问题了也要花好长时间解决。举个例子，一个程序员使用了Spring好几年，都不知道Spring的核心理念，不知道Spring框架结构，不知道Spring各个组件功能，不知道Spring新版本的新特性。这是非常可怕的，因为你不知道这些东西，就无法采纳Spring的最佳实践，出现问题不知道如何快速定位，项目中的某些需求就无法使用Spring早已封装好的功能（因为你不知道Spring还能干这个）。主动式学习需要你未雨绸缪，不能临时抱佛脚。而且要把学习看做是对自己的积累和提高，看成是对自己的长期投资，不能抱有太强的功利性。</p></li>
</ol>


<p>有人说，我就是喜欢舒适区，我就是不喜欢主动学习，有什么好的方式和方法改变这两点？说实话，我所能提供给你的帮助很有限。正如《后会无期》里的一句台词，“我听过很多大道理，可依然过不好这一生”。这两点还是更要靠你个人来实现。而接下来的一些点，我相信可以帮助到你。</p>

<ol>
<li><p>学习一门新技术前，先要搞清楚为什么要学习它？没这个技术前我们是怎么干活的？有了它以后我们又是怎么干活的？它带来了哪些改变？其实问这些问题，就是为了了解该技术解决或者简化了那个问题域的问题，又是采用了什么方式达到了这样的效果。就拿AngularJS为例，AngularJS最初是为了弥补HTML构建应用的不足。以前的HTML在设计时是为了展示多媒体信息，后来虽然拓展了一些动态功能，但是在应用web化的潮流下，HTML设计上的不足就越来越突出。比如DOM元素操控太繁琐、业务逻辑很难模块化、可测性低、开发效率底下等。而AngularJS采用了一种全新的设计来解决该问题，它提出了一系列概念，引入了数据绑定、标识符、路由、依赖注入等特性，大大简化了我们开发WEB开发的工作量。通过这样的方式能迅速建立起了对该技术的宏观认识，了解了其潜在的应用场景、应用方式以及一些局限性等。</p></li>
<li><p>接下来就要实际使用一下该技术的核心的功能，强化对它的认识。方式就是参考该技术官网的Quick Start（快速开始）章节，一步一步来。<strong>现在的程序员越来越珍惜时间，文档的简洁性、完备性、易上手都成了是否采纳某项技术的指标之一。尤其是现在的各种开源组件，连文档都是开源的。</strong>所以很多文档都是完全按照程序员的思维写的，读起来很清爽。再拿Spring来说，想学习Spring4.0推出的Spring boot组件，那么可以访问其<a href="http://projects.spring.io/spring-boot/">官网</a>，页面上最大的按钮就是Quick Start。点击学习吧。页面是一个简单的例子，可能花不了你五分钟。如果还没过瘾，右边又列出了更多的</p></li>
</ol>


<p>Getting Started Guides ，也是一步一步的教你进阶功能。有些人可能要问了，英语不好怎么办？请学英文。<strong>英文是一个优秀程序员的必备技能。</strong>可能也有人说，看文档时有各种杂音咋办。比如看Spring boot的start guide，需要之前对Spring有一定了解，需要知道tomcat、jetty是干啥的，需要有一定gradle或者maven使用经验…这些知识在演练Spring boot的那个小程序时都需要，但由于这些杂音的干扰，会拖慢学习的过程。摆脱这些杂音的唯一方式就是，对于那些不了解的知识点，也花时间去学习吧。<strong>所以学习是一个良性循环的过程，学的越多，就学的越快。</strong></p>

<ol>
<li><p>前面两步能够保证你对一门技术入门，那么如何进阶那？这个阶段就是读了。从官网上把该技术的详细文档扒拉下来，使劲读吧。通读这些文档能让你进入它的实现细节，以及各种使用方式与场景，甚至一些最佳实践。比如Spring boot<a href="http://docs.spring.io/spring-boot/docs/1.3.0.M3/reference/htmlsingle/">官方文档</a>，详细到了牙齿。凡是你想到的、没想到的，文档都贴心的列了出来。如果你想学习Scala，那么请访问<a href="http://www.scala-lang.org/documentation/">http://www.scala-lang.org/documentation/</a>，各种文档应有尽有，读完就是大半个Scala专家。<strong>一门技术最好的文档必须是它的官方文档</strong>，如果不是，那么这门技术火不了。注意通读文档的过程中一定要在项目加以运用。如果在项目中没实践机会，自己可以写一些小的demo来实践。学习知识时实践与理论相结合的道理恒古不变。</p></li>
<li><p>走完前三步，你对这门技术的理解已经比大多数人强了。你可以算掌握这门技术了。那么还有进阶方式没？当然有，那就是把你所学、所想讲出来，写出来，暴露在公众之下，接受批判，从而发现自己的不足，促使你进步。有空给大家做几个讲座，写几个系列文章，那么你在大家眼中就成了这门技术的牛人。你就有了各种机会来解决使用该技术遇到的各种疑难杂症，反过来加深和修正你的理解。没事上上StackOverFlow，回答别人几个问题，或者订阅该技术的问题列表，经常看一看。</p></li>
<li><p>还可以再继续深入。加入国内/国际技术社区（国内没这样的社区咋办，机会来了，赶紧自己建一个），进一步发挥自己影响力。翻译、编写与该技术相关的书籍；如果该技术是开源的，那么有时间就提交修改把，自己就成了开发者一员了。这就是质的飞跃，从使用工具进阶到创造工具。</p></li>
</ol>


<p>走完5步，你已经不是仅仅掌握这门技术了，你已经超神了好吧！有人可能又会问，能达到这五步的肯定要花很长时间，不是一般人能够到的高度。那当然了，这个过程肯定很难，但并非难到登天。至少我身边有很多这样的例子。其实你只要完成前三步，你就比50%的程序员牛了，完成第四步，你已经站在90%程序员的前面。</p>

<p>最后快速总结。重要的事情说三遍。</p>

<ol>
<li><p>主动学习很重要，主动学习很重要，主动学习很重要。</p></li>
<li><p>官方文档很重要，官方文档很重要，官方文档很重要。</p></li>
<li><p>实践很重要，实践很重要，实践很重要。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[膝盖中了一箭之康复篇]]></title>
    <link href="http://www.huangbowen.net/blog/2015/08/01/recovery-after-acl-surgery/"/>
    <updated>2015-08-01T19:54:17+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/08/01/recovery-after-acl-surgery</id>
    <content type="html"><![CDATA[<p>7月1日手术。手术完后即按照护士要求做踝泵及伸腿运动，次数多少记不得了，反正300次应该是有的。护士说不能下地，但我坐床上实在无法撒尿，最后还是站在床边撒的。</p>

<!-- more -->


<p>7月2日早上刚开始发现不能直抬腿，主要是大腿肌肉可能麻醉效果还没过，完全无法收紧肌肉，膝盖部位一点力气都没有。自己尝试侧着身体抬腿，发现可行，练了一个小时后，突然发现能平躺着直抬腿了。然后使用CPM机做曲腿练习，70度无压力。下午护士教了床边垂腿及下地双拐走路。之后上厕所都是自己拄拐去的。</p>

<p>7月3日早上器械弯腿能到80度。每天早上2次冰敷，下午1次冰敷。自己也练了直抬腿及各种角度抬腿。麻药效果完全消失，伤口缝合处碰到了会火辣辣的痛。下午为了吃一份加节子的肥肠粉，走了40分钟才到吃饭的地方，回来又花了40分钟。</p>

<p>7月4日CPM机弯腿到90度（由于CPM机有偏差，实际有75度左右）。</p>

<p>7月5日CPM机弯腿到100度（实际有85度左右）。</p>

<p>7月6日CPM机弯腿到110度（实际有95度左右）。</p>

<p>7月7日CPM机弯腿仍然是110度。膝盖有些肿，所以没敢继续加角度。床边垂腿已经可以大于90度了。</p>

<p>这几天每天早上都是CPM弯腿40分钟，冰敷两次，每次15分钟。电疗一次，20分钟。下午冰敷1次，15分钟。床边垂腿练习，10分钟。期间自己间歇进行抬腿练习。</p>

<p>7月8日出院。下午尝试了下脱拐走路，发现没问题。但为了保险起见，没有多走。由于膝盖轻微肿胀，所以垂腿角度仍然是90度。</p>

<p>7月9日再次尝试脱拐，发现走的更稳了。遂带上支具，改为单拐走路。下午彻底脱拐。</p>

<p>7月10日把纱布去了发现膝盖肿的有点凶，遂加强冰敷，并且改为单拐走路。已经两天没练弯腿了，想等着肿胀减轻点再练习。没事就去网上、贴吧查看各种康复训练资料。决定这一个月内主、被动角度练到90度就行了，不着急突进角度。</p>

<p>7月14日早上去北京出差。保险起见带了支具，只带了一个拐。可以走特殊通道过安检，上飞机也可以走商务舱通道，挺爽的。但是在飞机上就不爽了，由于腿无法弯曲，坐在位置上难受惨了，而且飞机还晚点。到了北京已经下午了，入住酒店已经6点过。从机场到酒店又是大巴、又是地铁把我折腾惨了，早说打的。7月15日要上台讲课，站了1个小时，还好。由于会议在国家会议中心，在鸟巢、水立方隔壁，我又拖着拐去鸟巢、水立方那边逛了逛。15号晚上坐飞机回成都，到成都已经12点了。膝盖还是有些肿，里面积液较多。</p>

<p>之后的几天就呆在家里休养。弯腿也突然突破90度了，弯到100度无压力，再弯曲的话就痛了，最好的时候能到110度。</p>

<p>7月20日开始上班。第一天上班打的车，带了支具和拐。到了公司以后拐很少用，还是带着支具走来走去。</p>

<p>7月25日尝试开车，发现可行，没有任何不适。（自动挡的车，踩刹车和油门完全没问题，和好腿一样反应灵敏）一个月没开车了，车的不像样子了。自己把车洗了，开出去溜了溜。</p>

<p>晚上尝试了靠墙静蹲，一次能坚持2分钟。虽然自己走路挺早，但是股四头肌和小腿肌肉还是萎缩明显。大腿萎缩了3厘米左右，主要是以前大腿肌肉发达，而制动后肌肉消失特别快。</p>

<p>7月27日开始上下班开车。由于路上堵，上班通常要开1个小时左右，其实只有13公里，一半时间堵在路上。1个小时下来腿还是有点涨。</p>

<p>7月29日去杭州出差，需要出差一个月左右。</p>

<p>时间过的很快，已经是做完手术1个月了。医生说1个月的时候要去复查，我现在出差也回不去，等到2个月的时候再复查。</p>

<p>自从出院后的康复一直断断续续，弯腿是每天一次，冰敷以前是每天2次，上班后就改成了晚上弯腿了冰敷了。现在出差了虽然带了冰袋，但没冰箱也没冰敷。膝盖的肿胀减轻了很多，里面还是有积液，所以看起来有点肿。弯腿主动能90，被动110多度，不到120，自己觉得进度可以，也没下狠心扳。现在走路不带支具（在客户现场，带支具有些别扭）、不拄拐，走的挺稳的，看起来只是稍微有点瘸。不过上下楼梯还是无法交叉步，只能一步步来。</p>

<p>接下来待出差的事情理顺后就打算找个健身房开始有规律的康复性训练了。自己之前在健身房泡过8个月，所以基本知识、基本动作还是知道的。希望能早日开始跑步训练，自从4月18日大连100越野赛后就再没跑过步，不知道跑步是什么滋味了。参加比赛更是遥遥无期，至少也要在半年后了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[翻译-Salt与Ansible全方位比较]]></title>
    <link href="http://www.huangbowen.net/blog/2015/07/21/salt-vs-ansiable/"/>
    <updated>2015-07-21T15:15:47+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/07/21/salt-vs-ansiable</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://jensrantil.github.io/salt-vs-ansible.html">http://jensrantil.github.io/salt-vs-ansible.html</a></p>

<p>作者： Jens Rantil</p>

<p>之前某些时候我需要评估配置管理系统。结合从他人得到的意见，我认为<a href="https://puppetlabs.com/">Puppet</a>及<a href="http://www.getchef.com/">Chef</a>在配置和运行方面过于复杂。由于我是Python粉，所以我时常关注<a href="http://www.ansible.com/home">Ansible</a>及<a href="http://www.saltstack.com/">Salt</a>。Ruby目前不是我感冒的语言，当然我也不想在这里引起语言之争。</p>

<!-- more -->


<p>去年我花了6个月美好的时光用Ansible来配置服务器。从而对这个工具变得很熟悉。在那个项目中Ansible可以说是最佳选择，因为它易于使用，还有完整的文档。我所工作的团队尽量遵循文档中指示的<a href="http://docs.ansible.com/ansible/playbooks_best_practices.html">最佳实践</a>，从而使我们快速上手，而且我们可以借鉴已经被验证过可以工作的结构。</p>

<p>几周前我去日本开始为期10天的休假，在一个完全没人认识我的地方，我有充足的时间来阅读一些电脑杂志和文档。享受了美味的寿司，观赏了东京美景，玩耍了滑雪之余，我发现阅读<a href="https://media.readthedocs.org/pdf/salt/latest/salt.pdf">Salt PDF文档</a>是一个很棒的休闲。</p>

<p>当然我花了一些时间来试用Salt并使用了<a href="http://docs.saltstack.com/en/latest/topics/tutorials/starting_states.html">States</a>系统。现在我认为我对两个系统有了一个粗略的背景，我义无返顾的进行了一个具有个人色彩的测评。</p>

<h2>术语</h2>

<p>Salt及Ansible创建之初都被作为执行引擎。即，它们都可以在一台或多台远程系统中执行命令，并且可以并行执行。</p>

<p>Ansible支持在多个机器上执行任意的命令行命令。它也支持执行模块。一个<a href="http://docs.ansible.com/ansible/modules.html">Ansible模块</a>基本上是以对Ansible友好的方式编写的Python模块。大多数标准的Ansible模块是幂等的。这意味着你只需告诉你的系统想要的状态，那么该模块就会尝试将你的系统调整为该状态。</p>

<p>Unusable也有<a href="http://docs.ansible.com/ansible/playbooks.html">Playbook</a>的概念。一个playbook是为一组主机定义了一系列模块执行顺序的文件。playbook可通过执行模块来改变主机准柜台。这使得我们可以精准控制多台机器，比如在升级一个应用程序之前把机器从负载均衡器中剔除出去。</p>

<p>Salt有两种模块：<a href="http://docs.saltstack.com/en/latest/ref/modules/all/index.html">执行模块</a>和<a href="http://docs.saltstack.com/en/latest/ref/states/all/index.html">状态模块</a>。执行模块可以简单的执行一些命令，比如执行命令行命令，或者下载一个文件。状态模块与Ansible模块更相似，通过参数定义一个状态，而模块则尝试满足该最终状态。通常状态模块调用执行模块来完成工作。</p>

<p>状态模块执行时使用state执行模块。状态模块支持通过文件定义状态，该文件被称为SLS文件。而状态与主机的映射关系被定义在<a href="http://docs.saltstack.com/en/latest/ref/states/top.html">top.sls</a>文件中。</p>

<p>playbook及SLS文件（通常）都是使用YAML格式。</p>

<p>另外，我想指出当任务需要使用inventory,或者需要在多台机器上运行时，使用远程执行引擎是非常有用的。</p>

<h2>架构</h2>

<p>Salt有一个Salt master，而很多Salt minon在初始化时会连接到该master上。通常，命令起始于master的命令行中。master然后将命令分发到minion上。初始化时，minion会交换一个秘钥建立握手，然后建立一个持久的加密的TCP连接。我可以喋喋不休的阐述Salt如何借助<a href="http://zeromq.org/">ZeroMQ</a>库来通讯，但简短的来说，Salt master可以同时连接很多minion而无需担心过载，这归功于ZeroMQ。</p>

<p>由于minion和Salt master之间建立了持久化连接，所以Salt master上的命令能很快的到达minion上。minion也可以缓存多种数据，以便加速执行。</p>

<p>Ansible无需master，它使用SSH作为主要的通讯层。这意味着它比较慢，但无需master意味着它在设置及测试Ansible playbook上更加容易。有人也声称它更安全，因为它不需要额外的服务器程序。你可以在“安全”章节获取更多信息。</p>

<p>Ansible也有支持ZeroMQ的版本，但需要一个初始的SSH连接来设置。我尝试了这个，但说实话我并没感到速度有所提升。我猜如果playbook更大，主机更多时才会感受到速度的提升。</p>

<p>Ansible推荐使用inventory文件来追踪机器。inentory文件基本上包含了一组主机，可以对其分类为组，可以对一组主机或单个主机指定属性。你可以建立多个inventory文件，比如一个作为阶段环境，另一个作为产品环境。</p>

<p>Salt也支持使用SSH替代ZeroMQ，即<a href="http://docs.saltstack.com/en/latest/topics/ssh/">Salt SSH</a>。但请注意目前还是试用版本（而且我还没尝试用过）</p>

<h2>社区</h2>

<p>对于这两个项目我都有使用IRC及邮件列表的经历。我也给它们发过补丁包，包括Python代码及一些文档修正。以下是我的经历的总结：</p>

<p>Ansible：IRC上反馈非常快，并且很友好。但该项目貌似缺少社区影响，更像是一个人在领导，即Michael DeHaan。抱歉我这样说，其实我很喜欢社区，因为对于改进更加开放和友好。Ansible一些改进问题还未修复就关闭了，让我感觉它把问题隐藏了起来。好在所有的问题都有回答。</p>

<p>Salt需要继续证明其欢迎社区贡献。IRC反馈已经变得及时和友好。有时我需要借助于邮件列表。我有一些邮件，直到4天以后才得到响应，但看起来每个邮件最终都会有跟进。</p>

<p>我的印象是Salt有更成熟的社区，更欢迎协作。我说这句话时可能会得罪很多人，当然这是我个人观点！</p>

<h2>速度</h2>

<p>如果你以为你的服务器比较少，速度无所谓时，我相信你是错的。能够快速迭代永远是非常重要的。长期来说，配置缓慢会拖慢你的整个节奏。如果有些东西需要花费30秒以上来编译，我会在编译时去玩Twitter，而这意味着该编译会其实会花掉至少120秒。部署时也会这样。</p>

<p>Ansible始终使用SSH来初始化连接。这很慢。也许Ansible的ZeroMQ实现（之前提到过）会改善这点，但初始化依然会很慢。Salt默认使用ZeroMQ，所以很快。</p>

<p>之前说过，Salt拥有持久的minion进程。这使得Salt可以缓存文件，从而加速执行。</p>

<h2>代码结构</h2>

<p>我最不能忍受的是Ansible模块不能被导入（因为<a href="https://github.com/JensRantil/ansible/blob/devel/library/files/copy#L189">导入就会执行代码</a>）。这意味着测试模块时会引入一些魔法。因为你无法导入任何一个模块。我不喜欢魔法，而喜欢纯粹简单的代码。这更像Salt的风格。</p>

<p>少用魔法意味着给Salt模块写测试更清晰。Salt完全可测。我很高兴Salt关于<a href="http://docs.saltstack.com/en/latest/topics/development/tests/unit.html">测试</a>有三个章节，包括鼓励你mock一些你不具备的基础设施来增加可测性，比如mock一个MySQL实例。</p>

<p>以上说明Ansible通常拥有简洁干净的代码。我在其中可以快速跳转。然而，<a href="https://groups.google.com/forum/#!msg/ansible-project/mpRFULSiIQw/jIIQdOSubnUJ">提升代码结构</a>不是“Ansiable社区”的关注点。</p>

<p>Ansible和Salt都可以通过<a href="https://pypi.python.org/pypi/salt">PyPi</a>来安装。</p>

<h2>Vagrant支持</h2>

<p>当讨论测试时，DevOps人喜欢Vagrant。直到现在我还没用过它。Vagrant可以使用Slat和Ansible提供的模块来初始化机器。这意味着在初始化机器时，Vagrant可以轻而易举的使用master+minion模式，或者执行一个playbook。</p>

<h2>任务编排</h2>

<p>Ansible和Salt都支持编排，我认为Ansible中编排规则更容易理解和使用。基本上，playbook可以分割为多个任务组，每组匹配一组主机（或主机组）。每组按顺序来依次执行。这与任务的执行顺序相同。</p>

<p>Salt支持<a href="http://docs.saltstack.com/en/latest/topics/event/index.html">事件</a>和<a href="http://docs.saltstack.com/en/latest/topics/reactor/">反应器</a>。这意味Salt执行可能会触发另一个机器上的东西。Salt的执行引擎也支持监控。所以未来这块前景比较广阔。你可以使用<a href="http://docs.saltstack.com/en/latest/ref/states/overstate.html">Overstate</a>在集群中以特定顺序设置多种角色来实现基础编排。</p>

<p>Ansible比Salt在编排方面更好，因为它简单。Salt将来会更好，因为在集群变化中它更具持续反应性。</p>

<p>Salt及Ansible都支持通过机器窗口执行任务。这对于保证服务始终可用（比如升级时）是非常有用的。</p>

<h2>安全</h2>

<p>Ansible使用SSH来传输数据。SSH是经历过考验的协议。一旦SSH服务器被正确配置（使用一个良好的随机数生成器），我相信大多数人会认为SSH客户端是安全的。</p>

<p>Ansible也可以轻松的建立多个非root用户与单个主机的连接。如果你非常反对有进程以root权限运行，那么你可以考虑使用Ansible。Ansible支持使用sudo来以root方式执行模块。所以你可以无需使用root来建立SSH连接。</p>

<p>Salt使用“自己”的AES实现及key管理。我想指出这里的“自己”其实是使用<a href="https://www.dlitz.net/software/pycrypto/">PyCrypto</a>包。Salt<a href="http://www.cvedetails.com/vulnerability-list/vendor_id-12943/product_id-26420/version_id-155046/Saltstack-Salt-0.17.0.html">以前</a>有安全问题，但同时我认为Salt架构很简单，所以安全问题可以轻松的维护。</p>

<p>有点需要指出，Salt运行master及minion时默认以root方式。这个配置可以改，但显而易见会导致一些新问题，比如非root模式下很难安装Debian包。在master上你可以配置salt命令为非root模式。我极力推荐这样做。</p>

<h2>敏感数据</h2>

<p>所有敏感数据应当单独存放，然后在需要时存放在配置机器上。如果配置机器是系统管理员的机器（现在通常是笔记本电脑），那么会有数据被盗用的风险。</p>

<p>经过深入的长时间思考后，我认为认证master方式是更好的选择。这意味着敏感数据可以强制存放在一个受保护的地方（当然需要加密的备份）。Salt可以把安全证书存放在”Pillar”里。当然，破解master会是个毁灭性打击，但是同时我们只需要安全保护一台机器。不是所有的开发者电脑都是安全的，尤其在火车上或飞机场时。</p>

<p>显然，Ansible用户可以选择始终通过一个绝对安全的存放敏感数据的电脑上执行playbook。但人们通常会这样做吗？</p>

<h2>审计能力</h2>

<p>当讨论安全时我认为审计是相当重要的。Salt在这方面比Ansible做的要好。Salt的每次执行都会在master上<a href="http://docs.saltstack.com/en/latest/topics/jobs/index.html">存放</a>X天。这样我们更容易调试，也容易发现可疑的事情。</p>

<h2>部署</h2>

<p>Ansible显然更容易些。因为它无需部署。当然，Salt支持SSH，但文档中大多数情况下假设我们使用ZeroMQ的方式。当然，SSH要慢些。</p>

<p>初始化minion的好处是这些minion都会连接到master。这使得我们可以快速初始化很多新机器。如果你想使用类似于亚马逊的自动化弹性扩展功能时，minion-连接架构很有用。每一个自动化弹性扩展的机器将自动变为一个minion。</p>

<p>Salt <a href="https://github.com/saltstack/salt-bootstrap">初始化脚本</a>非常好用，而且执行很快。可以处理不多种分发，文档也很<a href="http://salt.readthedocs.org/en/latest/topics/tutorials/salt_bootstrap.html">丰富</a>。</p>

<h2>学习曲线</h2>

<p>Ansible这方面更好。Ansible更容易学习及提高。因为我们只需拷贝一份Ansible GIT代码库，然后设置一些环境变量就可以执行playbook了。</p>

<p>Salt可以以<a href="http://docs.saltstack.com/en/latest/topics/tutorials/quickstart.html">非master模式</a>运行。这样可以更容易设置和运行salt。然而，对于产品环境（以及阶段环境）我推荐使用master模式来运行Salt。</p>

<p>通体来说，Salt功能更花哨，代价是学习曲线陡峭。Salt<a href="http://docs.saltstack.com/en/latest/topics/development/modular_systems.html">更加模块化</a>。这易于组织代码结构，但是完全精通Salt需要更多学习。</p>

<h2>升级</h2>

<p>升级Salt取决于当时是如何安装Salt的。基于Debian的分发的话，有一个apt代码库来存放最新的Debian包。所以升级的话可以使用apt-getupgrade。对于Ubuntu机器，有PPA。这些代码库的维护很活跃。最新发布的2014.1.0版本一周内（时间有点长）就有了Debian/Ubuntu包。</p>

<p>升级Ansible更简单。你只需简单执行git fetch &amp;&amp; git checkout <tag>即可。</p>

<h2>文档</h2>

<p>两个项目都有详尽的文档供你设置和运行，以及开发模块及配置。过去Ansible比Salt有更好的文档结构。最近Salt花了<a href="https://github.com/saltstack/salt/issues/10526">大力气</a>来重整文档。我也贡献了自己的力量来帮助完善这些文档。</p>

<h2>结语</h2>

<p>对于我来说，Ansible是个极好的工具来自动化服务器配置及自动化部署。设置Ansible并运行起来很简单，而且文档也很丰富。</p>

<p>进一步说，Salt具有可伸缩性，速度快，架构合理。我发现Salt的结构更适合云端部署。将来我会毫不犹豫的使用Salt。</p>

<p>总的来说，你在做出选择之前最好在你的项目中都试用下它们。反正配置及测试Ansible及Salt都非常快。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[膝盖中了一箭之手术篇]]></title>
    <link href="http://www.huangbowen.net/blog/2015/07/08/acl-recovery/"/>
    <updated>2015-07-08T13:43:42+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/07/08/acl-recovery</id>
    <content type="html"><![CDATA[<p>虽然5月份已经确诊了前十字韧带断裂，但由于公司项目一时走不开，无法立即手术。几番协商以后，终于确认手术时间定于6月底。期间专门挂了胡勇的6月17日的门诊，让他给看了看。胡主任让助手给我做了各项检查，结合MRI结果，得出了我的前交叉韧带肯定断裂了的结论。所幸我的半月板没有任何问题。顺便我也去了住院部，想预约6月27日住院。但护士告诉我只有提前两天打电话才行。</p>

<!-- more -->


<p>6月25日给住院部去膝关节科打电话，被告知26日可以办理入院，周末不办理入院。无奈第二天请假去办理入院手续。早上办完入院手续已经快中午了。下午又做了各项检查，晚上还溜出去和公司同事team building。由于星期六早上5点要抽血，所以周五在医院睡的。我被分配的是膝关节科最大的一个病房，有七张床位，人多虽然热闹，但晚上比较吵，一晚没睡好。五点多护士MM来抽血，一口气就抽了五大罐。</p>

<p>周六周日一般都不安排手术，所以我也没啥事情，就溜回家了。周末都在家里过的，差点让我忘记了我还在住院。期间护士打了好几次电话，催我赶紧回去。</p>

<p>周一回到病房，主治医生和住院医生查房，确定了我的手术被安排在周三。护士告知手术前一天晚10点钟过后直到手术完成后2小时都不能吃东西和喝水。住院医生也给我们讲了手术的方案和风险。由于以前我已查阅过大量的资料，所以整个过程还是去比较清楚。手术确定了自体双束重建的方案，优先取患肢大腿内侧处肌腱编制为韧带。如果强度不够，则再取其它地方。</p>

<p>周三早上换上手术服就在病床上等候。期间护士给刮了腿毛，还给右腿缠上了一个带子。一直等到中午12点才有护工来接我去手术室。先是给我推到了麻醉室，麻醉师给我右腿打了一针，顿时右腿肌肉就不听使唤了，不停的跳，感觉有股暖流在流动。过了一会才把我真正的推到手术室。手术室的样子和电视里看到的差不多。期间主治医生不断地摆弄我的腿以便将器械调到合适的位置。我发现身体不停的抖动，不知道是麻醉的效果还是由于害怕。麻醉师在反复确认我身份后，给我的左手推了几针，顿时左胳膊剧痛无比。我问麻醉师：“怎么左胳膊这么痛？”麻醉师说他正在给我推麻药。然后他拿了一个类似于氧气罩的东西放在我嘴边让我吸。我只吸了几口顿时就睡着了。</p>

<p>当我醒来的时候是被人拍醒的。看到护工正打算把我往病房推。我问：“手术成功了没？”有个医生说：“成功了。”到了病房后我才发现我的右腿被包成了粽子。可能右腿的麻醉还没完全过，疼痛还在忍耐的范围之内。这时候护士就让我多练习下泵踝，就是钩右脚掌和伸右脚掌。晚上一夜没睡好，痛倒是可以忍受，就是腿不能动，翻身之类的都极其困难。</p>

<p>第二天一大早护士就来查房，让我直抬腿。我试了几次都不行，感觉大腿肌肉完全不受控制，不能紧绷，膝盖那块也没感觉。我发现侧着抬腿可以，就试着先侧抬腿。就这样练了一个小时，突然发现可以直抬腿了。主治医生也来查房了，看到我能直抬腿，说我肌力不错，下午可以下床了。早上护士还拿了一个帮助弯腿的机器来让我联系弯腿，这天只试了70度，感觉还行。下午护士教了如何下床和床边垂腿。终于可以去厕所撒尿了。</p>

<p>第三天早上又是冰敷、电疗、使用机器弯腿。这次加到了80度，感觉还好。只不过麻醉效果完全过了，缝合的伤口处如果碰到就会钻心的痛。之后这几天都是老三样，直抬腿、床上曲腿、床边曲腿。我的角度练的还可以，术后6天被动角度可以到110，床边垂腿角度可以到90。练习康复动作各种酸爽，那感觉简直不摆了。</p>

<p>7月7日住院医生蒋医生通知第二天可以办理出院了。我当天又偷偷溜回家休息。7月8日早上回到医院，办理了出院手续。住院期间总共花费31000元不到，社保报销了16000多，自费了14000多。伤不起。</p>

<p>接下来就是漫漫的自我康复之路。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何培养自信心]]></title>
    <link href="http://www.huangbowen.net/blog/2015/06/16/how-to-build-self-confidence/"/>
    <updated>2015-06-16T17:58:46+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/06/16/how-to-build-self-confidence</id>
    <content type="html"><![CDATA[<p>self-confidence（自信心）——是一种反映个体对自己是否有能力成功地完成某项活动的信任程度的心理特性，是一种积极、有效地表达自我价值、自我尊重、自我理解的意识特征和心理状态，也称为信心。自信心的个体差异不同程度地影响着学习、竞赛、就业、成就等多方面的个体心理和行为。</p>

<!-- more -->


<p>当你被指派一个任务时，你会基于你目前所拥有的资源和能力做出一个评估，结果得出自己是否能胜任这个任务。自己目前能力&lt;该任务所需能力，你却得出能胜任的结论，那就是你对自我认知不足，盲目乐观，这就是自负的表现。自己目前能力 >=该任务所需能力，而你却认为无法胜任，那就是过于贬低自己，这就是自卑。</p>

<p>从自负被打回原形比较容易，因为你多自负几次，多栽几个跟头，那么你就老实了。而从自卑上升到自信则难多了，因为由于自卑，你根本不会去领取任务，这意味着你不会完成该任务，从而无法提升自信，有新任务来时又主动退缩，陷入死循环。</p>

<p>所以大家可能看出来了，培养自信心的关键在于，多做事，做没做过的事。不断的检验自己，校正自己对自己的认知。但是大家在面临工作中的挑战时，报的都是比较谨慎的态度，因为事情没做成，轻则挨顿骂，重则丢了饭碗，所以又陷入一个死循环，谨慎接任务->无法突破自身->自信心（能力）无法提升->谨慎接任务。</p>

<p>所以培养自信心可以从生活中的事情开始。有一个很好的任务就是跑一个马拉松。如果你之前没有跑过马拉松，那么你肯定有很多问题想知道。</p>

<ol>
<li>马拉松距离有多长？</li>
<li>跑马拉松需要什么样的装备？</li>
<li>从现在开始训练，需要多长时间能够完成马拉松?</li>
<li>需要什么样的训练计划？</li>
<li>如何安排自己的训练时间？</li>
</ol>


<p>这么多的问题要把你淹没，自己完成一个马拉松似乎变成了一个不可能的任务。如果这时你退缩，那么我可以告诉你，你自卑了。因为据科学家研究，一个普通人，只要你没某些不适合跑步的疾病（比如心脏病等）以及肢体残疾（有些残疾人也能完成马拉松），通过训练都可以完成42公里的跑步。我说你行，你缺少的就是干劲。</p>

<p>虽然有这么多问题，你还是决定试试。那么首先要解决这些问题。如何解决不需要我教了吧？网上一查，资料一大把。多去跑步圣经、跑步吧里逛逛，买几本关于跑步的书，找几个身边的长跑健将聊聊天，大多数的问题都迎刃而解。小部分的问题可能会使你纠结，比如有人说跑步需要3呼3吸，有人说2呼2吸，有人说亚索800方法好，有人说MAF有奇效。不用纠结，你要进入下个环节了，实战训练，从训练中感知这些理论方法，从而找到更适合自己的方式。</p>

<p>刚开始训练感觉新奇，时间久了似乎各种问题又来了。最近太忙，训练时间很难保证；跑了这么久，距离还是无法突破；到底是先练距离还是先练速度那？&hellip;&hellip;.说时间紧的那我劝你不练了。因为咱们的任务就是跑一个全程马拉松，你没时间训练，那就别干了。这就好像老板喊你7天搭一个网站出来，你说对不起最近LOL正在冲击排位，没时间做。跑马拉松这件事本来就是你自己给自己定的任务，老板就是你自己，所以时间问题你看着办。其它问题好说，搞IT这行的最不缺的技能就是利用资源。多看书、多逛跑步论坛、多找过来人交流….(怎么还是老三样)再加上自己在训练中融会贯通，我就不信你不长进。</p>

<p>好了，经过一段时间训练了，感觉自己进步很大，但还是拿不准啥时候能跑个全马。如果你想达到“万事俱备，只欠东风”，那么对不起，你不是诸葛亮，东风啥时候来你是不会知道的。这就需要你设置个deadline了。先报名一个几个月后的全马比赛（一般马拉松比赛都是提前几个月报名），然后你的训练会更加鸡血。而且你会找到一群志同道合的基友（没找到？不知道咋找？我膝盖前叉断裂，都轻松找到了一群病友，你到底用心没？），一起集训，相互鼓励。</p>

<p>比赛的日子越来越近了。回想这几个月来，你为了这一目标付出了这么多实打实的汗水，肯定感慨良多。你认识了一群基友，熟悉了周边没逛过几次的公园，看到了早晨7点钟的城市，学会了跑步中对自我反思&hellip;.恭喜你，这些都是跑马拉松给你带来的从来没有的体验。虽然在迎接这天的过程中，你激动的内心有些忐忑，但是你似乎已经得到了很多意想不到的东西。</p>

<p>比赛这天终于到来了，站在起点前，和好几万人一起打算度过数小时的地狱旅行。这时你的心里除了激动还是激动。比赛结果其实已经不重要了，当你站在跑道上的时候，你就比以前的你强了。如果能顺利完赛，你已经不是以前的你。如果因故未完赛，放心，这绝不是你最后一场马拉松，相信你已经谋划下一次冒险了。</p>

<p>好了，你已经完成了生活中的一个任务了。有没有收获？自信心有没有提升？你试一下你就知道了。可以放心的告诉你，这种感觉绝对比你考试得了全班第一的感觉还要美好。另外，跑完马拉松不是你这个任务的终点。它就像给你打开了一个潘多拉魔盒，你会发现有更多的事情你可以去做，比如铁人三项，比如越野跑&hellip;&hellip;</p>

<p>好吧，可能有点标题党。明明讲如何提升自信心，但通篇却在讲如何完成个人首马。其实很多事情都是相通的。因为你已经发现了如何做一件没做过的事情。</p>

<p>首先，先答应下来。这个最关键。</p>

<p>然后，发动所有的资源，了解这个事情。</p>

<p>接下来，做吧。别忘了边做边验证，吸收过来人的经验。</p>

<p>最后，接受检验吧。检验结果不用担心，因为无论通过与否，你整个过程已经有了大量的收获。</p>

<p>看完以后是不是有种自信心爆棚的错觉？别忘了关键两点：
1. 坚定决心要做；
2. 努力想如何做。</p>

<p>最后，尽情享受事情做成后带来的成功感和喜悦吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[膝盖中了一箭]]></title>
    <link href="http://www.huangbowen.net/blog/2015/06/08/i-hurt-my-knee/"/>
    <updated>2015-06-08T16:37:11+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/06/08/i-hurt-my-knee</id>
    <content type="html"><![CDATA[<p>从小到大，虽然没得过什么大病，但是受的伤不少。什么磨血泡、扭伤、擦伤之类的家常便饭，对于经常踢球、打球的人来说没什么大不了，休息几天又是一条好汉。高中的时候曾经骨折过2回，虽然打着石膏的时候很苦逼，但是伤好后没留下什么后遗症，也没什么心理阴影。</p>

<!-- more -->


<p>没想到去年12月踢球那次受伤这么严重。当时和同事踢球，进了几个球很嗨。在一次做急转变向时膝盖弯曲幅度过大，直接痛的坐在了地上。就是这个动作导致我前叉韧带断裂。当然这个断裂是半年后才知道的。当时休息了一会就自己开车回去了。第二天还一拐一瘸的上班。休息了一周感觉膝盖没啥问题了就又去跑步，还参加一个又一个的比赛。</p>

<p>那段时间跑了1个马拉松，一个20公里越野跑比赛，还有60公里越野跑比赛在55公里处被关门。最惨痛的是大连100公里越野赛在72公里处由于右膝剧痛而无奈退赛。这也导致我回成都后就去医院检查膝盖。检查结果出来了自己懵了，上面赫然写着前叉韧带断裂。这可是很多专业运动员得的病啊，咱一个业余的还能整的这么凶？</p>

<p>由于接连两个比赛都没能完赛，正激起我的训练决心。奈何这个检查结果把一切计划都打乱了。人生就是这样的无常，时不时的非要给你开一些玩笑。</p>

<p>从医院回来一直在考虑要不要手术。因为现在感觉也没什么大碍，走路是个正常人，跑步也没问题，只要不跑太远，只不过打球、踢球之类的就不行了。做手术人要受痛，手术效果也未知，而且手术费也不便宜，再加上手术完要静养，意味着很长一段时间内不能工作。</p>

<p>但是查阅了网上的一些资料以及一些病友的经历后，觉得手术是唯一的出路。除非你以后不想再运动了。这对于我来说肯定是不可接受的。生命在于运动，没有运动的生命是多么的暗淡。而且现在自己已经习惯了运动，修养久了反而觉得身体到处不舒服。</p>

<p>在百度贴吧和豆瓣小组很容易就找到了一群难兄难弟，还有QQ上也加了一个群，顿时算是走入了叉友们的世界（膝盖韧带损伤的人相互之间都以叉友相称）。叉友们韧带断裂或者半月板损伤的原因很多，踢足球、打篮球、打羽毛球、交通事故、攀岩&hellip;..五花八门，甚至还有走路不小心扭伤的。总体来说很多都是运动受的伤，而且深爱着这项运动。作为业余运动员膝盖受伤后如果要远离这项运动肯定都难以接受。而手术后的康复之路也是漫长的，即使完全好了也难过心理这关。</p>

<p>不过既然是爱运动的人，那么心态都比较积极，承受能力也相对大些。现在的辛苦是为了以后的再出发。通过和他们交流我也理清了一些困惑，了解了手术的过程以及大概的康复历程。知道此番路程并不容易，但也无法避免，只能尽全力度过。</p>

<p>受了伤以后，虽然尽量保持乐观，但是心态还是有些影响。比如坚持去健身房这件事情也渐渐的荒废了。这件事情肯定还要捡起来，以后做恢复训练就靠它了。</p>

<p>这次预计要休息1个月左右，这可是自从2008年开始实习以来能够休息的最长时间了。就当这是一次调整的机会吧，好好的调整下，陪陪家人，想想之后的事情。最近股市有一句话说：“深蹲是为了跳得更高！”。而这次休息是为了下次跑的更远。</p>

<p>无论什么时候，都用积极的心态去迎接挑战，迎接一切。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Grunt task中集成Protractor]]></title>
    <link href="http://www.huangbowen.net/blog/2015/06/01/integrate-protracto-to-grunt-task/"/>
    <updated>2015-06-01T12:18:57+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/06/01/integrate-protracto-to-grunt-task</id>
    <content type="html"><![CDATA[<p>Protractor是专为AngularJS应用程序编写的UI自动化测试框架。前端构建有很多构建工具，比如Grunt、Gulp等。一般我们会把这些构建工具作为集成集成的脚本执行工具。所以如果把Protractor的执行也集成进去，则可以达到自动验证UI功能的效果。</p>

<!-- more -->


<p>本文将介绍如何将Protractor命令集成到Grunt task中。</p>

<p>首先需要为Grunt安装一个插件，<code>grunt-protractor-runner</code>。这个插件会帮你在Grunt中运行Protractor。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm install grunt-protractor-runner —save-dev
</span></code></pre></td></tr></table></div></figure>


<p>在Gruntfile.js文件中引入该插件(如果你没有package.json文件)。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grunt.loadNpmTasks<span class="o">(</span><span class="s1">&#39;grunt-protractor-runner&#39;</span><span class="o">)</span>;
</span></code></pre></td></tr></table></div></figure>


<p>接着在Gruntfile.js中配置protractor运行参数。需要指定protractor的配置文件路径。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>protractor: <span class="o">{</span>
</span><span class='line'>  e2e: <span class="o">{</span>
</span><span class='line'>      options: <span class="o">{</span>
</span><span class='line'>      keepAlive: <span class="nb">true</span>,
</span><span class='line'>      configFile: <span class="s2">&quot;protractor.conf.js&quot;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在Gruntfile.js中新注册一个名为<code>e2e</code>的task，用于运行Protractor。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grunt.registerTask<span class="o">(</span>‘e2e’,’run e2e tests’, <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  grunt.task.run<span class="o">([</span>
</span><span class='line'>       <span class="s1">&#39;connect:test&#39;</span>,
</span><span class='line'>       <span class="s1">&#39;protractor:e2e&#39;</span>
</span><span class='line'>  <span class="o">])</span>;
</span><span class='line'>
</span><span class='line'><span class="o">})</span>;
</span></code></pre></td></tr></table></div></figure>


<p>此外为了不忘记自动更新webdriver的版本，可以在package.json中加入以下代码块：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="s2">&quot;scripts&quot;</span>: <span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;install&quot;</span>: <span class="s2">&quot;node node_modules/protractor/bin/webdriver-manager update&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样每次运行<code>npm install</code>时会自动更新webdriver版本。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[当我完善几年前的一个老项目时，我做了哪些改进]]></title>
    <link href="http://www.huangbowen.net/blog/2015/05/15/improvement-in-a-legacy-project/"/>
    <updated>2015-05-15T11:06:55+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/05/15/improvement-in-a-legacy-project</id>
    <content type="html"><![CDATA[<p>最近几个月利用业余时间完成了一个项目。这个项目其实是2008年我在前公司做的一个web项目。后来客户想要对项目做升级，牵扯到一些功能的变动及界面的修改。由于当时整个项目的架构和主要编码都是我做的，所以前公司老总喊我来接这个项目，使用业余时间完成。我考虑了一下答应了。为了挣点钱养家就拼点呗。</p>

<!-- more -->


<p>几个月前在接这个活前，我曾写过一篇文章<a href="http://www.huangbowen.net/blog/2014/02/17/how-to-improve-a-legacy-project/">如果让我完善几年前的一个项目，我会做哪些改进?</a>。主要从工程实践的角度讲述了我将进行那些改进。</p>

<p>经过几个月的辛苦开发，终于完成了这次的功能升级，拿到了报酬。针对这种遗留系统，我来谈谈我具体都进行了那些改动。</p>

<ol>
<li><p>不用动的地方尽量不动。由于代码是08年我作为实习生写的，那代码自然惨不忍睹，有些地方写的非常累赘。经过几年打磨的我对代码质量要求已经上升了很多个层次，看到这些烂代码不禁忍不住要重构。但是我忍住了，因为这是个遗留系统，当时就没有写单元测试，所以重构过程肯定风险较大。另外工期只能用业余时间，要以新需求为主，只改开发新需求时需要碰的那些代码。</p></li>
<li><p>使用github作为代码托管服务。即使是一个人开发，也需要使用源代码管理工具，这样做起来自己心里才有底。而github自己用了好几年了，非常好用，而且自己买了github的会员。所以这次把代码以私有仓库的方式放在上面。随时写，随时提交，比自己搭建源代码服务器方便的多。</p></li>
<li><p>引入bootstrap框架作为前端框架。这次升级一个重要任务是对前端进行优化，使其能兼容多个浏览器。08年的时候大家都在用IE6，IE7，IE8都很少有人用。过了这么多年网站早都不能兼容现代浏览器了，而且屏幕分辨率适配也很差劲。作为一个前端菜鸟，我只花了一点时间学习了bootstrap，就快速把它引入到了我的项目中。我基本上把以前的css、js代码都删除了，使用bootstrap轻轻松松的就把这个老站改成了一个兼容多个浏览器，多种屏幕尺寸的网站。</p></li>
<li><p>升级.net中使用的各种组件。这个网站使用的是WebForm框架，版本为2.0。我发现在现代浏览器下WebForm组件生成的前端HTML,CSS及JavaScript存在大量不兼容的问题。网站页面变得很不稳定。当升级到4.0平台后，问题得到大大改善。另外我还使用了AjaxControllToolKit组件，发现在某些浏览器下（比如360浏览器）页面局部刷新不了。所以我也一并升级到了最新的15.3版本。虽然把各种组件都升级了，还存在一些JavaScript问题，比如日历选择框无法正常显示与选择。我采用的方法就是抛弃掉旧的JS代码，寻求成熟的JS框架来替代。比如使用bootstrap-datepicker组件来实现日历框的选取。</p></li>
<li><p>采用最新的Visual studio编辑器。微软终于想通了，与其让我们天朝成天用盗版的Visual Studio，不如直接开放一个社区版出来。我下载了Visual Studio 2013社区版，并给其装上了ReSharper组件。由于ReSharper是收费的，但是有差不多1个月的试用期。之前一直使用Intellij开发工具做开发，能在Visual Studio 2013中使用它也是觉得很爽。</p></li>
<li><p>引入了package管理工具，使用Nuget来安装、管理各种项目依赖。使用过程中我发现Nuget没有Java平台下的Maven或Gradle强大。很多依赖都不是最新版本，管理理念也不太一样。不过聊胜于无吧。像bootstrap等前端组件以及ajaxcontrolToolkit等后端组件我都是通过Nuget来管理的。</p></li>
<li><p>使用事务机制处理系统中的核心逻辑。这个系统是一个编码管理系统，主要处理炸药、雷管编码的整个流通。系统有的时候会出现重复编码的情况，比如一发雷管的编码同时存在于库存中和消耗库中。这是由于雷管从在库状态转换为消耗状态时出了问题，并没有在库存中删除该编码。这次升级我把类似的逻辑都用事务来处理，一旦发生异常就会整体回滚，不会造成脏数据的情况。</p></li>
</ol>


<p>其实我还想引入的几个点由于种种原因都没有完成。</p>

<ol>
<li><p>没有添加单元测试。本来想给Vistual Studio 2013添加单元测试框架，奈何花了几个小时都没整好。另外工程目录方面也需要进行一定的调整来引入测试项目，整了一次没搞定后也不了了之。由于这次升级80%功能是前端页面的改进，涉及后端代码修改的不多，所以没有单元测试的情况下修改已有代码还是比较有信心的。</p></li>
<li><p>没有引入持续集成。还是时间成本的原因。毕竟这个活都是使用业余时间完成的，搭建C#栈的CI估计要花上好几天，所以最后并未实现。</p></li>
<li><p>自动化部署。之前对.NET下的网站的部署都是手动的，将编译生成后的文件复制到服务器上，暂停IIS，重载文件，重新启动IIS。其实这些都是可以自动化完成的，自己没花时间研究，所以也未实现。</p></li>
<li><p>使用成熟的log框架给系统关键逻辑打上log。这个纯粹是自己懒，不想做。因为加log方便自己以后排查错误，对客户来说没有任何影响，自己就懒得弄了。</p></li>
<li><p>没有引入自动化测试。还是时间成本的原因，编写web的自动化测试太花时间了，所以只能舍弃。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用protractor操作页面元素]]></title>
    <link href="http://www.huangbowen.net/blog/2015/05/04/use-protractor-to-manipulate-dom-elements/"/>
    <updated>2015-05-04T17:02:05+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/05/04/use-protractor-to-manipulate-dom-elements</id>
    <content type="html"><![CDATA[<p>Protractor是为Angular JS应用量身打造的端到端测试框架。它可以真实的驱动浏览器，自动完成对web应用的测试。Protractor驱动浏览器使用的是WebDriver标准，所以使用起来与其他语言实现的WebDriver库大体相同。当然，我说大体相同那肯定还是有不同的地方。一旦不注意这些不同的地方就会坑到你（我就被成功坑过，所以才有了这篇文章）。</p>

<!-- more -->


<p>Protractor编写测试的核心是查找DOM元素，与其交互，然后查看交互后的状态与你的期望是否一致。所以查找DOM元素并与之交互显的非常重要。Protractor提供了一个全局函数element，其接受一个Locator对象并返回一个ElementFinder对象。该函数会返回单个元素。如果你想返回多个元素，可以使用element.all函数，其接受一个Locator对象并返回ElementArrayFinder对象。ElementFinder对象有一组方法，用于元素交互，比如click()，getText(),sendKeys等。</p>

<p>Locator对象的创建主要使用全局的by对象，其提供一些API来生成Locator对象以供element或element.all函数使用。</p>

<p>比如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//根据class名来查找元素</span>
</span><span class='line'><span class="nx">by</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="err">‘</span><span class="nx">myclass</span><span class="s1">&#39;)</span>
</span><span class='line'>
</span><span class='line'><span class="s1">//根据id来查找元素</span>
</span><span class='line'><span class="s1">by.id(‘myid&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//根据ng-model名来查找元素</span>
</span><span class='line'><span class="nx">by</span><span class="p">.</span><span class="nx">model</span><span class="p">(</span><span class="err">’</span><span class="nx">name</span><span class="s1">&#39;)</span>
</span><span class='line'>
</span><span class='line'><span class="s1">//查找绑定了指定名的元素</span>
</span><span class='line'><span class="s1">by.binding(‘bindingname&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//查找指定repeater中的元素</span>
</span><span class='line'><span class="nx">by</span><span class="p">.</span><span class="nx">repeater</span><span class="p">(</span><span class="err">‘</span><span class="nx">myrepeater</span><span class="err">&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看出前两个Locator的创建方法与其他语言实现的WebDriver的用法基本一样，而后几个则专为AngularJS应用设计的，方便在基于AngualrJS框架下写的web应用中查找页面元素。这是第一处不同。</p>

<p>另一处不同其他语言实现的WebDriver库使用Locator找到的元素类型是WebElement，而Protractor则返回的是ElementFinder对象。两者不同之处是在于ElementFinder对象不会立即与浏览器交互，根据指定的Locator来查找到页面上的元素；而只有当你调用了ElementFinder对象的方法时，它才会真正的与浏览器进行交互。一些常用的方法有以下所示。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//这时不会与浏览器交互获取元素信息</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">el</span> <span class="o">=</span> <span class="nx">element</span><span class="p">(</span><span class="nx">by</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="err">‘</span><span class="nx">mycss</span><span class="err">’</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//点击元素</span>
</span><span class='line'><span class="nx">el</span><span class="p">.</span><span class="nx">click</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//给该元素输入内容</span>
</span><span class='line'><span class="nx">el</span><span class="p">.</span><span class="nx">sendKeys</span><span class="p">(</span><span class="err">’</span><span class="nx">text</span><span class="err">’</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//清空元素内内容</span>
</span><span class='line'><span class="nx">el</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//获取指定属性的值</span>
</span><span class='line'><span class="nx">el</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="err">‘</span><span class="nx">value</span><span class="err">’</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//获取元素的文本值</span>
</span><span class='line'><span class="nx">el</span><span class="p">.</span><span class="nx">getText</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>请注意这些方法都是异步的。所有的方法返回的是一个promise（我就吃过这个亏，以为返回的是值）。所以比如你想输出一个元素的值，应该这么写：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">(</span><span class="nx">by</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="err">‘</span><span class="nx">myclass</span><span class="err">’</span><span class="p">)).</span><span class="nx">getText</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">text</span><span class="p">);</span>
</span><span class='line'><span class="p">})</span><span class="o">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果你使用expect方法来验证元素的值时，expect方法会帮你取出promise中值，所以你只用这么写:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">expect</span><span class="p">(</span><span class="nx">element</span><span class="p">(</span><span class="nx">by</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="err">‘</span><span class="nx">myclass</span><span class="err">’</span><span class="p">)).</span><span class="nx">getText</span><span class="p">()).</span><span class="nx">toEqual</span><span class="p">(</span><span class="err">&#39;确定’</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>还有不同的地方在于Protractor支持对元素查找时进行链式调用。这样的功能相当实用。你可以组合element和element.all两个函数来定位元素。并且Protractor还提供了几个辅助方法来更方便你的使用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">all</span><span class="p">(</span><span class="nx">locator1</span><span class="p">).</span><span class="nx">first</span><span class="p">().</span><span class="nx">element</span><span class="p">(</span><span class="nx">locator2</span><span class="p">);</span>
</span><span class='line'><span class="nx">element</span><span class="p">(</span><span class="nx">locator1</span><span class="p">).</span><span class="nx">all</span><span class="p">(</span><span class="nx">locator2</span><span class="p">);</span>
</span><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">all</span><span class="p">(</span><span class="nx">locator1</span><span class="p">).</span><span class="nx">get</span><span class="p">(</span><span class="nx">index</span><span class="p">).</span><span class="nx">all</span><span class="p">(</span><span class="nx">locator2</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>element.all函数提供的辅助方法有：</p>

<ul>
<li>filter： 提供一个过滤器过滤其中的元素。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">element</span><span class="p">.</span><span class="nx">all</span><span class="p">(</span><span class="nx">by</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="err">‘</span><span class="nx">myclass</span><span class="err">’</span><span class="p">)).</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">ele</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">return</span> <span class="nx">ele</span><span class="p">.</span><span class="nx">getText</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="k">return</span> <span class="nx">text</span> <span class="o">==</span> <span class="err">‘确定&#39;</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>get： 根据索引获取指定元素。如 element.all(by.css(‘myclass’)).get(0);</p></li>
<li><p>first: 获取第一个元素。 element.all(by.css(’myclass’)).first();</p></li>
<li><p>last: 获取最后一个元素，用法同上。</p></li>
<li><p>count：获取元素个数。</p></li>
</ul>


<p>此外还提供了each，map,reduce等方法对列表进行各种操作。</p>

<p>element函数提供的辅助方法有：</p>

<ul>
<li><p>locator: 返回locator对象。</p></li>
<li><p>getWebElement： 返回该ElementFinder包裹的WebElement对象。</p></li>
<li><p>all: 查找其一组子元素。</p></li>
<li><p>element: 查找其子元素。</p></li>
<li><p>isPresent: 元素是否在页面上展示。</p></li>
</ul>


<p>总结起来，Protractor与其它的WebDriver语言实现的区别如下：</p>

<ol>
<li><p>Protractor专为AngualrJS应用定制，其自身包含了很多wait操作，保证AngularJS脚本执行完毕后才进行下一步操作，保证了测试的稳定性与健壮性。</p></li>
<li><p>Protractor设计的By对象针对AngularJS应用提供了很多实用方法，在定义AngularJS应用页面时更加轻松。</p></li>
<li><p>element函数返回的是ElementFinder对象，其不会立即与浏览器交互，除非调用ElementFinder对象的方法。</p></li>
<li><p>调用ElementFinder对象的方法返回的是一个promise。（这点很重要）</p></li>
<li><p>Protractor在定位元素时支持链式调用。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大连100公里越野赛_心中的痛]]></title>
    <link href="http://www.huangbowen.net/blog/2015/04/23/dl100/"/>
    <updated>2015-04-23T15:57:14+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/04/23/dl100</id>
    <content type="html"><![CDATA[<p><img src="http://www.huangbowen.net/images/airanshao.jpg" width="600">编号是0365的那个人是我</p>

<p>比赛已经于上周日结束了，但是一想到我的退赛，心中就痛苦万分。有人说，退赛比坚持更难，也许真的如此。有人说，过程比结果重要，但是过程也不完美。有人说，距离是有尊严的，那肯定是我对它不够尊重。</p>

<!-- more -->


<p>我于2014年4月份开始跑步，由于经常骑车，耐力比较好，所以一开始就是10公里。跑步的原因很简单，就是想减掉身上的肥肉，把身体练的结实些。2014年8月份尝试了第一次马拉松，9月份又跑了一次半马比赛。在又跑了几次马拉松比赛后，对越野跑开始感兴趣。参加了龙山30公里越野，耗时8小时踩着关门时间完成。但是2014年12月份多踢球的时候不慎右膝扭伤，第二天走路一瘸一拐，差不多了养了1个半月才好。那时候没有重视起来，没去医院检查。这修养的一个半月直接导致我体重增长了10斤。1个半月后感觉伤势已无大碍，就又开始跑步。参加了平乐金鸡谷20公里越野，耗时3个半小时。3月中旬的重庆马拉松原定4小时跑完，但准备不充分再加上赛场上出了状况，第26公里跑崩，接下来的十几公里都是走完的，耗时5小时14分。3月30日爱江山龙山越野赛参加了60公里组，爬到山顶后一路下坡，但是跑不起来，自己技术不行+膝盖痛，只能走着。走到55公里处被关门。</p>

<p>右膝平时走路没问题，但是运动量一超过20公里就有感觉，再多的话就无法跑动了。我以为恢复的不彻底，所以也没太在意。接下来离大连100只剩下18天了。进入4月份以后事情比较多，训练只能利用晚上的时间，大概晚上10点多在小区内开始跑，跑完12公里收工。连续训练了几天，速度虽然没练上来，但是好歹是找回了点状态。</p>

<p>为了防止右膝出状况，我还特意买了副护膝给右膝，好在路跑还行，右膝反应不大。</p>

<p>比赛的日子临近了，4月17号坐上了去大连的飞机，中午达到。入住酒店后领了跑手包，去海边逛了逛。晚上回来把第二天要穿的东西都码好，省的早上起来手忙脚乱。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1938.JPG" width="600"></p>

<p>这次大连100前50公里我的装备是：</p>

<ul>
<li><p>2条魔术头巾</p></li>
<li><p>李宁跑步T恤</p></li>
<li><p>萨洛蒙跑步背包（包内皮肤风衣一件，能量胶3个，能量棒一个，盐丸三个，泡腾片半盒，手机一部）</p></li>
<li><p>TomTom运动手表</p></li>
<li><p>骑行手套</p></li>
<li><p>迪卡侬紧身7分裤</p></li>
<li><p>迪卡侬护膝（只是右膝）</p></li>
<li><p>迪卡侬护腿（两只）</p></li>
<li><p>泰尼卡闪电2越野跑鞋</p></li>
</ul>


<p>事实证明这套装备还是挺给力的，性价比高（没办法，穷，只能用迪卡侬几十块的东西）。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1936.JPG" width="600"></p>

<p>第二天早上4点起床，吃完早饭排空后来到起跑点，调整片刻做了热身活动后，比赛正式开始。刚开始我维持平时正常的配速，6分左右，下坡时稍快。跑了几公里公路后即开始上山。山上的路也好跑，也是公路。我感觉状态好，想在前面多争取些时间，所以上坡也是慢跑上去。下坡则利用新学的跑步技巧，飞一般的奔下去。即双手略微张开，身体稍微前倾，小步幅，大步频，又快又稳。没过多久就到了补给点1，没感觉多累。过了补给点1以后路开始野了。有羊肠小道，防火道，台阶等。我感觉状态还维持的不错。很快补给点2也轻松跑过。照这样下去拿银海星都没问题。</p>

<p>但是接下来右膝开始有反应了，不得不调整节奏，变为上坡走，下坡和平路跑的策略。到了补给点3，时间花费的不多，自己很满意。从补给点3向补给点4进发的过程中，发觉下坡跑也快不起来了，只好又开始调整为上坡走，下坡慢跑，平路跑。慢慢的超我的人越来越多。好不容易到了补给点4以后，我在站里休息了40分钟才走，不像前几个补给站总共耽误的时间加起来也没有10分钟。我吃了2桶泡面，2碗粥，若干水果。待身体恢复的差不多了才继续进发。补给站4到补给站5有12.5公里。我原计划2个小时到2个小时半到达。但是膝盖越来越痛，基本只能走了，想跑根本跑步起来，跑几步就只能停下来。</p>

<p>这样花了3个小时10分钟我才到补给站5. 在补给站我没什么胃口，只喝了点粥，然后拿上头灯，穿上外套和裤子。已经下午5点了，大连晚上的日子是非常冷的。补给站5到6只有6.5公里，总爬升才200多米。正常情况下不到1小时就可完成。但是我完全跑不起来，磨磨蹭蹭用了1小时半才搞定。到了补给站6天已经完全黑了。还好在路上遇到了一个北京来的哥们，也是膝盖受伤，我们一起前行。这个哥们上个月刚完成了杭州100，毅力惊人。我们一起从补给站6向7进发，这段路是整个赛道中最难的路，11公里，总爬升860多米。按照我们目前行进的速度，乐观点3个小时搞完，不乐观的话需要4个小时。</p>

<p>前半程我们的速度还可以，虽然一直在走，但走的不算很慢。但是过半后，膝盖痛的都无法伸直了。我捡了一根棍子当做拐杖，减轻些压力。已经晚上10点多了，望着面前黑漆漆的裙身，麻木而机械的走着。内心在思考要不要退赛。不退赛的话，膝盖实在受不了了，即使撑到补给站9，还有8公里近800多爬升的魔鬼路段等着我，以我现在的状态很难完成。退赛的话，这对我来说是个巨大的打击。能够站在100公里赛道上的人，意志力都是非常强大的，而我却被自己打败。</p>

<p>最后还是决定退赛了，我们走到补给站7，给工作人员说明退赛，然后交通车把我们拉回了起点。在路上可以看到很多人还在坚持比赛，等待他们的是还有8个小时战斗。而我却在第72公里处退出了这场战斗。</p>

<p>回到酒店澡都没力气洗就睡了。半夜槟郎哥完赛归来，拿到了银海星。第二天我睡到10点才起来，得知成都来的4个人三个参加百公里的都因伤退赛了，只有参加50公里的米儿完赛，虽然也受伤了。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1948.JPG" width="600"></p>

<p>这次没有拿到海星，很遗憾。总结原因如下：</p>

<ol>
<li><p>右膝长距离运动后反应很大，需要去医院检查下，是否是那次受伤有半月板撕裂之类的；</p></li>
<li><p>长距离LSD拉的少，后半程跑不起来体力不够也是原因之一；</p></li>
<li><p>前半程冲的过猛，可能也是早早受伤的原因，欲速则不达。</p></li>
</ol>


<p>当在比赛途中，身体在地狱旅行时，我一直在想自己吃饱了撑的来参加这么自虐的比赛，下次绝对不参加了，好好在家里逗孩子多好。但是比赛完毕后，无论是成功或者失败，我又想马上投入另一场战斗中，开始思考下一场比赛是啥时候。</p>

<p>我决定这周先去检查一下膝盖，看看是否膝盖有损伤。根据医生的检查结果，再制定接下来的训练计划。估计至少半年后再挑战百公里了，可以选择大理100或者HK100，难度相对小些。当然，前提是要保证身体无伤痛+大量的训练。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[驱动力来自哪里-献给迷茫的程序员]]></title>
    <link href="http://www.huangbowen.net/blog/2015/04/21/drive-yourself/"/>
    <updated>2015-04-21T17:46:16+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/04/21/drive-yourself</id>
    <content type="html"><![CDATA[<p>驱动你做一件事情的动力来源是什么？不知道大家想过这个问题没有。一般人可能会想到两种驱动力。</p>

<!-- more -->


<p><strong>一种是生存本能带来的驱动力，即生物性驱动力。</strong>比如每天要吃饭、睡觉、上厕所，长大了要恋爱、结婚等。这种驱动力保证我们能够生存在这个世界上，是一种原始的驱动力。</p>

<p><strong>另一种是奖励或者惩罚带来的驱动力，即外在动机。</strong>比如老板承诺工作干的好有奖金，我们就努力干活。如果上班迟到会罚款，我们会早起等。这种驱动力会改变人的行为，使其多做鼓励的事情，少做禁止的事情。</p>

<p>如果只依靠这两种驱动力，那么你的人生会变得精彩吗？很难。为什么那？第一种驱动力只解决了你的生存问题；而第二种驱动力则约束了你的行为。你不想上班，但不得不上班。一旦你做某件事情获得了奖励，你就会对奖励上瘾。而当你认为你得到的奖励与你的付出不成正比时，你的行为就会松懈下来。</p>

<p>要想保持第二种驱动力长期有效，那么就需要管理者具有相当高的水平，比如确保内部公平和外部公平，报酬要高于平均水平，考核标准衡量因素要广。咱们作为打工的，能碰到这样的领导那肯定是烧了高香。能有10%的领导都做到以上几点就算行了大运了。</p>

<p>那么除了这两种驱动力，还有没有第三种驱动力那？答案是有。<strong>那就是内在动机，即完成某件事情带来的成就感和愉悦感。</strong>比如你打LOL，完成了5杀，那感觉嗨翻天了。还有你去跑步，第一次不间断跑了10公里，完成后的感觉肯定会非常奇妙。你修复了一个存在已久的软件故障，那么今天就会感觉很充实。这种没有人主动给你奖励或惩罚的事情你却干的津津有味。为了练好LOL中的大局观，你研习了数千盘比赛录像。为了能够跑的更远，你查阅了很多跑步相关的教程、书籍。为了修复你遇到的bug，你不惜翻墙来搜集相关资料。</p>

<p>如果你能驾驭这第三种驱动力，那么恭喜你，你的人生会一直前进。关键在于，如何驾驭这第三种驱动力那？你首先要问你自己一个问题，“我真的喜欢编程吗？我能确定我当程序员不仅是为了养家糊口，而是为了实现自己的人生价值吗？”  这一点非常重要，它决定了你是否能利用第三种驱动力来促使你成长。如果你答案是为了养家糊口，那么很可能你成为不了一个优秀的程序员，并且在这条路上你越走越疲倦；如果你的答案是真心喜欢编程，那也很可能说明不了什么问题，除非你每天都在主动的学习和进步。</p>

<p><strong>在编程的路上想要利用第三种驱动力，请先忘却掉它可能给你带来的奖励，而是切实的学习知识，充实自己，奖励只是你进步途中的副产品。</strong>如果你做一件事情先想着它有没有价值，会不会给你带来收益，那么你还是在利用第二种驱动力。能不能带来收益在你当时的环境中你是很难看出来的。举个例子，AngularJs刚面世的时候，我一个同事对其非常感兴趣，研读了很多相关的资料，并积极试用，虽然那时候它极不成熟。在那个时间点其实看不出来它会带来什么收益，说不定过几个月AngularJs框架就会销声匿迹。但是几年下来，我这个同事已经是国内AngularJs的专家了，社区里影响力很大，目前还在写一本关于它的书籍。</p>

<p>第三种驱动力，内在动力，其实就是自主性。<strong>当你做些不是工作范畴之内的事情时，你反而离成功更近。</strong>再拿编程来说，很多大牛在上班时间外，会写一些博客，参加一些社区聚会，翻译或者写书。做这些事情都是靠内在动力驱动的。所以他们成了大牛，而按部就班的程序员依然时普通的程序员。当你自发想做一些事情时，你无疑已经领先了很多人一大步，因为他们都在原地踏步。</p>

<p><strong>第三种驱动力是一种良性循环，很容易就可以把人变得乐观，积极向上，感觉生活充满希望。</strong>善于驾驭这种能力的人会在生活和工作中都使用它，而工作和生活统一起来，不再相互冲突。拿我来说，我平时喜欢跑步，从一次只能10公里，跑到了一次可以跑15公里，20公里，42公里&hellip;.直到上周花了17小时跑了72公里山路，本来计划跑100公里的，但是膝盖受伤，不得不终止。没人强迫我这样跑，我跑完了也没有任何金钱上的奖励，而且跑步本身其实也是蛮花钱的。我为什么这么喜欢跑，那就是一种挑战自己的精神，看看自己的极限在哪里。我不和别人比，只和自己比。<strong>只要能证明今天的自己比昨天的自己更优秀，那我今天就没有白过。</strong>这种精神也会传染到我的工作中。工作中再大的困难都不算什么，别人能做到我也能。即使现在做不到，那么也会主动的寻找差距去弥补，去提升。如果你能从早上6点跑到第二天早上8点（我参加的比赛关门时间是26小时，从早上6点到第二天早上8点，我认识的好几个人都跑了25个多小时，而我在跑了17小时候因伤退赛），那么你会发现很多以前对你来说不可能的事情都不再那么困难。</p>

<p>好了，希望大家都能更好的利用第三种驱动力，即内在动机。<strong>这种驱动力不仅要用在工作上，更要用在生活上。有了孩子以后，我认为生活比工作更重要，工作只是为了创造更好的生活。</strong></p>

<p>希望大家都能快乐、开心、充实的过好每一天。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flyway， 数据库Schema管理利器]]></title>
    <link href="http://www.huangbowen.net/blog/2015/04/08/introduction-of-flyway/"/>
    <updated>2015-04-08T15:10:43+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/04/08/introduction-of-flyway</id>
    <content type="html"><![CDATA[<p>整天跟数据库打交道的程序员都知道，当数据库的Schema发生改变时是多么痛苦的事情。尤其是一个在不断开发完善的项目，随着需求变化，数据库的schema也会跟着变化，而追踪记录这些变化一向都是费时费力。如果你拥有多个测试环境，那么保证这些环境下的数据库的一致性的难度会成倍增加。</p>

<!-- more -->


<p>Flyway，一款小工具，应用它能够大大简化这方面的工作。</p>

<h2>它的优点：</h2>

<ol>
<li><p>convention over configuration，配置简单，使用方便；支持Sql及Java配置；</p></li>
<li><p>支持当前几乎所有的主流数据库；</p></li>
<li><p>拥有命令行工具、Maven、Gradle插件&hellip;.应用场景广泛。</p></li>
</ol>


<h2>使用它之前先要了解一些概念：</h2>

<ul>
<li><p>版本：对数据库的每一次变更可称为一个版本。</p></li>
<li><p>迁移：Flyway把数据库结构从一个版本更新到另一个版本叫做迁移。</p></li>
<li><p>可用的迁移：Flyway的文件系统识别出来的迁移版本。</p></li>
<li><p>已经应用的迁移：Flyway已经对数据库执行过的迁移。</p></li>
</ul>


<h2>如何使用：</h2>

<p>以Sql配置举例，建立一个文件夹用来存放所有数据库修改记录。</p>

<p>每次修改以’V版本号__描述.sql’的方式命名。比如V1__initial_version.sql， V2.1__create_table.sql,V2015.01.05__drop_view.sql</p>

<p><img src="http://www.huangbowen.net/images/SqlMigrationBaseDir.png" width="500"></p>

<p>Flyway会根据文件名自动识别版本顺序，并根据这些版本顺序来应用数据库修改。</p>

<h2>配置</h2>

<p>以使用Flyway的命令行工具为例。安装命令行工具后，运行时Flyway会根据以下路径来寻找配置文件。</p>

<ul>
<li><p>安装目录/conf/flyway.properties</p></li>
<li><p>用户目录/flyway.properties</p></li>
<li><p>当前目录/flyway.properties</p></li>
</ul>


<p>或者直接在命令行使用 <code>-configFile=myfile.properties</code>来指定文件。</p>

<p>配置文件的一个示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>flyway.driver=org.hsqldb.jdbcDriver
</span><span class='line'>flyway.url=jdbc:hsqldb:file:/db/flyway_sample
</span><span class='line'>flyway.user=SA
</span><span class='line'>flyway.password=mySecretPwd
</span><span class='line'>flyway.schemas=schema1,schema2,schema3
</span><span class='line'>flyway.table=schema_history
</span><span class='line'>flyway.locations=classpath:com.mycomp.migration,database/migrations,filesystem:/sql-migrations
</span><span class='line'>flyway.sqlMigrationPrefix=Migration-
</span><span class='line'>flyway.sqlMigrationSeparator=__
</span><span class='line'>flyway.sqlMigrationSuffix=-OK.sql
</span><span class='line'>flyway.encoding=ISO-8859-1
</span><span class='line'>flyway.placeholderReplacement=true
</span><span class='line'>flyway.placeholders.aplaceholder=value
</span><span class='line'>flyway.placeholders.otherplaceholder=value123
</span><span class='line'>flyway.placeholderPrefix=#[
</span><span class='line'>flyway.placeholderSuffix=]
</span><span class='line'>flyway.resolvers=com.mycomp.project.CustomResolver,com.mycomp.project.AnotherResolver
</span><span class='line'>flyway.callbacks=com.mycomp.project.CustomCallback,com.mycomp.project.AnotherCallback
</span><span class='line'>flyway.target=5.1
</span><span class='line'>flyway.outOfOrder=false
</span><span class='line'>flyway.validateOnMigrate=true
</span><span class='line'>flyway.cleanOnValidationError=false
</span><span class='line'>flyway.baselineOnMigrate=false
</span></code></pre></td></tr></table></div></figure>


<h2>命令行工具的几个命令：</h2>

<ul>
<li><p>Clean： 删除所有创建的数据库对象，包括用户、表、视图等。</p></li>
<li><p>Migrate： 对数据库依次应用版本更改。</p></li>
<li><p>Info：获取目前数据库的状态。那些迁移已经完成，那些迁移待完成。所有迁移的执行时间以及结果。</p></li>
<li><p>Validate：验证数据库结构与迁移脚本的异同。</p></li>
<li><p>Baseline：根据现有的数据库结构生成一个基准迁移脚本。</p></li>
</ul>


<h2>进阶</h2>

<p>flyway提供sql配置和Java配置两种方式。sql配置可以方便实现对DDL的修改、一些引用数据的修改；而Java的方式则更强大些，可以应用更为复杂的场景，比如对某个数据表中的数据进行一些逻辑处理。具体使用请参见官方文档：(<a href="http://flywaydb.org/documentation/migration/java.html">http://flywaydb.org/documentation/migration/java.html</a>)<a href="http://flywaydb.org/documentation/migration/java.html">http://flywaydb.org/documentation/migration/java.html</a></p>

<p>熟悉Ruby On Rails的程序员都知道Ruby On Rails自带一个数据库迁移工具，这个和那个差不多，可以说下JVM平台的数据库迁移工具，弥补了JVM平台下维护数据库Schema的不足。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[爱江山越野跑-又上龙山之巅]]></title>
    <link href="http://www.huangbowen.net/blog/2015/04/02/running-on-the-dragon-mountion/"/>
    <updated>2015-04-02T15:59:21+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/04/02/running-on-the-dragon-mountion</id>
    <content type="html"><![CDATA[<p><img src="http://www.huangbowen.net/images/IMG_1876.JPG"></p>

<p><img src="http://www.huangbowen.net/images/IMG_1872.JPG"></p>

<p>现在坐在窗明几净的办公室里敲代码，但是上周末那疯狂的12小时还时不时浮现在眼前。从2014年4月开始跑步，到现在刚好一年时间。在这一年里跑了3个全马比赛，2个半马比赛，还有3次越野跑比赛。但是上周末的越野跑却惨遭关门，成了目前唯一没有完赛的比赛。</p>

<!-- more -->


<p>爱江山越野跑汶川站全程有60公里，需要爬两座大山加一座小山。全程累计爬上3000米+，最高海拔3890米，关门时间14个半小时，不得不说难度很大。由于自己最近练得少，之前一周才跑了重庆马拉松，状态非常不好，所以能否完赛心里没底。重庆马拉松准备不充分，前26公里状态频出，之后改为暴走，花了5小时17分才完成，创下了全马最差纪录。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1836.jpg"></p>

<p>周六下午乘坐组委会大巴车来到汶川，入住酒店。和成都跑客的人一起吃了晚饭，就回去休息。第二天早上5点钟起床，吃早饭、排空，来到了比赛出发的地方，体育广场。做了一些热身动作之后，7点钟开跑了。由于自己知道60公里的路很漫长，所以刚开始并没有求快，按照自己最舒适的节奏奔跑。第一座小山爬升只有几百米，权当热身。接下来的第二座山爬升有1000米，自己体力尚可。过山脊有一段路很刺激，两边都是悬崖，中间还有大石头挡道，只能慢慢的爬过去。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1843.jpg"></p>

<p><img src="http://www.huangbowen.net/images/IMG_1873.JPG"></p>

<p>第二座山下坡时我逐渐落后了。下坡真是我的弱项，还没有平路快，具体原因我也不得而知。可能是胆子的问题，也可能时跑姿的问题。下完坡跑了一段公路后来到了第三座山面前。这座山累计爬升要2000米，难度巨大。尤其是刚开始的一段路，非常危险，稍不留神就会从山上滚落，直接可以不用抢救了。都是60度以上的坡，想跑根本不可能，走都难。我每走100步都要休息一下。心率老是下不去。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1844.jpg"></p>

<p>跑到半山腰后，到了CP1，吃了碗泡面感觉能量又有了，灌满水后继续前进。突然发现接下来的路和去年龙山越野跑的路基本一样，所以不怕迷路了。但是我也知道要跑到顶端的话还有15公里。而这来回共30公里的路我上次用了8小时。</p>

<p>不说了，埋头苦爬吧。连绵不绝的爬升搞的我精疲力尽，偶尔一段平路也完全跑不起来。终于到了距离山顶还有2.5公里的地方。但我知道这2.5公里要花至少1个多小时。因为这段路是最难的，不停的爬升，不停的翻山，很容易让人绝望。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1856.jpg"></p>

<p>下午3点40多终于登顶，而这里的关门时间是3点50分。下撤途中碰到了好几个还在忘山上攀爬的人，我不得不告诉他们已经被关门了，只有下撤了。下山的这段路我的短板再次爆出了。本来上山就花了很多时间，下山速度又不快，时间渐渐逼近关门点。这个时候只有懊悔自己LSD拉的不够多，平时练的不够狠。长时间的运动导致胃口特别差，随意知道自己的能力几乎耗尽，但一点也不想吃身上携带的能量胶。</p>

<p><img src="http://www.huangbowen.net/images/IMG_1862.jpg"></p>

<p>这里有个失误的地方是我以为下山的路和上山的路是一样的，按推算剩下的时间跑完全程没有问题。但是下撤到了CP2才知道接下来还有一个总共8公里的折返。这比上山多出来的8公里直接决定了我很可能被关门。要是平时8公里小case了，不到一个小时就能搞定。但是现在我又累又饿，脚上还磨了水泡，况且还是山路，这8公里花了我将近2个小时才搞定。这样从折返点到CP1的3公里路程需要我在40分钟内完成，否则就只能被关门了。这时候天已经黑了，我已经连续奔跑了12个小时。戴着头灯奔跑在树林中，看着时间一点点流逝。CP1是8点20分关门，而我则在8点30多才赶到，只好在全程55公里接受被关门的命运。</p>

<p>回到酒店已经将近10点了。总结这次失利的原因有以下几条：</p>

<ol>
<li>体重比去年胖了10斤：</li>
<li>LSD拉的不够多；</li>
<li>下坡太弱；</li>
<li>准备不够充分，没有详细了解赛道。</li>
</ol>


<p>接下来打算暂停一些比赛，多练一练，多陪陪家人。待准备充分了再去进行下一轮冲击。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[值得使用的Spring Boot]]></title>
    <link href="http://www.huangbowen.net/blog/2015/03/18/introduction-of-spring-boot/"/>
    <updated>2015-03-18T16:42:34+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/03/18/introduction-of-spring-boot</id>
    <content type="html"><![CDATA[<p>2013年12月12日，Spring发布了4.0版本。这个本来只是作为Java平台上的控制反转容器的库，经过将近10年的发展已经成为了一个巨无霸产品。不过其依靠良好的分层设计，每个功能模块都能保持较好的独立性，是Java平台不可多得的好用的开源应用程序框架。
Spring的4.0版本可以说是一个重大的更新，其全面支持Java8，并且对Groovy语言也有良好的支持。另外引入了非常多的新项目，比如Spring boot，Spring Cloud，Spring WebSocket等。</p>

<!-- more -->


<p>Spring由于其繁琐的配置，一度被人成为“配置地狱”，各种XML、Annotation配置，让人眼花缭乱，而且如果出错了也很难找出原因。Spring Boot项目就是为了解决配置繁琐的问题，最大化的实现convention over configuration(约定大于配置)。熟悉Ruby On Rails（ROR框架的程序员都知道，借助于ROR的脚手架工具只需简单的几步即可建立起一个Web应用程序。而Spring Boot就相当于Java平台上的ROR。</p>

<p>Spring Boot的特性有以下几条：</p>

<ul>
<li><p>创建独立Spring应用程序</p></li>
<li><p>嵌入式Tomcat，Jetty容器，无需部署WAR包</p></li>
<li><p>简化Maven及Gradle配置</p></li>
<li><p>尽可能的自动化配置Spring</p></li>
<li><p>直接植入产品环境下的实用功能，比如度量指标、健康检查及扩展配置等</p></li>
<li><p>无需代码生成及XML配置</p></li>
</ul>


<p>目前Spring Boot的版本为1.2.3,需要Java7及Spring Framework4.1.5以上的支持。如果想在Java6下使用它，需要一些额外的设置。</p>

<p>如果你想创建一个基于Spring的Web应用，只是简单的在页面中输出一个’Hello World’，按照之前的老方式，你需要创建以下文件：</p>

<ul>
<li><p>web.xml : 配置使用Spring servlet，以及web其它配置；</p></li>
<li><p>spring-servlet.xml:配置Spring servlet的配置；</p></li>
<li><p>HelloController.java: controller。</p></li>
</ul>


<p>如果你想运行它的话，需要将生成的WAR包部署到相应的Tomcat或者Jetty容器中才行，这也需要相应的配置。</p>

<p>如果使用Spring Boot的话，我们只需要创建HelloController.java。</p>

<figure class='code'><figcaption><span>HelloController.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">hello</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.stereotype.*</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.*</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Controller</span>
</span><span class='line'><span class="nd">@EnableAutoConfiguration</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloController</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="nd">@ResponseBody</span>
</span><span class='line'>    <span class="n">String</span> <span class="nf">home</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;Hello World!&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">HelloController</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后借助于Spring Boot为Maven和Gradle提供的插件来生成Jar包以后直接运行java -jar即可，简单易用。</p>

<p>上面提过Spring Boot对Maven及Gradle等构建工具支持力度非常大。其内置一个’Starter POM’，对项目构建进行了高度封装，最大化简化项目构建的配置。另外对Maven和Gradle都有相应的插件，打包、运行无需编写额外的脚本。</p>

<p>Spring Boot不止对web应用程序做了简化，还提供一系列的依赖包来把其它一些工作做成开箱即用。下面列出了几个经典的Spring Boot依赖库。</p>

<ul>
<li><p>spring-boot-starter-web:支持全栈web开发，里面包括了Tomcat和Spring-webmvc。</p></li>
<li><p>spring-boot-starter-mail:提供对javax.mail的支持.</p></li>
<li><p>spring-boot-starter-ws: 提供对Spring Web Services的支持</p></li>
<li><p>spring-boot-starter-test:提供对常用测试框架的支持，包括JUnit，Hamcrest以及Mockito等。</p></li>
<li><p>spring-boot-starter-actuator:支持产品环境下的一些功能，比如指标度量及监控等。</p></li>
<li><p>spring-boot-starter-jetty:支持jetty容器。</p></li>
<li>spring-boot-starter-log4j:引入默认的log框架（logback）</li>
</ul>


<p>Spring Boot提供的starter比这个要多，详情请参阅文档：<a href="http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#using-boot-starter-poms">Starter POMs</a>章节。</p>

<p>如果你不喜欢Maven或Gradle，Spring提供了CLI（Command Line Interface）来开发运行Spring应用程序。你可以使用它来运行Groovy脚本，甚至编写自定义命令。安装Spring CLI有多种方法，具体请看：<a href="http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#getting-started-installing-the-cli">安装Spring Boot Cli</a>章节。</p>

<p>安装完毕以后可以运行 <code>srping version</code>来查看当前版本。</p>

<p>你可以使用Groovy编写一个Controller。</p>

<figure class='code'><figcaption><span>hello.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="nd">@RestController</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">WebApplication</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s2">&quot;/&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="n">String</span> <span class="nf">home</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;Hello World!&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后使用<code>spring run hello.groovy</code>来直接运行它。访问localhost:8080即可看到打印的信息。</p>

<p>Spring Boot提供的功能还有很多，比如对MVC的支持、外部Properties的注入，日志框架的支持等。这里就不详述了。感兴趣的可以查看其<a href="http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/">文档</a>来获取详细的信息。</p>

<p>如果你想在你的项目中使用Spring，那么最好把Spring Boot设为标配，因为它真的很方面开发，不过你也需要仔细阅读它的文档，避免不知不觉掉入坑中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[目前在做的一个web应用程序的前端选型]]></title>
    <link href="http://www.huangbowen.net/blog/2015/02/09/tech-stack-of-my-new-web-application/"/>
    <updated>2015-02-09T10:08:10+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/02/09/tech-stack-of-my-new-web-application</id>
    <content type="html"><![CDATA[<p>最近进入了一个新的项目组，要新起一个项目。这个Web项目是一个企业内部使用的系统，主要用来记录、追踪、管理潜在客户的数据。该系统有以下特点:</p>

<!-- more -->


<ol>
<li>需要支持IE10及以上版本；</li>
<li>后端采用micro service架构，全部是REST API；</li>
<li>需要与现有的CRM系统（客户管理管理系统）集成，主要采用iframe嵌入页面的方式；</li>
<li>系统开发周期为5个月左右，分为三个大的里程碑。</li>
</ol>


<p>经过多方考虑，最终选择AngularJS作为前端主要框架。
理由：</p>

<ol>
<li>该系统为WEB应用程序，符合single page application的特点；</li>
<li>由于后端采用REST API，所以前端使用AngularJS可以与其无缝对接；</li>
<li>前端页面交互逻辑不复杂，呈现的数据量不会很大，所以不会遇到AngularJS性能问题；</li>
<li>该技术栈与当前公司的技术策略相契合。</li>
</ol>


<p>当然除了AngularJS框架以外，还需要其它一系列框架来完成整个前端开发、测试、部署的流程。</p>

<ul>
<li><p>yeoman: 前端项目脚手架工具；</p></li>
<li><p>NPM: 作为本地开发过程中使用到的Node.js的管理；</p></li>
<li><p>Bower:作为前端项目使用到的依赖开的管理工具；之所以选择NPM作为开发包的管理，是因为NPM的整个依赖链是嵌套的，这样每个开发包之间不会相互影响；而Bower在管理包时依赖链是平行的，这样前端加载时无需重复加载被多次引用的依赖，保证了前端数据最小化。</p></li>
<li><p>Grunt：作为整个项目的自动化构建管理工具；</p></li>
<li><p>Karma：作为单元测试及集成测试运行工具；</p></li>
<li><p>Jasmine：单元测试及BDD框架；</p></li>
<li><p>Protractor: 驱动浏览器的框架，配合Jasmine用于端到端测试。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在AWS中创建NAT节点]]></title>
    <link href="http://www.huangbowen.net/blog/2015/01/17/create-nat-node-in-aws/"/>
    <updated>2015-01-17T23:23:15+08:00</updated>
    <id>http://www.huangbowen.net/blog/2015/01/17/create-nat-node-in-aws</id>
    <content type="html"><![CDATA[<p>NAT, Network Address Translation,即网络地址转换。当内部网络的主机想要访问外网，但是又不想直接暴露给公网，可以通过NAT节点来访问外网。这样做有两个好处，第一是内网的主机无需拥有公网IP就可访问网络（NAT节点需要公网IP），节约了公网IP；第二是内网的主机由于没有公网IP，所以公网的电脑无法访问到它，这样就可以隐藏自己。一个很经典的示例是假如你有一台数据库服务器放置在内网中，为在同一个内网中的web服务器提供数据服务，为了安全性考虑你不会把它直接暴露在公网中。但是数据库服务器有时候自己是需要访问公网的，比如需要升级数据库服务器中的某些软件等。采用NAT方案可以很好的解决这个问题。</p>

<!-- more -->


<p>下图是NAT节点的功能示意图。</p>

<p><img src="http://www.huangbowen.net/images/natnode.png"></p>

<p>一些路由器或者装有特定软件的主机都可以作为NAT节点。在AWS中如果你想创建一个NAT节点的话那是非常的方便，因为AWS直接提供了预装了NAT软件的AMI，你只需直接使用该AMI在你的公共子网中实例化一台机器，并进行相应的配置即可。</p>

<p>下面的图展示了在AWS中的一个经典的VPC架构。该VPC里面建立了两个子网，一个是公共子网，通过Intenet Geteway和公网连接；一个是私有子网，无法直接访问公网。然后在公共子网中建立了一个EC2机器，使用的是AWS提供的具有NAT功能的AMI，并为它分配了一个弹性IP，这样该EC2就是一个NAT节点。在私有子网的所有机器都具有了通过该NAT节点访问外网的能力。</p>

<p><img src="http://www.huangbowen.net/images/vpcandnat.png"></p>

<p>为了创建这样一套网络及机器，最简便的方式当然是使用AWS提供的CloudFormation了。如果不了解CloudFormation，可以看我以前写过的一篇文章 <a href="http://www.huangbowen.net/blog/2013/10/23/aws-cloudformation/">《亚马逊云服务之CloudFormation》</a>。下面展示的是创建该整个VPC的CloudFormation脚本。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;AWSTemplateFormatVersion&quot;</span><span class="p">:</span> <span class="s2">&quot;2010-09-09&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Setup a vpc, which contains two subnets and one NAT machine&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;Parameters&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;KeyName&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Name of and existing EC2 KeyPair to enable SSH access to the instance&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;VpcCidr&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;CIDR address for the VPC to be created.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;10.2.0.0/16&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;AnyCidr&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;CIDR address for Any Where.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;0.0.0.0/0&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;AvailabilityZone1&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;First AZ.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;cn-north-1a&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicSubnetCidr&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Address range for a public subnet to be created in AZ1.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;10.2.1.0/24&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetCidr&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Address range for private subnet.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;10.2.2.0/24&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATInstanceType&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;Instance type for NAT&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Default&quot;</span><span class="p">:</span> <span class="s2">&quot;t1.micro&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;Mappings&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;AWSNATAMI&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;cn-north-1&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;AMI&quot;</span><span class="p">:</span> <span class="s2">&quot;ami-eab220d3&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;Resources&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;VPC&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::VPC&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;CidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VpcCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;InternetGateWay&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::InternetGateway&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;INTERNET_GATEWAY&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;GatewayToInternet&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::VPCGatewayAttachment&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;InternetGatewayId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;InternetGateWay&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicSubnet&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Subnet&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;CidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicSubnetCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;AvailabilityZone&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AvailabilityZone1&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;PUBLIC_SUBNET&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnet&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Subnet&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;CidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnetCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;AvailabilityZone&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AvailabilityZone1&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;PRIVATE_SUBNET&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;DefaultSecurityGroup&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::SecurityGroup&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;GroupDescription&quot;</span><span class="p">:</span> <span class="s2">&quot;Default Instance SecurityGroup&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;SecurityGroupIngress&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;IpProtocol&quot;</span><span class="p">:</span> <span class="s2">&quot;-1&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;CidrIp&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VpcCidr&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;DEFAULT_SECURITY_GROUP&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicRouteTable&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::RouteTable&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;PUBLIC_ROUTE_TABLE&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicRoute&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Route&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;DestinationCidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AnyCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;GatewayId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;InternetGateWay&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;RouteTableId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicRouteTable&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicSubnetRouteTableAssociation&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::SubnetRouteTableAssociation&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;RouteTableId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicRouteTable&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;SubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicSubnet&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATEIP&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::EIP&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;InstanceId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATInstance&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATInstance&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Instance&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;InstanceType&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATInstanceType&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;KeyName&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;KeyName&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;SubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicSubnet&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;SourceDestCheck&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;ImageId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Fn::FindInMap&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="s2">&quot;AWSNATAMI&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>              <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::Region&quot;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;AMI&quot;</span>
</span><span class='line'>          <span class="p">]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;SecurityGroupIds&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATSecurityGroup&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetRouteTable&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::RouteTable&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;PRIVATE_SUBNET_ROUTE_TABLE&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetRoute&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::Route&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;DestinationCidrBlock&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;AnyCidr&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;InstanceId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATInstance&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;RouteTableId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnetRouteTable&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetRouteTableAssociation&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::SubnetRouteTableAssociation&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;RouteTableId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnetRouteTable&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;SubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnet&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATSecurityGroup&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Type&quot;</span><span class="p">:</span> <span class="s2">&quot;AWS::EC2::SecurityGroup&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;GroupDescription&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT Instance SecurityGroup&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;SecurityGroupIngress&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;IpProtocol&quot;</span><span class="p">:</span> <span class="s2">&quot;-1&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;CidrIp&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VpcCidr&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;Tags&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;Key&quot;</span><span class="p">:</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT_SECURITY_GROUP&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;VpcId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;Outputs&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;VPCId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;VPC&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PublicSubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;public subnet id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PublicSubnet&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;PrivateSubnetId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;private subnet id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;PrivateSubnet&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATSecurityGroupId&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT SG id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATSecurityGroup&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;NATEIP&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Description&quot;</span><span class="p">:</span> <span class="s2">&quot;NAT Server EIP.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;Ref&quot;</span><span class="p">:</span> <span class="s2">&quot;NATEIP&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>你可以通过AWS提供的图形化界面AWS Management Console来使用该CloudFormation脚本，也可以通过AWS CLI来使用。使用以上的CloudFormation脚本创建的VPC可以一键创建你AWS中的基础网络架构。从此再也不用为配置网络发愁了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个程序员的2014年总结]]></title>
    <link href="http://www.huangbowen.net/blog/2014/12/31/my-conclusion-of-2014/"/>
    <updated>2014-12-31T17:08:26+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/12/31/my-conclusion-of-2014</id>
    <content type="html"><![CDATA[<p>又是一年过去了，看着周围90后在飞速成长，不得不感叹自己这一年轻的优势已经损失殆尽。唯有快马加鞭，不断努力，才能确保自己在战场上了不落后于别人，保持甚至增加自己的核心竞争力。</p>

<!-- more -->


<p>2013年底的时候写了一篇个人总结<a href="http://www.huangbowen.net/blog/2014/01/02/my-conclusion-of-2013/">http://www.huangbowen.net/blog/2014/01/02/my-conclusion-of-2013/</a>，阅读起来，一年前的我经过各种洗礼已经模糊，前途望去也是有些迷茫，希望能早日拨开云雾见阳天。</p>

<ol>
<li><p>考取了AWS的助理级架构师认证，再也不是无证的程序员了，在云计算和DevOps也算是取得了一定的成绩。俗话说，站得高，看的远，明年要学习的东西还有很多。</p></li>
<li><p>总共出差了5个月。跑到异国他乡的澳洲，体验着另一种风土人情，在客户现场也学到了平时很难接触到的知识。在此期间老婆辛苦了，表示感谢。</p></li>
<li><p>翻译了两本书。一本是《响应式Web设计:HTML5和CSS3实践指南》,另一本是《Multithreading in C# 5.0 cookbook》(1月份出版)。翻译速度比去年那本快多了。以后接书还是想找些自己感兴趣的技术方面，翻译起来动力也足些。</p></li>
<li><p>撰写了50+篇博客，大部分以技术类型为主。基本实现了每周一篇的既定目标。这些博客都是自己不断进步的见证者，希望我能一直写下去。</p></li>
<li><p>读了10+本书。其实有些汗颜，后半年基本没认真读过什么技术类书籍。自己的知识体系还需要一些理论来升华，读书就是一条捷径。自己明明知道，但是总没当回事，所以2015年一定要注意。</p></li>
<li><p>在办公室和社区做了一些演讲和工作坊，逐渐建立自己的影响力。</p></li>
<li><p>重视身体健康。4月份开始跑步，之后越跑越多，不知不觉跑了2次全程马拉松比赛和2次半程马拉松比赛，还有一次30公里越野跑。体重从80公斤减到了68公斤，小肌肉也练出来了。健身开始容易，坚持难。从4月份突然想健身，一直坚持到了现在，自己都不知道从哪里来的那么大毅力，目测我还能再坚持下去。现在每周基本要去健身房4到5次，期望自己早日练成肌肉男。</p></li>
<li><p>最大的收获还是老婆给生了个大胖小子。每天回家看到他，想想所有的辛苦都不算什么，做事情更有干劲了。感谢老婆把幺儿带的这么好。</p></li>
</ol>


<p>今年就这样了。让我们一起来迎接2015年的到来吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[定时关闭AWS上的EC2机器实例]]></title>
    <link href="http://www.huangbowen.net/blog/2014/12/26/shudown-ec2-at-certain-time/"/>
    <updated>2014-12-26T14:19:34+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/12/26/shudown-ec2-at-certain-time</id>
    <content type="html"><![CDATA[<p>最近一段时间在做一个产品从阿里云向亚马逊云中国区迁移的前期试验。亚马逊中国区并没有开放免费体验账号，使用的每一份资源都要实打实的掏钱。而为了实验我们使用时一般要启动好几台EC2实例。为了不浪费辛辛苦苦赚的钱，特写了一个脚本，在每天晚上6点将所有的EC2实例自动关闭。由于在亚马逊云中关闭的EC2实例是不收费的，只收取少量的存储费用，所以这样节省不少钱。</p>

<!-- more -->


<p>为了让一台机器可以值守这个任务，所以我们在AWS留一台机器用来定期执行关闭其它机器的命令。关闭EC2的命令主要是使用AWS提供了awscli来实现。</p>

<p>首先在这台机器上安装awscli。这台机器使用的操作系统是ubuntu 12.04，所以使用其自带的包管理器可以一键安装。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>apt-get install awscli
</span></code></pre></td></tr></table></div></figure>


<p>安装完毕后需要配置aws命令行工具的认证。方式有很多，最简单的是运行<code>aws configure</code>来实现。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>aws configure
</span><span class='line'>AWS Access Key ID <span class="o">[</span>None<span class="o">]</span>: YOURACCESSKEY
</span><span class='line'>AWS Secret Access Key <span class="o">[</span>None<span class="o">]</span>: YOURSECRTKEY
</span><span class='line'>Default region name <span class="o">[</span>None<span class="o">]</span>: cn-north-1
</span><span class='line'>Default output format <span class="o">[</span>None<span class="o">]</span>: json
</span></code></pre></td></tr></table></div></figure>


<p>或者你可以在当前用户根目录下的.aws目录中配置认证信息，详情请移步<a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html">http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html</a>.</p>

<p>接下来在当前用户根目录下创建stopinstance.sh文件，并输入以下信息.</p>

<figure class='code'><figcaption><span>stopinstance.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>#!/bin/bash
</span><span class='line'>aws ec2 stop-instances --instance-ids i-68726951 i-965ca276 i-377a620e i-d35fa133 i-fe5ca21e
</span></code></pre></td></tr></table></div></figure>


<p>这就是关闭指定EC2实例的命令，<code>--instance-ids</code>后面跟的就是你的EC2实例的id。</p>

<p>把该文件权限改为可执行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x stopinstance.sh
</span></code></pre></td></tr></table></div></figure>


<p>最后要让该命令定时执行，那么就要借助<code>crontab</code>这个命令了。</p>

<p>使用<code>crontab -e</code>来编辑batch文件，在文件最后加上下行.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>* 18 * * * ~/stopinstance.sh &gt;&gt; ~/shutdown.log
</span></code></pre></td></tr></table></div></figure>


<p>前五个字段制定命令执行的时间。第一个是分钟，第二个是小时，第三个是每月的哪天，第四个是月份，第五个是每周的哪天。配置相当灵活。</p>

<p>这句话是描述了一个batch任务，在每天的下午6点执行，会执行stopinstance.sh脚本，并把日志输出到shutdown.log文件中。</p>

<p>注意使用crontab执行任务时一定要注意当前机器的时区和你期望执行的时间所用时区是否不同。有关crontab和cron命令的进一步使用请移步<a href="http://www.adminschoice.com/crontab-quick-reference">http://www.adminschoice.com/crontab-quick-reference</a></p>

<p>至此，就大功告成了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《跑出巅峰》书评]]></title>
    <link href="http://www.huangbowen.net/blog/2014/12/22/running-on-the-way/"/>
    <updated>2014-12-22T23:42:30+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/12/22/running-on-the-way</id>
    <content type="html"><![CDATA[<p>对于很多人的成功，我们往往将其归功于天才。读了这本书，我才深刻认识到K神不是神，他也有累的时候，也有动摇的时候，绝不是我们想象中的谈笑间超越对手。但是他有强大的内心，有不服输的精神，有为了目标奋不顾身的勇气。所以，他成了K神，而普通人还是普通人。</p>

<!-- more -->


<p>今年4月份，阴差阳错开始健身。目标不求有巨大的肌肉块，只求拥有一定的线条，可以做一些极限健身的动作即可。想法很好，过程很难。但是一旦有了开端，就很难让我停下来。这可能源于我比较强的自我驱动力，凡事都要做出一点成果才可罢手。健身的这段时间，读了好几本书，《无器械健身》,《囚徒健身》、《硬派健身》&hellip;网上的文章也是看了非常多。基本上每周都要训练4到5次，并把学到的知识应用进去，逐步改进自己的健身计划。6月份意识到要花专门的时间来减脂肪，最后选定跑步作为减脂方式。第一次跑步就跑了10公里，这个开端奠定了我接下来的跑步基调。</p>

<p>每次跑步的动力就是能减去自己腹部的赘肉，尽早的凸显出腹肌。不过，跑步又给我带来另一个方面的改变。那就是对我意志的磨练，对自身的审视。跑步的时候是无聊的，机体机械的前进，大脑漫无目的的思考。一跑就是1，2个小时。8月3日参加的人生首次马拉松是对自己的一个小突破。如果换作4个月前，马拉松对我来说是一个不可想象的目标。但是4个月后，我已不再惧怕它。</p>

<p>K神在《跑出巅峰》这本书中，讲述了他从小到大的一些经历，以及在一些比赛过程中的经历。普通人中只有用力跑过的人才能与书中描述的艰难时刻的K神产生共鸣。很多时候，人不是被别人打败的，而是自己放弃了。尤其是在跑步过程中，当你的体力达到极限时，也是你意志最薄弱的时候。放弃抑或继续，每分钟要斗争很多回。</p>

<p>首马过后，我一发不可收拾，又跑了2次半马比赛和一次全马比赛。有时候，我在想我跑步的意义是什么？保持健康？那么有必要跑42公里吗？10公里已经足够了。证明自己？有什么好证明的，为啥子不写个牛逼哄哄的软件更能证明自己。显出自己比别人牛？比我跑的好的人大有人在。</p>

<p>每天跑步、健身至少要花1个小时时间，我大可用这1小时来多读几页书，多敲几行代码，那为啥子要投入到这上面来那？想了很久，我得出了结论，老子就是想跑步，就是想健身，咋个了。Follow my heart！每次训练都是通往成功的一小步，都是对自己意志力的一次磨练。每天花1个小时不仅得到了健康的体魄，还磨练了自己的意志力，何乐而不为！</p>

<p>跑过了巨人之旅，你已不是你（脱胎换骨啊！）。而我想说，跑过了马拉松，你已超越了自我。2015年，百公里越野，我期望在终点遇到更好的我！</p>

<p>也许我有跑累的那天，但是我跑过！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS re:Invent 2014回顾]]></title>
    <link href="http://www.huangbowen.net/blog/2014/11/25/aws-reinvent-conference/"/>
    <updated>2014-11-25T11:38:26+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/11/25/aws-reinvent-conference</id>
    <content type="html"><![CDATA[<p>亚马逊在2014年11月11-14日的拉斯维加斯举行了一年一度的re:Invent大会。在今年的大会上，亚马逊一股脑发布和更新了很多服务。现在就由我来带领大家了解一下这些新服务。</p>

<!-- more -->


<h2>安全及规范相关</h2>

<h3>AWS Key Management Service</h3>

<p>该服务可用于管理数据加密秘钥，以及使用硬件设备来保护秘钥。它与Amazon EBS，Amazon S3及Amazon Redshift高度集成。还与CloudTrail集成，可提供所有秘钥使用情况的日志。</p>

<h3>AWS Config(预览)</h3>

<p>这是个配置管理服务，可以监控和记录你对AWS资源的使用情况及配置修改历史。通过它你能轻易得到你所使用的所有AWS资源情况，以及各自的配置细节，并且能够追溯任何资源的历史配置情况。</p>

<h3>AWS Service Catalog</h3>

<p>AWS Service Catalog可以让管理员创建和管理一组资源，只有包含在该组中的资源才能被指定终端用户访问。这保证了服务的隔离性和安全性，快速响应市场变化。</p>

<h2>应用程序生命周期管理工具</h2>

<h3>AWS CodeDeploy</h3>

<p>顾名思义，就是代码部署服务。其实现将代码部署到EC2实例的自动化功能。并且它与你的基础设施紧密结合，天生具有可伸缩性，不管是部署到1台EC2还是1千EC2都得心应手。</p>

<h3>AWS CodeCommit</h3>

<p>一个云端的代码托管服务。如果你的程序使用的是Git版本控制工具，可以与它很轻松的集成。CodeCommit还提供一个在线代码工具，可以通过它来浏览、编辑项目，进行项目协作。（这Y听起来有点像GitHub啊）。</p>

<h3>AWS CodePipeline</h3>

<p>难道是另一款Jenkins或Go Server工具？CodePipeline提供了持续部署和发布的自动化服务。从迁入代码、构建代码、测试、部署、上线一气呵成。并且可以将第三方工具集成到发布流程中。这款工具我还是比较期待的，不知道它会给持续交付带来什么样的变化。</p>

<h2>数据库服务</h2>

<h3>Amazon RDS for Aurora</h3>

<p>Amazon Aurora是一款兼容MySQL的关系型数据库引擎。它既具备高档商业数据库的的速度及可用性优点，也具有开源数据库的简单和成本低廉等优点。其实我并不明白在当前No SQL大行其道的情况下，为什么亚马逊会推出一款关系型数据库引擎，让我们拭目以待吧。</p>

<h2>容器服务</h2>

<h3>Amazon EC2 Container Service</h3>

<p>最近一段时间Docker火的不行，亚马逊对Docker容器的支持也不甘落后。它直接发布了一个EC2 Container Service，内置对Docker的支持，提供了一系列API来方便对Docker容器程序的管理。</p>

<h2>计算服务</h2>

<h3>AWS Lambda</h3>

<p>AWS Lambda是一个计算服务，提供对事件或通知的快速响应机制。看起来是一个神奇的服务。收费方式是根据请求次数以及计算执行时间，完全是按需收费。具体使用场景目前还不得而知。</p>

<h2>对一些已有服务的更新</h2>

<h3>Amazon EC2 C4 instances</h3>

<p>这次亚马逊提供了个全新的EC2类型- C4。 C4实例基于Intel Xeon E5-2666 V3,主频高达2.9GHz，专门设计用来进行计算密集型的操作。可适用于高性能计算要求的场景，比如运行应用程序，游戏服务，Web服务等。</p>

<h3>Amazon EBS</h3>

<p>亚马逊将会增加普通用途的SSD及Provisioned IOPS(SSD)卷的性能和大小。普通用途的SSD最大可达16TB，IOPS可达10000。而Provisioned IOPS(SSD)卷最大可达16TB，IOPS可达20000。当将EBS附加到优化EBS实例上时，普通用途的SSD卷MBps最高可达160，而Provisioned IOPS(SSD)可达320 MBps。</p>

<hr />

<p>这次大会发布的服务大部分要等到2015年初才能开始体验。中国区region就更晚了。总体来说，体现出re:Invent的服务不是很多，但也有不少值得期待。AWS作为云服务厂商的领军人物，自身实力毋庸置疑，改革、创新也是大刀阔斧。只不过我感觉它横跨IASS,PASS,SASS三大领域，包罗万象，越来越臃肿，有些服务是否画蛇添足不得而知。</p>
]]></content>
  </entry>
  
</feed>
