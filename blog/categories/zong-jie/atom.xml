<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 总结 | 黄博文的地盘]]></title>
  <link href="http://www.huangbowen.net/blog/categories/zong-jie/atom.xml" rel="self"/>
  <link href="http://www.huangbowen.net/"/>
  <updated>2014-09-05T19:59:35+10:00</updated>
  <id>http://www.huangbowen.net/</id>
  <author>
    <name><![CDATA[黄博文]]></name>
    <email><![CDATA[huangbowen521@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的2013年总结]]></title>
    <link href="http://www.huangbowen.net/blog/2014/01/02/my-conclusion-of-2013/"/>
    <updated>2014-01-02T21:30:00+10:00</updated>
    <id>http://www.huangbowen.net/blog/2014/01/02/my-conclusion-of-2013</id>
    <content type="html"><![CDATA[<ol>
<li><p>读了20多本书，有些书让人拍案叫绝，有些书则没产生多大共鸣。上半年读的多些，下半年有些懒散，读的相对少些。</p></li>
<li><p>翻译了一本书,《Effective JavaScript》并且已经出版，还在翻译另一本。翻译书这事情咋个说那？看似难，其实不难，只是需要花大量时间;看似不难其实难，英文好不一定就翻译的信、达、雅。</p></li>
<li><p>去澳洲出差了一个月，第一次跑这么远，跑到另一块大陆上。在那里感受到了国外的生活，开阔了自己的视野。</p></li>
<li><p>经过1个月的准备，英语考过了4个5，算是满足了拿澳洲457visa的要求。但是自我感觉英文在2013年提高并不大，还未到随心所欲的地步。</p></li>
<li><p>坚持写博客。虽然从2008年就开始写博客，但是中间断断续续，甚至2012年丢掉了之前所有的博客数据。索性在2013年又坚持起来，每个月至少5篇（11月份准备考雅思写的不多）。</p></li>
<li><p>2013年也尝试了很多新东西，AWS、node.js、ruby、haskell、groovy&hellip;&hellip;收获了很多的东西，但是感觉自己总结的力度还是不够。</p></li>
</ol>


<p>总的来说，2013年是充实的一年，2014年要给自己更大的压力，因为2014年就要为人父了，担上的压力会更重。 不过我对技术的热情和追求不会消退。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用快捷键，快到极致]]></title>
    <link href="http://www.huangbowen.net/blog/2013/04/06/use-shortcuts-extremely/"/>
    <updated>2013-04-06T15:21:00+10:00</updated>
    <id>http://www.huangbowen.net/blog/2013/04/06/use-shortcuts-extremely</id>
    <content type="html"><![CDATA[<p>前段时间曾经写过一篇文章，<a href="http://www.cnblogs.com/huang0925/archive/2013/03/24/2978181.html">《优秀程序员无他-善假于物也》</a>。其中谈到一点是优秀的程序员必须要能灵活的掌握常用软件的快捷键。对于程序员来说，每天使用时间最长的软件恐怕就是IDE（Integrated Development Environment）了。如果你是C#的程序员，那么就基本非Visual Studio莫属了。而如果你是Java的程序员，那么eclipse，myeclipse或者Intellij都有人用之。如果你是Ruby等动态语言的程序员，那么Vim、Emacs、RubyMIne…有太多的选择可以成为你的IDE。</p>

<!-- more -->


<p>下面我就用Intellij来给大家演示下使用快捷键是多么的强大，能提高多大的效率。（以下所使用的快捷键在eclipse中基本都有对应的快捷键。）</p>

<p>大家先看一个简单的类。</p>

<pre><code class="java">
public class BeanConfig {
    private String name;

    private String className;

    public BeanConfig(String name, String className) {
        this.name = name;
        this.className = className;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getClassName() {
        return className;
    }

    public void setClassName(String className) {
        this.className = className;
    }
}
</code></pre>

<p>这是一个很普通的Value Object。创建这个类并写完这些代码需要多长时间那？不同人会给出不同的答案。使用快捷键与不使用快捷键有天壤之别。</p>

<p>不使用快捷键，你需要手写全部的代码。而使用快捷键，最多你只需要敲半行代码。这半行代码就是构造函数里的那两个参数<code>String name, String className</code>。</p>

<p>下面我就一步步的演示如何使用Intellij的快捷键来创建这个Value Object。</p>

<ul>
<li><p>使用<code>Ctrl+1</code>切换到project列表项，使用使用上下箭头键选择放置这个Value Object的package。</p></li>
<li><p>使用<code>Alt+Insert</code>键调出创建对话框，选择new class并回车。</p>

<p>  <img src="/images/INew.png"></p>

<p>  在弹出的<code>Create New Class</code>对话框中键入类名，并回车。</p>

<p>  <img src="/images/ICNC.png"></p>

<p>  最后生成如下的代码。</p></li>
</ul>


<pre><code class="java">
public class BeanConfig {
}
</code></pre>

<ul>
<li>按esc键将光标移动到editor中，按下<code>alt+Insert</code>键调出<code>Generate</code>对话框，选择<code>Constructor</code>项并回车。这样会生成一个无参数的构造函数。</li>
</ul>


<p><img src="/images/IGenerate.png"></p>

<p>这是生成的代码。</p>

<pre><code class="java">
public class BeanConfig {
    public BeanConfig() {
    }
}
</code></pre>

<ul>
<li>光标移动到构造函数名后的小括号内，敲入这样的代码<code>String name, String className</code>。</li>
</ul>


<p>此时代码如下。</p>

<pre><code class="java">
public class BeanConfig {
    public BeanConfig(String name, String className) {
    }
}
</code></pre>

<ul>
<li>光标保持在构造函数的参数列表中，使用<code>alt+Enter</code>快捷键，选择<code>Create Fields For Constructor Parameters</code>条目，然后回车。</li>
</ul>


<p><img src="/images/ICF.png"></p>

<p>在弹出的对快框中使用<code>shift+下箭头</code>选中这两个field并回车。</p>

<p><img src="/images/ICCP.png"></p>

<p>生成的代码如下。</p>

<pre><code class="java">public class BeanConfig {
    private final String name;
    private final String className;

    public BeanConfig(String name, String className) {
        this.name = name;
        this.className = className;
    }
}
</code></pre>

<ul>
<li>删除<code>name</code>和<code>className</code>的<code>final</code>修饰符。最快捷的方法是光标移动到<code>final</code>处，按<code>Ctrl+W</code>键选中整个字符，然后按<code>Delete</code>键。</li>
</ul>


<p>此时代码如下。</p>

<pre><code class="java">
public class BeanConfig {
    private String name;
    private String className;

    public BeanConfig(String name, String className) {
        this.name = name;
        this.className = className;
    }
}
</code></pre>

<ul>
<li>光标移动到任意一个field处，使用<code>alt+Insert</code>弹出Generate对话框，选择<code>Getter and Setter</code>条目按回车。</li>
</ul>


<p><img src="/images/IGGAS.png"></p>

<p>在弹出的<code>Select Fields to Generate Getters and Setters</code>对话框中，使用<code>shift+下箭头</code>选中两个field，按回车。</p>

<p><img src="/images/ISFGG.png"></p>

<p>最终代码生成。</p>

<pre><code class="java">public class BeanConfig {
    private String name;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getClassName() {
        return className;
    }

    public void setClassName(String className) {
        this.className = className;
    }

    private String className;

    public BeanConfig(String name, String className) {
        this.name = name;
        this.className = className;
    }
}
</code></pre>

<p>整个过程中不需要动一下鼠标，这意味着你的双手根本不需要离开键盘。使用快捷键比不使用快捷键效率至少提高5倍，而且还不会出错。最重要的一点是它能让我们的大脑从这些繁琐的体力劳动中解脱出来，从而集中到更需要发挥脑力劳动的地方。</p>

<p>其实灵活使用IDE的快捷键是一门大学问，我在和同事pair的过程中经常能从他们身上学到一些使用IDE的快捷键的妙处。以后有时间会专门整理出来share给大家。</p>
]]></content>
  </entry>
  
</feed>
