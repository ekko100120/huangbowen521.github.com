<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 工具 | 黄博文的地盘]]></title>
  <link href="http://www.huangbowen.net/blog/categories/工具/atom.xml" rel="self"/>
  <link href="http://www.huangbowen.net/"/>
  <updated>2013-09-29T22:33:37+08:00</updated>
  <id>http://www.huangbowen.net/</id>
  <author>
    <name><![CDATA[黄博文]]></name>
    <email><![CDATA[huangbowen521@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Karma(原名Testacular)与WebStorm进行集成]]></title>
    <link href="http://www.huangbowen.net/blog/2013/04/09/integrate-karma-to-webstorm/"/>
    <updated>2013-04-09T01:59:00+08:00</updated>
    <id>http://www.huangbowen.net/blog/2013/04/09/integrate-karma-to-webstorm</id>
    <content type="html"><![CDATA[<p><a href="http://karma-runner.github.io/0.8/index.html">Karma</a>是一款运行JavaScript测试的工具。它支持大部分的JavaScript测试框架，并支持多浏览器跑测试、自动监听文件运行测试等功能，实在是JavaScript开发的必备测试利器。有了它，基本不用再一遍遍手动刷新页面来trigger测试了。它的原名是testacular，也不知道作者咋想的，突然之间把项目名称改了。</p>

<p>而<a href="http://www.jetbrains.com/webstorm/">WebStorm</a>则号称是世界上最聪明的JavaScript的IDE。（事实证明，确实如此）。JavaScript code自动提示、浏览器实时同步更新、支持HTML5, <a href="http://nodejs.org/">node.js</a>, TypeScript, CoffeeScript, ECMAScript Harmony, LESS…秉承了JetBrains这个牛逼公司的一贯传统。</p>

<!-- more -->


<p>那么，如何将<a href="http://karma-runner.github.io/0.8/index.html">Karma</a>集成到<a href="http://www.jetbrains.com/webstorm/">WebStorm</a>中来那？ 很简单。</p>

<h2>配置Karma Runner.</h2>

<ol>
<li><p>菜单栏Run里面选<code>Edit Configurations…</code>项，在弹出的对话框中点击左上角的<code>+</code>按钮,选择<code>Node.js</code>。</p></li>
<li><p>然后进行如下配置。</p>

<p> <img src="/images/run.png"></p>

<p> 主要配置参数：</p>

<ul>
<li>Name : 名称标示，自己随便起一个就成。</li>
<li>Path to Node: node.js的运行路径。在Terminal下运行<code>which node</code>可以看到。</li>
<li>Working Directory: 项目的目录。</li>
<li>Path to Node App JS File: Karma的安装目录，同样在Terminal下运行<code>which karma</code>可以得到。</li>
<li>Application Parameters： start karma.conf.js。第一个参数start是运行karma server。第二个参数是karma的配置文件。</li>
</ul>
</li>
<li><p>点击ok按钮。大功告成。</p></li>
</ol>


<p>在<a href="http://www.jetbrains.com/webstorm/">WebStorm</a>中运行我们定义的Karma Runner，就能实时的看到测试结果。它能自动监听文件修改。一有风吹草动就会重新运行测试，而且速度奇快。</p>

<p><img src="/images/running.png"></p>

<h2>配置Karma Debugger.</h2>

<p>如果想使用<a href="http://karma-runner.github.io/0.8/index.html">Karma</a>在IDE里面进行Debug，该怎么办？也简单，配置一个Remote Debugger就行。</p>

<ol>
<li><p>菜单栏Run里面选<code>Edit Configurations…</code>项，在弹出的对话框中点击左上角的<code>+</code>按钮,选择<code>JavaScript Debug</code>-><code>Remote</code>。</p></li>
<li><p>在配置框中输入以下参数。</p>

<p> <img src="/images/debug.png"></p>

<p> 主要参数设置：</p>

<ul>
<li><p>Name: 名称标示符。</p></li>
<li><p>URL to open:  http://localhost:9876/debug.html。默认是这个，要根据你Karma server配置的真实地址而定。</p></li>
<li><p>Browser: 要运行的浏览器。</p></li>
<li><p>Remote URL； http://localhost:9876/base。</p></li>
</ul>
</li>
<li><p>点击确定，又搞定了。</p></li>
</ol>


<h2>如何进行Debug？</h2>

<ol>
<li><p>在源代码中设置断点。</p></li>
<li><p>在WebStorm中启动Karma server，就是运行我们定义的Karma Runner。</p></li>
<li><p>在WebStorm中运行我们定义的Karma Debug。</p></li>
</ol>


<p>注意第一次运行时WebStorm会提醒你在浏览器上安装相应的插件。</p>

<p><img src="/images/debugging.png"></p>
]]></content>
  </entry>
  
</feed>
