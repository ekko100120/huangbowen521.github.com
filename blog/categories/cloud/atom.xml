<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cloud | 黄博文的地盘]]></title>
  <link href="http://www.huangbowen.net/blog/categories/cloud/atom.xml" rel="self"/>
  <link href="http://www.huangbowen.net/"/>
  <updated>2014-11-18T23:40:13+08:00</updated>
  <id>http://www.huangbowen.net/</id>
  <author>
    <name><![CDATA[黄博文]]></name>
    <email><![CDATA[huangbowen521@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AWS助理架构师认证考经]]></title>
    <link href="http://www.huangbowen.net/blog/2014/10/27/how-to-pass-the-aws-certification/"/>
    <updated>2014-10-27T21:06:36+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/10/27/how-to-pass-the-aws-certification</id>
    <content type="html"><![CDATA[<p>上周考了亚马逊的解决方案架构师-助理级别的认证考试并顺利通过。这也算是对自己AWS服务熟悉程度的一种检验。在准备考试的过程中，把自己学习到的AWS知识都梳理了一遍，也算是收获颇丰。这次特意分享了该认证考经。</p>

<!-- more -->


<h2>什么是AWS认证？</h2>

<p>AWS 认证是对其在 AWS 平台上设计、部署和管理应用程序所需的技能和技术知识的一种认可。获得证书有助于证明您使用 AWS 的丰富经验和可信度，同时还能提升您所在的组织熟练使用基于 AWS 云服务应用的整体水平。</p>

<p>目前亚马逊推出了Solutions Architect,Developer和SysOps Administrator三个方向的认证。每个方向又分为Associate Level(助理级)，Professional Level（专家级）和Master Level（大师级）。当然目前只有Solutions Architect开放了Professional Level,其他层级会逐步开放中。</p>

<p><img src="/images/cert_roadmap_Q214_EN.png"></p>

<h2>我的AWS使用经验</h2>

<ul>
<li><p>本人于2013年注册了AWS账号，开始只是做些小实验玩，后来把自己的整个博客都迁移到了AWS上，使用了Route53，S3，CloudFront等服务。</p></li>
<li><p>在办公室做过Chef，CloudFormation，AWS云服务Overview等session。</p></li>
<li><p>2014年参加过亚马逊在成都举办的AWSome day活动，也算是对AWS云服务有了一个系统性了解。</p></li>
<li><p>使用Qwiklabs动手实验室在里面做过所有免费的实验，也借助里面的资源做了一些其它实验。</p></li>
<li><p>参加了一次亚马逊的在线课堂，内容是Auto Scaling。</p></li>
</ul>


<h2>考前准备</h2>

<ul>
<li><p>仔细研究了<a href="http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_blueprint.pdf">AWS助理架构师考试大纲</a>，明确了自己和大纲要求的差距。</p></li>
<li><p>仔细研读了样题，了解了考试体型和方式，并且写了篇文章解析了样题。地址：<a href="http://www.huangbowen.net/blog/2014/10/22/aws-cert-sample-question/">http://www.huangbowen.net/blog/2014/10/22/aws-cert-sample-question/</a></p></li>
<li><p>进行过两次模拟考试。每次模拟考试20美元，每次有20道题。第一次是考前一周做的，只对了9道，惨败。第二次是考试前一天做的，对了14道，过关。</p></li>
<li><p>根据模拟考试的薄弱环节进行了补强，深入了解了VPN，IAM，Data Security等方面的知识。</p></li>
<li><p>大量查阅了<a href="http://aws.amazon.com/cn/documentation/">AWS的文档</a></p></li>
</ul>


<h2>考试</h2>

<p>考试地点还是比较高大上的，在春熙路附近一座写字楼里。考试中心其实地方很小，就一个前台和一个办公室。前台接待我过后，就在会议室电脑上连接上了考试系统，然后她就出去了。也就是说基本算无人监考。正式考试有55道题，考试时间80分钟，全英文。题目都是选择题，有单选与多选，题目会明确告诉你有几个正确选项（如果没说就只有一个）。</p>

<p>可以说这些考题综合性非常强。有些很考察动手经验，有些则会考察具体服务的应用场景。如果只是对AWS云服务有肤浅认识的话，绝对是过不了的。我用了50多分钟时间做完了全部55道题，有25道题不确定答案。这给我留下了20多分钟来对这20多道题再进行斟酌。时间还是挺充裕的。有些题目你不知道就是不知道，除非能查阅相应文档或者动手做一下实验看一下，光想是想不出来的。</p>

<p>80分钟后自动交卷，这次正确率是65%，涉险过关（听别人说拿证的最低正确率就是65%）。我感觉做对的比例要高于65%的，可能还是自己对AWS有些知识点不熟悉。</p>

<p>交卷以后会立马知道成绩，邮箱里也会收到认证证书与可以使用的认证logo。</p>

<h2>一些Tips</h2>

<p>接下来是一些Tips给想要考取该证的人。</p>

<ul>
<li><p>首先了解AWS认证:<a href="http://aws.amazon.com/certification/">http://aws.amazon.com/certification/</a>，了解助理架构师考试大纲：<a href="http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_blueprint.pdf">http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_blueprint.pdf</a></p></li>
<li><p>阅读考试常见问题：<a href="http://aws.amazon.com/cn/certification/faqs/">http://aws.amazon.com/cn/certification/faqs/</a></p></li>
<li><p>必须读AWS白皮书：<a href="http://media.amazonwebservices.com/AWS_Overview.pdf">http://media.amazonwebservices.com/AWS_Overview.pdf</a></p></li>
<li><p>熟悉考试样题：<a href="http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_examsample.pdf">http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_solutions_architect_associate_examsample.pdf</a></p></li>
<li><p>动手做实验，可以使用动手实验室，免费蹭资源：<a href="https://run.qwiklab.com">https://run.qwiklab.com</a></p></li>
<li><p>AWS文档中主要的service必须要过一遍，比如EC2，S3，VPC，EBS等。<a href="http://aws.amazon.com/cn/documentation/">http://aws.amazon.com/cn/documentation/</a></p></li>
<li><p>阅读各种云服务的常见问题：<a href="http://aws.amazon.com/cn/faqs/">http://aws.amazon.com/cn/faqs/</a></p></li>
<li><p>最好做一次模拟考试，熟悉考试的方式，题目类型，记住不熟悉的知识点然后加强。</p></li>
<li><p>这是从网上找的一个部分题目，可以了解下。<a href="http://quizlet.com/35935418/detailed-questions-flash-cards/">http://quizlet.com/35935418/detailed-questions-flash-cards/</a></p></li>
</ul>


<hr />

<p>总体来说AWS助理级架构师考试不算很难，但前提是你做好了充分准备的基础了。虽然你有可能长期使用AWS服务，但并不保证你能裸考过关。因为这是架构师认证，有些问题和场景可能你并没有经历过，有些服务你并没有使用过，在考试中这些缺点都会被放大。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS系列之三 使用EBS]]></title>
    <link href="http://www.huangbowen.net/blog/2014/07/30/use-ebs/"/>
    <updated>2014-07-30T23:10:32+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/07/30/use-ebs</id>
    <content type="html"><![CDATA[<p>Amazon Elastic Block Store（EBS）可作为EC2实例的持久性数据块级存储。其具有高可用性和持久性的特点，可用性高达99.999%。给现有的EC2实例扩展新的存储块只需要几分钟的时间，省时省力。每个EBS块都被放置在一个特定的可用区内，并且会自动维护一个副本，随时保护数据安全。</p>

<!-- more -->


<p>Amazon EBS共提供三种硬盘类型，SSD(固态硬盘)， Provisioned IOPS SSD（特供IOPS固态硬盘）和Magnetic（普通硬盘）。SSD是默认的EC实例的硬盘格式（凶残啊！Amazon真是有钱，自从咱的本本换了SSD后，也离不开SSD了。）Provisioned IOPS SSD更凶残，具有高一致性及超低延迟的性能，专门设计用于I/O密集型操作，比如数据库。IOPS全称为Input/Output Operations Per Second，即每秒进行读写（I/O）操作的次数，用来衡量随机访问的性能。Provisioned IOPS SSD的每GB IOPS可达30。Magnetic Volumes就是俗称的磁卷了，它最便宜，当然性能也最差了。如果你的应用程序不是I/O密集型的，对数据的访问不是很频繁，使用该类型就比较划算。</p>

<p>EBS还有一个功能就是很方便的创建快照，并保存到Amazon S3上去。EBS的快照是增量存储的。比如你有一块100G的硬盘，第一次快照使用了100G容量，第二次快照时只有5G的数据发生了变化，那么你总共只需花105G的存储费用。当然你不不必担心删除其中一个快照导致数据丢失，因为删除一个快照时，系统只会删除其中不会被其它快照使用的数据，所以不会影响其它快照。</p>

<p>好了，接下来是本文的两个主要任务是两个。第一个任务是给一个EC实例附加一个新的EBS卷，并且加入到当前EC实例的文件系统中。第二个任务是为该EC实例创建一个快照。</p>

<p>首先当然是准备工作了，创建一个新的EC2实例。如何创建上一篇文章已经详细介绍了，这里不再累述。如果还没有AWS account的同学可以使用可以qwiklabs提供的免费实验来进行该练习。地址是<a href="https://run.qwiklabs.com">https://run.qwiklabs.com</a>。说实话qwiklabs真是个好东西，如果我使用自己的account来进行练习，要花不少钱。而qwiklabs里面有几个免费实验，使用AWS的所有资源不收任何费用，真是业界良心。</p>

<p>EC2创建完毕后，应该是这个样子。</p>

<p><img src="/images/ec2instance01.png" width="700"></p>

<p>然后远程ssh进去。</p>

<pre><code class="bash">
$: ssh ec2-user@54.191.59.163 -i ~/Downloads/key.pem
</code></pre>

<p>先查看下当前的磁盘情况。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/xvda1      7.8G  1.1G  6.6G  14% /
devtmpfs        486M   56K  486M   1% /dev
tmpfs           499M     0  499M   0% /dev/shm
</code></pre>

<p>可以看出当前磁盘总大小在8G左右，有三个文件系统。</p>

<p>接下来就创建一个硬盘。</p>

<p>点击EC2控制面板左侧的<code>Volumes</code>按钮，来到磁盘的控制面板。</p>

<p><img src="/images/volumedb01.png" width="700"></p>

<p>这里展示的一块硬盘就是当前ec2实例使用的硬盘。</p>

<p>我们点击上面的<code>Create Volumes</code>来新添加一块硬盘。</p>

<p><img src="/images/createVolume01.png" width="700"></p>

<p>硬盘类型就是我上文的说的那几种，IOPS越高，硬盘就越贵，可用区的选择一定要和当前要使用的EC2实例保持一致，要不然会无法跨可用区附加硬盘。如果提供snapshot ID的话，新创建的硬盘会具有该快照的数据。</p>

<p>硬盘创建完毕后如下图所示。</p>

<p><img src="/images/newVolumes01.png" width="700"></p>

<p>目前它的状态是可用的，如果将其附加到EC2实例则会变为in-use。</p>

<p>点击<code>Action</code>按钮并选择<code>Attach Volume</code>命令，可以将该硬盘附加到EC2实例上。</p>

<p><img src="/images/attachvolume01.png" width="700"></p>

<p>在该界面中选择实例名及映射的设备地址，然后附加。</p>

<p><img src="/images/volumesStatus01.png" width="700"></p>

<p>可以看到该硬盘状态已经发生改变。</p>

<p>那么再回到终端中查看磁盘情况。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/xvda1      7.8G  1.1G  6.6G  14% /
devtmpfs        486M   60K  486M   1% /dev
tmpfs           499M     0  499M   0% /dev/shm
</code></pre>

<p>跟以前的一模一样，没有看到新添加的20G硬盘。这是怎么回事那？这是因为你虽然给机器添加了一块硬盘，但是还没有格式化和创建文件系统，并将文件系统添加到EC2的文件系统树上来。</p>

<p>我们换另一个命令来查看存储情况。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ lsblk
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0   8G  0 disk
└─xvda1 202:1    0   8G  0 part /
xvdf    202:80   0  20G  0 disk
</code></pre>

<p>这里可以看到有一块20G的大硬盘xvdf，但是没有MOUNTPOINT，这个MOUNTPOINT你可以理解为EC2实例上针对这个硬盘的根地址。</p>

<p>细心的读者可能会发现我们附加硬盘时输入的地址是<code>/dev/sdf</code>，为什么命令行中显示的是<code>xvdf</code>那？这是因为调皮的操作系统内核给改了，不同的Linux发行版其修改后的地址也会不太一样。</p>

<p>使用file命令来查看该块硬盘有没有建立文件系统。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ sudo file -s /dev/xvdf
/dev/xvdf: data
</code></pre>

<p>如果输出是data，说明该块硬盘还未创建文件系统。</p>

<p>使用下述命令来给xvdf来创建文件系统。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ sudo mkfs -t ext4 /dev/xvdf
</code></pre>

<p>然后再用file命令确认。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ sudo file -s /dev/xvdf
/dev/xvdf: Linux rev 1.0 ext4 filesystem data, UUID=1e14ec91-156a-4eb5-8846-cb5f2fa51b64 (extents) (large files) (huge files)
</code></pre>

<p>可以看到该块硬盘已经建立了ext4格式的文件系统。</p>

<p>接下来要将该文件系统加入到当前实例的文件系统树中，这里要使用mount命令。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ sudo mkdir /boot2
[ec2-user@ip-172-31-17-37 ~]$ sudo mount /dev/xvdf /boot2
</code></pre>

<p>搞定，现在看看EC2实例的存储情况。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ lsblk
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0   8G  0 disk
└─xvda1 202:1    0   8G  0 part /
xvdf    202:80   0  20G  0 disk /boot2
</code></pre>

<p>可以在/boot2目录下随意创建文件和文件夹了。</p>

<p>这里并不是万事大吉的时候，我们需要将该MOUNTPOINT加入到系统文件中，要不然系统重启后还是找不到该硬盘。编辑<code>/etc/fstab</code>文件，在其中加入以下行。</p>

<pre><code class="text">
/dev/xvdf       /data   ext4    defaults,nofail        0       2
</code></pre>

<p>这样就不怕重启的时候丢失该MOUNTPOINT了。添加完毕以后可以试一下fstab文件是否能正常运行。</p>

<pre><code class="bash">
[ec2-user@ip-172-31-17-37 ~]$ sudo mount -a
</code></pre>

<p>如果没有错误就一切万事大吉，如果有错误而你重启了电脑的话，你就等着哭吧。</p>

<p>这是第一个任务，第二任务是给现有硬盘创建快照，非常简单。回到<code>Volumes</code>控制面板，选择<code>Action</code>里的<code>Create Snapshot</code>按钮。</p>

<p><img src="/images/createSnapshot01.png" width="700"></p>

<p>等一会snapshot就会创建成功。</p>

<p><img src="/images/snapshotStatus01.png" width="700"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS系列之二  使用EC2]]></title>
    <link href="http://www.huangbowen.net/blog/2014/07/26/using-ec2/"/>
    <updated>2014-07-26T16:27:22+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/07/26/using-ec2</id>
    <content type="html"><![CDATA[<p>在本文中我们有三个任务。
第一：使用Amazon management console创建一个EC2实例。
第二：使用本地的命令行工具远程登陆到该EC2实例。
第三：在该EC2实例上创建一个web服务，并通过公共域名来访问该web服务。</p>

<!-- more -->


<p>如果你还没有AWS的账号的话，可以使用qwiklabs提供的免费实验来进行该练习。地址是<a href="https://run.qwiklabs.com">https://run.qwiklabs.com</a>。</p>

<p>登陆到亚马逊的AWS服务的management console后选择EC2服务。</p>

<p><img src="/images/awsdashboard.png" width="700"></p>

<p>然后你就可以到EC2的控制面板了。</p>

<p><img src="/images/ec2dashboard.png" width="700"></p>

<p>点击上面大大的<code>Launch Instance</code>按钮来开始创建一个新的EC2实例。</p>

<p><img src="/images/imagetype.png" width="700"></p>

<p>首先要选择机器的镜像文件AMI（Amazon Machine Image）,有各种Linux的发行版，也有Windows系统。在本次实验中我们选取第一个，即Amazon Linux AMI，亚马逊自己的一个Linux发行版。</p>

<p>然后是选择机器类型，不同类型机器性能不同，收费标准也不一样，一切都是根据你的需求来决定。就选第一个吧，最便宜。</p>

<p><img src="/images/instancetype.png" width="700"></p>

<p>然后你有两个选择，一个是点击<code>Review and Launch</code>直接启动新机器，其余参数都采用默认值，另一个是点击<code>Next:Configure Instance Details</code>自定义其它配置。在这里我们选择第二个按钮，然后直到step6：Configure Security Group。</p>

<p><img src="/images/scrole.png" width="700"></p>

<p>这里是配置安全组的，你可以使用已有的安全组，也可以创建一个全新的安全组。在安全组里可以设置一系列策略来管理该实例与外界的访问情况。</p>

<p>由于我们需要远程登录到该实例，并且需要该实例提供http服务，所以我们需要开放22和80端口。22端口默认是开放的，80端口则需要手动开放。方法是点击<code>Add Role</code>按钮并新加一个role。</p>

<p><img src="/images/httprole.png" width="700"></p>

<p>配置完成后点击<code>Launch</code>按钮，会弹出一个页面让你设置key pair。</p>

<p><img src="/images/keypairconfiguration.png" width="700"></p>

<p>这个key pair是用来与该实例建立安全连接。亚马逊会存一个公钥，自己在本地存放一个私钥，当想要连接该实例时，需要提供私钥。这里我们选择新建一个key pair，并取名为awsworkshop，选择保存到本地。稍后会使用它来ssh到该实例。</p>

<p>点击<code>Launch Instances</code>按钮，实例就会被初始化了。</p>

<p><img src="/images/launchstatus.png" width="700"></p>

<p>点击<code>View Instances</code>来查看新创建的实例。</p>

<p><img src="/images/ec2information.png" width="700"></p>

<p>一般需要等待3到5分钟来完成对新实例的初始化。在上图中可以查看该实例的相关信息。亚马逊给该实例分配了一个公共IP和公共DNS域名，稍后需要使用它们。</p>

<p>等到该实例的<code>Instance Status</code>为<code>running</code>后，我们就可以进行第二个任务了，就是远程连接到该实例。</p>

<p>打开你心爱的终端，然后先提升刚保存的pem文件的权限。</p>

<pre><code class="bash">

$: chmod 600 ~/Downloads/awsworkshop.pem
</code></pre>

<p>然后在AWS的控制面板上找到该实例的公共IP，使用ec2-user用户名来ssh到该实例。</p>

<pre><code class="bash">

$: ssh ec2-user@54.191.210.210 -i ~/Downloads/awsworkshop.pem
</code></pre>

<p>稍微等待以后就可以连接到远程实例了。</p>

<pre><code class="bash">

[ec2-user@ip-172-31-46-246 ~]$ who
ec2-user pts/0        2014-07-26 06:38 (123-243-183-184.static.tpgi.com.au) 
</code></pre>

<p>怎么样？一切都非常简单吧？</p>

<p>下面就进行这个实验的最后一个任务了，在该远程实例上搭建一个web服务器。</p>

<p>ssh到该实例后，执行下面命令。</p>

<pre><code class="bash">

$: sudo yum install httpd
</code></pre>

<p>这句命令是安装Apache的httpd服务器。</p>

<p>然后跳转到<code>/var/www/html</code>目录下，并新建一个名为<code>index.html</code>的文件。</p>

<pre><code class="bash">
$: cd /var/www/html
$: sudo touch index.html
</code></pre>

<p>使用你习惯的编辑器在该文件中输入一个html格式的文档并保存。</p>

<pre><code class="html">
&lt;html&gt;
    &lt;body&gt;
        &lt;h1&gt;Hello World!&lt;/h1&gt;
    &lt;/body&gt;
&lt;html&gt;
</code></pre>

<p>接下来启动web服务器。</p>

<pre><code class="bash">
$: sudo service httpd start
</code></pre>

<p>大功告成，从该EC2实例的控制面板中找到其公共DNS，然后粘贴到浏览器中，就可以访问其提供的web服务了。</p>

<p><img src="/images/website.png" width="700"></p>

<p>好了，这三个任务也就都完成了。希望大家喜欢这次EC2之旅。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS系列之一 亚马逊云服务概述]]></title>
    <link href="http://www.huangbowen.net/blog/2014/07/11/aws-overview/"/>
    <updated>2014-07-11T15:50:26+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/07/11/aws-overview</id>
    <content type="html"><![CDATA[<p>云计算经过这几年的发展，已经不再是是一个高大上的名词，而是已经应用到寻常百姓家的技术。每天如果你和互联网打交道，那么或多或少都会和云扯上关系。gmail、github、各种网盘、GAE、heroku等各种服务都属于云服务的范畴。那么云计算的定义到底是什么？这里有摘自wiki的定义。</p>

<!-- more -->


<blockquote><blockquote><p>Cloud computing in general can be defined as a computer network which includes, computing hardware machine or group of computing hardware machines commonly referred as a server or servers connected through a communication network such as the Internet, an intranet, a local area network(LAN) or wide area network(WAN).</p></blockquote></blockquote>

<p>从上面的定义可以看出，云计算可以看做一个计算网络，其由一组硬件主机作为服务器，然后通过通讯网络连接，从而给其他用户提供各种各样的服务。</p>

<p>以下是云计算的一个概念图。</p>

<p><img src="/images/cloudComputer.png" width="800"></p>

<p>从该图中可以看出，云计算提供的服务可以分为三层，第一层是基础设施（Infrastructure）,第二层是平台（Platform）,第三层是应用软件（Application）。基础设置的服务包括虚拟或实体计算机、块级存储、网络设施（如负载均衡，内容交付网络，DNS解析）等，平台的服务包括对象存储、认证服务和访问服务、各种程序的运行时、队列服务、数据库服务等，而应用软件的服务则包括的多了，比如邮件服务、代码托管服务等等。用户可以通过台式电脑、手提电脑、手机、平板等各种互联网终端设备访问和使用这些服务。</p>

<p>其实这三层就是我们常说的IaaS（Infrastructure as a Service）、PaaS（Platform as a Service）、SaaS(Software as a Service)。</p>

<p><img src="/images/cloudService.png" width="800"></p>

<p>亚马逊的云服务提供了多达几十种服务，涵盖了IaaS、PaaS、SaaS这三层。既然是亚马逊云服务，那么为什么通常都叫做Amazon Web Service（AWS）那，为什么不叫Amazon Cloud Service之类的那？这个就不得而知了，估计当时AWS第一个服务出来的时候是2006年，那时候云的概念还没有这么火，而web service则如日中天，所以起了个这个名字。好了不八卦了，先看看亚马逊云计算的架构图。</p>

<p><img src="/images/awsstructure.png" width="800"></p>

<p>从该架构图可以看出，亚马逊云服务由7部分组成。接下来对这7部分的主要服务做一个简要的介绍。</p>

<h2>AWS Global Infrastructure(AWS 全局基础设施)</h2>

<p>在全局基础设施中有3个很重要的概念。第一个是Region（区域），每个Region是相互独立的，自成一套云服务体系，分布在全球各地。目前全球有10个Region，北京的Region已经在内测当中，不久就会开放使用。</p>

<p>第二个是Availability Zone(可用区)，每个Region又由数个可用区组成，每个可用区可以看做一个数据中心，相互之间通过光纤连接。</p>

<p>第三个是Edge Locations（边缘节点）。全球目前有50多个边缘节点，是一个内容分发网络（CDN，Content Distrubtion Network），可以降低内容分发的延迟，保证终端用户获取资源的速度。它是实现全局DNS基础设施（Route53）和CloudFront CDN的基石。</p>

<h2>Networking（网络）</h2>

<p>AWS提供的网络服务主要有：</p>

<ul>
<li><p>Direct Connect： 支持企业自身的数据中心直接与AWS的数据中心直连，充分利用企业现有的资源。</p></li>
<li><p>VPN Connection：通过VPN连接AWS，保证数据的安全性。</p></li>
<li><p>Virtual Private Cloud： 私有云，从AWS云资源中分一块给你使用，进一步提高安全性。</p></li>
<li><p>Route 53：亚马逊提供的高可用的可伸缩的域名解析系统。</p></li>
</ul>


<h2>Compute（计算）</h2>

<p>这可是亚马逊的计算核心，包括了众多的服务。</p>

<ul>
<li><p>EC2： Elastic Computer service,亚马逊的虚拟机，支持Windows和Linux的多个版本，支持API创建和销毁，有多种型号可供选择，按需使用。并且有auto scaling功能，有效解决应用程序性能问题。</p></li>
<li><p>ELB： Elastic Load Balancing， 亚马逊提供的负载均衡器，可以和EC2无缝配合使用，横跨多个可用区，可以自动检查实例的健康状况，自动剔除有问题的实例，保证应用程序的高可用性。</p></li>
</ul>


<h2>Storage（存储）</h2>

<ul>
<li><p>S3： Simple Storage Service，简单存储服务，是亚马逊对外提供的对象存储服务。不限容量，单个对象大小可达5TB，支持静态网站。其高达99.999999999%的可用性让其它竞争对手胆寒。</p></li>
<li><p>EBS： Elastic Block Storage，块级存储服务，支持普通硬盘和SSD硬盘，加载方便快速，备份非常简单。</p></li>
<li><p>Glacier：主要用于较少使用的存储存档文件和备份文件，价格便宜量又足，安全性高。</p></li>
</ul>


<h2>Database（数据库）</h2>

<p>亚马逊提供关系性数据库和no sql数据库，以及一些cache等数据库服务。</p>

<ul>
<li><p>DynamoDB： DynamoDB是亚马逊自主研发的no sql型数据库，性能高，容错性强，支持分布式，并且与Cloud Watch、EMR等其它云服务高度集成。</p></li>
<li><p>RDS： Relational Database Service，关系型数据库服务。支持MySql，SQL Server和Oracle等数据库，具有自动备份功能，IO吞吐量可按需调整。</p></li>
<li><p>Amazon ElastiCache： 数据库缓存服务。</p></li>
</ul>


<h2>Application Service（应用程序服务）</h2>

<p>这里的服务可就多了。</p>

<ul>
<li><p>Cloud Search: 一个弹性的搜索引擎，可用于企业级搜索。</p></li>
<li><p>Amazon SQS： 队列服务，存储和分发消息。</p></li>
<li><p>Simple Workflow：一个工作流框架。</p></li>
<li><p>CloudFront：世界范围的内容分发网络。</p></li>
<li><p>EMR： Elastic MapReduce，一个hadoop框架的实例，可用于大数据处理。</p></li>
</ul>


<h2>Deployment &amp; Admin (部署和管理)</h2>

<ul>
<li><p>Elastic BeanStalk: 一键式创建各种开发环境和运行时。</p></li>
<li><p>CloudFormation：采用jason格式的模板文件来创建和管理一系列亚马逊云资源。</p></li>
<li><p>OpsWorks： OpsWorks允许用户将应用程序的部署模块化，可以实现对数据库、运行时、服务器软件等自动化设置和安装。</p></li>
<li><p>IAM： Identity &amp; Access Management，认证和访问管理服务。用户使用云服务最担心的事情之一就是安全问题。亚马逊通过IAM提供了立体化的安全策略，保证用户在云上的资源绝对的安全。用户通过IAM可以管理对AWS资源的访问。通过IAM可以创建group和role来授权或禁止对各种云资源的访问。</p></li>
</ul>


<p>如果想获取更多知识可以访问亚马逊AWS的官网<a href="http://aws.amazon.com/">http://aws.amazon.com/</a>。如果想查看每个服务的详细信息，可以查看它们的官方文档<a href="https://aws.amazon.com/documentation/?nc1=h_su_dm">https://aws.amazon.com/documentation/?nc1=h_su_dm</a>。还有亚马逊的所有云服务都提供了API接口进行调用，并且提供了命令行工具Amazon CLI（Command Line Interface）来使用，详细信息请参见<a href="http://docs.aws.amazon.com/cli/latest/index.html">http://docs.aws.amazon.com/cli/latest/index.html</a>。</p>

<p>另外，亚马逊提供了一个网址用于练习对AWS服务的使用。地址是<a href="https://run.qwiklabs.com">https://run.qwiklabs.com</a>,还没有申请AWS账号的同学有福了，里面有6节免费的课程，可以根据提示一步步操作AWS资源，并且消耗的资源都是免费的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[成都亚马逊AWSome Day回顾]]></title>
    <link href="http://www.huangbowen.net/blog/2014/07/07/awsome-day-memo/"/>
    <updated>2014-07-07T13:54:42+08:00</updated>
    <id>http://www.huangbowen.net/blog/2014/07/07/awsome-day-memo</id>
    <content type="html"><![CDATA[<p>昨天我和公司同仁一起参加了亚马逊在成都的第一场AWSome Day活动。整个活动时间异常紧促，短短一天包含了7堂session，讲师的狂轰乱炸使得我们同学们普遍觉得比上班累多了。好了，废话不多说，让我们来回顾一下昨天都讲了那些东西。</p>

<!-- more -->


<p>第一个session主题是AWS技术推动的创新。听名称就知道给亚马逊云服务打广告了。里面讲述了AWS各种服务的牛逼，讲师说AWS计算量=其余15家云计算平台总计算量 * 5。是不是吹牛不得而知了。还有一点是AWS自从2006年发布以来经历了43次主动降价。就我个人使用AWS服务而言，感觉价格还是挺公道的。我的个人博客使用了AWS的Route53，S3，CloudFrond等服务，一个月收费也不过1刀多。这个session一句话来总结就是我们最牛B，其它的都是渣渣。当然亚马逊讲师这样说毕竟还是有一定底气的。</p>

<p>第二个session主题是AWS服务概览。讲师带领我们对AWS的服务做了一个整体回顾。其计算服务主要包括EC2，存储服务包括S3，EBS，Glacier。数据库服务包括Redshift，DynamoDB，RDS，ElasticCache。部署与自动化服务包括CloudFormation，BeanStalk，OpsWorks。认证与访问服务IAM。网络服务VPC，Route53，ELB，Direct Connect。分布式计算服务包括Amazon EMR, Auto Scaling。内容传输服务CloudFront。大家看到这里是不是有点头晕了？</p>

<p>第三个session主题是AWS存储服务。讲师仔细介绍了S3，EBS，Glacier三种存储服务的不同与适用场景。S3的容灾率最高，可用性最高，并且每个存储文件附带一个url，可以直接访问。EBS价格公道，需要配合S3或EC2来访问使用。而Glacier相当于存档文件，可以保存10年以上，价格最低。如果你上存储的数据大于1TB，甚至PB级别，亚马逊还贴心的提供了数据Import/Export服务，那速度是杠杠的，可以达到几十GB的传输速率。那么亚马逊是如何达到这样的带宽那？方法是你把你的硬盘邮寄给亚马逊数据中心，亚马逊数据中心直接外挂你的硬盘进行数据导入。</p>

<p>吃了免费的午餐，下午的一大波session又来袭了。</p>

<p>下午第一场session是关于AWS计算服务和网络。讲师介绍了最常用的EC2服务，还有用于大数据分析和挖掘的EMR系统。并且顺带讲述了CloudFront，Rout53，ELB等是如何协作来提供网络应用程序的访问速度的。还有亚马逊那神奇的Auto Scalling技术。安全是云服务的重中之重。亚马逊采用了IAM来统一管理和分配对云上的资源的各种访问。用户可以创建用户名和密码，创建access key，创建用户组等多种方式来控制对各种资源的访问。亚马逊也提供了VPC和路由机制来实现公网和私有局域网的的隔离和访问。</p>

<p>第二场session是关于AWS管理的服务和数据库。亚马逊提供DynamoDB，RDS，Redshift，ElasticCache等与数据库有关的服务。其中DynamoDB是亚马逊自护研发的no sql数据库系统，自然少不了一番大吹特吹。RDS数据库支持mysql，Oracle，sql server等。这些数据库服务都支持自动备份，每隔5分钟备份一次，备份文件可保存0-35天。用户也可以手动备份，将备份文件放置到S3中永久保存。Redshift是亚马逊提供的数据仓库服务，可帮助你使用现有的商业智能工具进行大数据分析和处理。ElasticCache是亚马逊内置的缓存服务，DynamoDB，RDS数据库都可使用，可有效提高数据库吞吐量。</p>

<p>第三场session是AWS的部署和管理。CloudWacth可以检测云上的资源，并根据配置的policy来自动进行scale out和scale in。比如如果CloudWatch发现EC2实例的cpu占用率在90%以上并保持5分钟，则会自动setup新的EC2服务器并注册到ELB上。使用的好的话运维人员再也不同半夜从床上爬起来解决问题了。而CloudFormation，Elastic Beanstalk，OpsWorks都是DevOps工具箱中不可缺少的工具，如果要实现inforstructure as code，这些工具可助你一臂之力。</p>

<p>最后一个session是AWS解决方案参考架构概览。这里主要说明了你的应用程序如果要放到云上，在设计架构的时候需要遵守一定的准则，否则无法使用到云的优势，结果适得其反。比如AWS提供给你菜刀切肉，水果刀切水果。你偏偏拿个水果刀切肉还直吆喝着不好使，那就不对了。总之一句话，架构设计时一定要SOA，SOA，SOA。</p>

<p>OK，大概内容就是这样了。听了以后是不是想亲自动手。什么？还有没有AWS账号？什么？还没有信用卡？什么？不知道哪里有详细的学习文档？</p>

<p>统统忘掉这些吧。AWS祭出了神器：<a href="https://run.qwiklabs.com">https://run.qwiklabs.com</a>。这是一个用于学习和演练亚马逊各种服务的实验室，只需花一分钟注册即可使用。里面有各种服务的详细操作文档，并且支持真实演练。当你选择一堂课后，qwiklabs会自动给你生成一个AWS账号，你可以使用该账号登陆到真实的亚马逊云服务终端中进行各种破坏而不花费你一毛钱。想当年我自己play with AWS各种云服务时可没少花冤枉钱。</p>

<p>熟悉了亚马逊云，学习其它云还不是小菜一碟。</p>
]]></content>
  </entry>
  
</feed>
