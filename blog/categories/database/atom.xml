<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DataBase | 黄博文的地盘]]></title>
  <link href="http://www.huangbowen.net/blog/categories/database/atom.xml" rel="self"/>
  <link href="http://www.huangbowen.net/"/>
  <updated>2013-08-11T12:23:27+10:00</updated>
  <id>http://www.huangbowen.net/</id>
  <author>
    <name><![CDATA[黄博文]]></name>
    <email><![CDATA[huangbowen521@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SQL语法的重要知识点总结]]></title>
    <link href="http://www.huangbowen.net/blog/2013/07/30/concepts-of-sql-statement/"/>
    <updated>2013-07-30T22:31:00+10:00</updated>
    <id>http://www.huangbowen.net/blog/2013/07/30/concepts-of-sql-statement</id>
    <content type="html"><![CDATA[<p>{% img /images/sql_rebel.jpg %}</p>

<p>好几年没写SQL语句了。现在到了新的team，需要用到数据库。作为QA的话时常需要使用客户端工具连接到数据库中找寻或修改数据。这么长时间没使用，一些SQL的使用技巧都忘得差不多了。晚上看了一些资料，花了1个多小时又捡起了曾经的知识。现在总结一下以方便以后查阅。</p>

<!-- more -->


<ol>
<li><p>SQL不是大小写敏感的。</p></li>
<li><p>分号是分割多条SQL语句的标准的分隔符，所以在单条SQL语句后面总加上分隔符是不会出错的。</p></li>
<li><p><code>DISTINCT</code>关键字用于剔除重复的结果数据。<code>SELECT DISTINCT City FROM Customers;</code>意味着从Customers表中返回不重复的City值。</p></li>
<li><p><code>ORDER BY</code>用于对查询结果排序。 <code>ORDER BY column_name ASC</code>表示递增排序，也是默认顺序，可以省略<code>ASC</code>。 <code>ORDER BY column_name DESC</code>表示递减排序; <code>ORDER BY</code>后面可跟多个列名进行排序。</p></li>
<li><p>返回指定数目的记录。在<code>SQL Server/MS Access</code>中可以使用 <code>SELECT TOP number|percent column_name(s)
FROM table_name;</code> MySQl中语法是 <code>SELECT column_name(s)
FROM table_name
LIMIT number;</code>Oracle中语法是<code>SELECT column_name(s)
FROM table_name
WHERE ROWNUM &lt;= number;</code>.  <code>SELECT TOP number PERCENT * FROM table</code>可以返回指定指定百分数的数据。</p></li>
<li><p>使用<code>LIKE</code>可以匹配字符串值，同时可以使用通配符。<code>%</code>匹配0或多个字符，<code>_</code>匹配一个字符，<code>[charlist]</code>匹配一组字符，<code>[^charlist]</code>或<code>[!charlist]</code>表示匹配不在此列表中的字符。</p></li>
<li><p>使用<code>AS</code>关键字可以给列或表起别名。也可以给组合后的列起别名，如 <code>SELECT CustomerName, Address+', '+City+', '+PostalCode+', '+Country AS Address
FROM Customers;</code></p></li>
<li><p>使用<code>JOIN</code>关键字可以合并两个或连个以上的表的数据行，要基于所有表中的某一列建立一个连接条件。Join有四种：</p>

<ul>
<li>INNER JOIN返回两个表中满足条件的行数据。</li>
<li>LEFT JOIN返回左表所有行数据及满足条件的右表行数据。</li>
<li>RIGHT JOIN返回右表的所有行数据及满足条件的左表行数据。</li>
<li>FULL JOIN返回左表和右表所有行数据行。</li>
</ul>
</li>
<li><p><code>UNION</code>用于合并两个或多个查询结果。要求查询结果的列数及数据类型要一样。</p></li>
<li><p><code>SELECT INTO</code>可以将一个表中数据插入到另一个新表中。如 <code>SELECT *
INTO CustomersBackup2013
FROM Customers;</code>它还有个巧妙的用法是创建一个空的新表格，其schema与后者一致,方法是<code>SELECT *
INTO newtable
FROM table1
WHERE 1=0;</code></p></li>
<li><p><code>INSERT INTO SELECT</code>与<code>SELECT INTO</code>使用较相似，不同的是<code>SELECT INTO</code>会创建新表,而<code>INSERT INTO SELECT</code>是插入到已存在的表中。</p></li>
<li><p>一些常用的SQL函数。（注意这些函数并一定都是通用的，但所有数据库基本上都有类似的功能）</p>

<p><strong>聚合函数</strong></p>

<ul>
<li>AVG() - 求平均值</li>
<li>COUNT() - 返回行数</li>
<li>FIRST() - 返回第一个值</li>
<li>LAST() - 返回最后一个值</li>
<li>MAX() - 返回最大值</li>
<li>MIN() - 返回最小值</li>
<li>SUM() - 求和</li>
</ul>


<p><strong>其他常用函数</strong></p>

<ul>
<li>UCASE() - 转换为大写</li>
<li>LCASE() - 转换为小写</li>
<li>MID() - 提取字符串</li>
<li>LEN() - 获取字符串长度</li>
<li>ROUND() - 对数据进行舍入</li>
<li>NOW() - 返回当前系统时间</li>
<li>FORMAT() - 格式化field的显示</li>
</ul>
</li>
<li><p><code>GROUP BY</code>用于对使用了聚合函数的查询结果进行分组。这是一个很强大的语法。</p></li>
<li><p><code>HAVING</code>用于对使用了聚合函数的字段进行条件筛选。</p></li>
</ol>


<p>如果要详细了解SQL的这些使用的话，我推荐<a href="http://www.w3schools.com/sql/default.asp">http://www.w3schools.com/sql/default.asp</a>。你不仅可以看到说明和示例，也可以随时实时练习。实在是不可不得的好网站。</p>
]]></content>
  </entry>
  
</feed>
